//
// File generated by rootcint at Thu Jul 13 14:26:02 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME _ROOT_DICT_Fragmentation
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "_ROOT_DICT_Fragmentation.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace genie {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void genie_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("genie", 0 /*version*/, "./PythiaHadronization.h", 27,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &genie_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void genie_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOTDict {
   void geniecLcLHadronizationModelI_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLHadronizationModelI_Dictionary();
   static void delete_geniecLcLHadronizationModelI(void *p);
   static void deleteArray_geniecLcLHadronizationModelI(void *p);
   static void destruct_geniecLcLHadronizationModelI(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::HadronizationModelI*)
   {
      ::genie::HadronizationModelI *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::HadronizationModelI),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::HadronizationModelI", "/users/mouland/Documents/GENIE_NCGamma/src//Fragmentation/HadronizationModelI.h", 34,
                  typeid(::genie::HadronizationModelI), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLHadronizationModelI_Dictionary, isa_proxy, 0,
                  sizeof(::genie::HadronizationModelI) );
      instance.SetDelete(&delete_geniecLcLHadronizationModelI);
      instance.SetDeleteArray(&deleteArray_geniecLcLHadronizationModelI);
      instance.SetDestructor(&destruct_geniecLcLHadronizationModelI);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::HadronizationModelI*)
   {
      return GenerateInitInstanceLocal((::genie::HadronizationModelI*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::HadronizationModelI*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLHadronizationModelI_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::HadronizationModelI*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLFragmentationFunctionI_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLFragmentationFunctionI_Dictionary();
   static void delete_geniecLcLFragmentationFunctionI(void *p);
   static void deleteArray_geniecLcLFragmentationFunctionI(void *p);
   static void destruct_geniecLcLFragmentationFunctionI(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::FragmentationFunctionI*)
   {
      ::genie::FragmentationFunctionI *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::FragmentationFunctionI),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::FragmentationFunctionI", "/users/mouland/Documents/GENIE_NCGamma/src//Fragmentation/FragmentationFunctionI.h", 28,
                  typeid(::genie::FragmentationFunctionI), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLFragmentationFunctionI_Dictionary, isa_proxy, 0,
                  sizeof(::genie::FragmentationFunctionI) );
      instance.SetDelete(&delete_geniecLcLFragmentationFunctionI);
      instance.SetDeleteArray(&deleteArray_geniecLcLFragmentationFunctionI);
      instance.SetDestructor(&destruct_geniecLcLFragmentationFunctionI);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::FragmentationFunctionI*)
   {
      return GenerateInitInstanceLocal((::genie::FragmentationFunctionI*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::FragmentationFunctionI*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLFragmentationFunctionI_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::FragmentationFunctionI*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLCharmHadronization_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLCharmHadronization_Dictionary();
   static void *new_geniecLcLCharmHadronization(void *p = 0);
   static void *newArray_geniecLcLCharmHadronization(Long_t size, void *p);
   static void delete_geniecLcLCharmHadronization(void *p);
   static void deleteArray_geniecLcLCharmHadronization(void *p);
   static void destruct_geniecLcLCharmHadronization(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::CharmHadronization*)
   {
      ::genie::CharmHadronization *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::CharmHadronization),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::CharmHadronization", "./CharmHadronization.h", 38,
                  typeid(::genie::CharmHadronization), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLCharmHadronization_Dictionary, isa_proxy, 0,
                  sizeof(::genie::CharmHadronization) );
      instance.SetNew(&new_geniecLcLCharmHadronization);
      instance.SetNewArray(&newArray_geniecLcLCharmHadronization);
      instance.SetDelete(&delete_geniecLcLCharmHadronization);
      instance.SetDeleteArray(&deleteArray_geniecLcLCharmHadronization);
      instance.SetDestructor(&destruct_geniecLcLCharmHadronization);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::CharmHadronization*)
   {
      return GenerateInitInstanceLocal((::genie::CharmHadronization*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::CharmHadronization*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLCharmHadronization_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::CharmHadronization*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLCollinsSpillerFragm_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLCollinsSpillerFragm_Dictionary();
   static void *new_geniecLcLCollinsSpillerFragm(void *p = 0);
   static void *newArray_geniecLcLCollinsSpillerFragm(Long_t size, void *p);
   static void delete_geniecLcLCollinsSpillerFragm(void *p);
   static void deleteArray_geniecLcLCollinsSpillerFragm(void *p);
   static void destruct_geniecLcLCollinsSpillerFragm(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::CollinsSpillerFragm*)
   {
      ::genie::CollinsSpillerFragm *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::CollinsSpillerFragm),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::CollinsSpillerFragm", "./CollinsSpillerFragm.h", 31,
                  typeid(::genie::CollinsSpillerFragm), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLCollinsSpillerFragm_Dictionary, isa_proxy, 0,
                  sizeof(::genie::CollinsSpillerFragm) );
      instance.SetNew(&new_geniecLcLCollinsSpillerFragm);
      instance.SetNewArray(&newArray_geniecLcLCollinsSpillerFragm);
      instance.SetDelete(&delete_geniecLcLCollinsSpillerFragm);
      instance.SetDeleteArray(&deleteArray_geniecLcLCollinsSpillerFragm);
      instance.SetDestructor(&destruct_geniecLcLCollinsSpillerFragm);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::CollinsSpillerFragm*)
   {
      return GenerateInitInstanceLocal((::genie::CollinsSpillerFragm*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::CollinsSpillerFragm*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLCollinsSpillerFragm_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::CollinsSpillerFragm*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace genie {
namespace utils {
namespace frgmfunc {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void geniecLcLutilscLcLfrgmfunc_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("genie::utils::frgmfunc", 0 /*version*/, "./FragmentationFunctions.h", 24,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &geniecLcLutilscLcLfrgmfunc_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void geniecLcLutilscLcLfrgmfunc_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}
}
}

namespace ROOTDict {
   void geniecLcLHadronizationModelBase_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLHadronizationModelBase_Dictionary();

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::HadronizationModelBase*)
   {
      ::genie::HadronizationModelBase *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::HadronizationModelBase),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::HadronizationModelBase", "./HadronizationModelBase.h", 28,
                  typeid(::genie::HadronizationModelBase), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLHadronizationModelBase_Dictionary, isa_proxy, 0,
                  sizeof(::genie::HadronizationModelBase) );
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::HadronizationModelBase*)
   {
      return GenerateInitInstanceLocal((::genie::HadronizationModelBase*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::HadronizationModelBase*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLHadronizationModelBase_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::HadronizationModelBase*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLKNOHadronization_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLKNOHadronization_Dictionary();
   static void *new_geniecLcLKNOHadronization(void *p = 0);
   static void *newArray_geniecLcLKNOHadronization(Long_t size, void *p);
   static void delete_geniecLcLKNOHadronization(void *p);
   static void deleteArray_geniecLcLKNOHadronization(void *p);
   static void destruct_geniecLcLKNOHadronization(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::KNOHadronization*)
   {
      ::genie::KNOHadronization *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::KNOHadronization),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::KNOHadronization", "./KNOHadronization.h", 47,
                  typeid(::genie::KNOHadronization), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLKNOHadronization_Dictionary, isa_proxy, 0,
                  sizeof(::genie::KNOHadronization) );
      instance.SetNew(&new_geniecLcLKNOHadronization);
      instance.SetNewArray(&newArray_geniecLcLKNOHadronization);
      instance.SetDelete(&delete_geniecLcLKNOHadronization);
      instance.SetDeleteArray(&deleteArray_geniecLcLKNOHadronization);
      instance.SetDestructor(&destruct_geniecLcLKNOHadronization);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::KNOHadronization*)
   {
      return GenerateInitInstanceLocal((::genie::KNOHadronization*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::KNOHadronization*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLKNOHadronization_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::KNOHadronization*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLKNOPythiaHadronization_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLKNOPythiaHadronization_Dictionary();
   static void *new_geniecLcLKNOPythiaHadronization(void *p = 0);
   static void *newArray_geniecLcLKNOPythiaHadronization(Long_t size, void *p);
   static void delete_geniecLcLKNOPythiaHadronization(void *p);
   static void deleteArray_geniecLcLKNOPythiaHadronization(void *p);
   static void destruct_geniecLcLKNOPythiaHadronization(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::KNOPythiaHadronization*)
   {
      ::genie::KNOPythiaHadronization *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::KNOPythiaHadronization),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::KNOPythiaHadronization", "./KNOPythiaHadronization.h", 29,
                  typeid(::genie::KNOPythiaHadronization), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLKNOPythiaHadronization_Dictionary, isa_proxy, 0,
                  sizeof(::genie::KNOPythiaHadronization) );
      instance.SetNew(&new_geniecLcLKNOPythiaHadronization);
      instance.SetNewArray(&newArray_geniecLcLKNOPythiaHadronization);
      instance.SetDelete(&delete_geniecLcLKNOPythiaHadronization);
      instance.SetDeleteArray(&deleteArray_geniecLcLKNOPythiaHadronization);
      instance.SetDestructor(&destruct_geniecLcLKNOPythiaHadronization);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::KNOPythiaHadronization*)
   {
      return GenerateInitInstanceLocal((::genie::KNOPythiaHadronization*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::KNOPythiaHadronization*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLKNOPythiaHadronization_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::KNOPythiaHadronization*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLPetersonFragm_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLPetersonFragm_Dictionary();
   static void *new_geniecLcLPetersonFragm(void *p = 0);
   static void *newArray_geniecLcLPetersonFragm(Long_t size, void *p);
   static void delete_geniecLcLPetersonFragm(void *p);
   static void deleteArray_geniecLcLPetersonFragm(void *p);
   static void destruct_geniecLcLPetersonFragm(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::PetersonFragm*)
   {
      ::genie::PetersonFragm *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::PetersonFragm),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::PetersonFragm", "./PetersonFragm.h", 31,
                  typeid(::genie::PetersonFragm), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLPetersonFragm_Dictionary, isa_proxy, 0,
                  sizeof(::genie::PetersonFragm) );
      instance.SetNew(&new_geniecLcLPetersonFragm);
      instance.SetNewArray(&newArray_geniecLcLPetersonFragm);
      instance.SetDelete(&delete_geniecLcLPetersonFragm);
      instance.SetDeleteArray(&deleteArray_geniecLcLPetersonFragm);
      instance.SetDestructor(&destruct_geniecLcLPetersonFragm);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::PetersonFragm*)
   {
      return GenerateInitInstanceLocal((::genie::PetersonFragm*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::PetersonFragm*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLPetersonFragm_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::PetersonFragm*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLPythiaHadronization_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLPythiaHadronization_Dictionary();
   static void *new_geniecLcLPythiaHadronization(void *p = 0);
   static void *newArray_geniecLcLPythiaHadronization(Long_t size, void *p);
   static void delete_geniecLcLPythiaHadronization(void *p);
   static void deleteArray_geniecLcLPythiaHadronization(void *p);
   static void destruct_geniecLcLPythiaHadronization(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::PythiaHadronization*)
   {
      ::genie::PythiaHadronization *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::PythiaHadronization),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::PythiaHadronization", "./PythiaHadronization.h", 30,
                  typeid(::genie::PythiaHadronization), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLPythiaHadronization_Dictionary, isa_proxy, 0,
                  sizeof(::genie::PythiaHadronization) );
      instance.SetNew(&new_geniecLcLPythiaHadronization);
      instance.SetNewArray(&newArray_geniecLcLPythiaHadronization);
      instance.SetDelete(&delete_geniecLcLPythiaHadronization);
      instance.SetDeleteArray(&deleteArray_geniecLcLPythiaHadronization);
      instance.SetDestructor(&destruct_geniecLcLPythiaHadronization);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::PythiaHadronization*)
   {
      return GenerateInitInstanceLocal((::genie::PythiaHadronization*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::PythiaHadronization*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLPythiaHadronization_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::PythiaHadronization*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_geniecLcLHadronizationModelI(void *p) {
      delete ((::genie::HadronizationModelI*)p);
   }
   static void deleteArray_geniecLcLHadronizationModelI(void *p) {
      delete [] ((::genie::HadronizationModelI*)p);
   }
   static void destruct_geniecLcLHadronizationModelI(void *p) {
      typedef ::genie::HadronizationModelI current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::HadronizationModelI

namespace ROOTDict {
} // end of namespace ROOTDict for class ::genie::HadronizationModelBase

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_geniecLcLPythiaHadronization(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::PythiaHadronization : new ::genie::PythiaHadronization;
   }
   static void *newArray_geniecLcLPythiaHadronization(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::PythiaHadronization[nElements] : new ::genie::PythiaHadronization[nElements];
   }
   // Wrapper around operator delete
   static void delete_geniecLcLPythiaHadronization(void *p) {
      delete ((::genie::PythiaHadronization*)p);
   }
   static void deleteArray_geniecLcLPythiaHadronization(void *p) {
      delete [] ((::genie::PythiaHadronization*)p);
   }
   static void destruct_geniecLcLPythiaHadronization(void *p) {
      typedef ::genie::PythiaHadronization current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::PythiaHadronization

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_geniecLcLKNOHadronization(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::KNOHadronization : new ::genie::KNOHadronization;
   }
   static void *newArray_geniecLcLKNOHadronization(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::KNOHadronization[nElements] : new ::genie::KNOHadronization[nElements];
   }
   // Wrapper around operator delete
   static void delete_geniecLcLKNOHadronization(void *p) {
      delete ((::genie::KNOHadronization*)p);
   }
   static void deleteArray_geniecLcLKNOHadronization(void *p) {
      delete [] ((::genie::KNOHadronization*)p);
   }
   static void destruct_geniecLcLKNOHadronization(void *p) {
      typedef ::genie::KNOHadronization current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::KNOHadronization

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_geniecLcLKNOPythiaHadronization(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::KNOPythiaHadronization : new ::genie::KNOPythiaHadronization;
   }
   static void *newArray_geniecLcLKNOPythiaHadronization(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::KNOPythiaHadronization[nElements] : new ::genie::KNOPythiaHadronization[nElements];
   }
   // Wrapper around operator delete
   static void delete_geniecLcLKNOPythiaHadronization(void *p) {
      delete ((::genie::KNOPythiaHadronization*)p);
   }
   static void deleteArray_geniecLcLKNOPythiaHadronization(void *p) {
      delete [] ((::genie::KNOPythiaHadronization*)p);
   }
   static void destruct_geniecLcLKNOPythiaHadronization(void *p) {
      typedef ::genie::KNOPythiaHadronization current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::KNOPythiaHadronization

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_geniecLcLCharmHadronization(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::CharmHadronization : new ::genie::CharmHadronization;
   }
   static void *newArray_geniecLcLCharmHadronization(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::CharmHadronization[nElements] : new ::genie::CharmHadronization[nElements];
   }
   // Wrapper around operator delete
   static void delete_geniecLcLCharmHadronization(void *p) {
      delete ((::genie::CharmHadronization*)p);
   }
   static void deleteArray_geniecLcLCharmHadronization(void *p) {
      delete [] ((::genie::CharmHadronization*)p);
   }
   static void destruct_geniecLcLCharmHadronization(void *p) {
      typedef ::genie::CharmHadronization current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::CharmHadronization

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_geniecLcLFragmentationFunctionI(void *p) {
      delete ((::genie::FragmentationFunctionI*)p);
   }
   static void deleteArray_geniecLcLFragmentationFunctionI(void *p) {
      delete [] ((::genie::FragmentationFunctionI*)p);
   }
   static void destruct_geniecLcLFragmentationFunctionI(void *p) {
      typedef ::genie::FragmentationFunctionI current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::FragmentationFunctionI

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_geniecLcLPetersonFragm(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::PetersonFragm : new ::genie::PetersonFragm;
   }
   static void *newArray_geniecLcLPetersonFragm(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::PetersonFragm[nElements] : new ::genie::PetersonFragm[nElements];
   }
   // Wrapper around operator delete
   static void delete_geniecLcLPetersonFragm(void *p) {
      delete ((::genie::PetersonFragm*)p);
   }
   static void deleteArray_geniecLcLPetersonFragm(void *p) {
      delete [] ((::genie::PetersonFragm*)p);
   }
   static void destruct_geniecLcLPetersonFragm(void *p) {
      typedef ::genie::PetersonFragm current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::PetersonFragm

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_geniecLcLCollinsSpillerFragm(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::CollinsSpillerFragm : new ::genie::CollinsSpillerFragm;
   }
   static void *newArray_geniecLcLCollinsSpillerFragm(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::CollinsSpillerFragm[nElements] : new ::genie::CollinsSpillerFragm[nElements];
   }
   // Wrapper around operator delete
   static void delete_geniecLcLCollinsSpillerFragm(void *p) {
      delete ((::genie::CollinsSpillerFragm*)p);
   }
   static void deleteArray_geniecLcLCollinsSpillerFragm(void *p) {
      delete [] ((::genie::CollinsSpillerFragm*)p);
   }
   static void destruct_geniecLcLCollinsSpillerFragm(void *p) {
      typedef ::genie::CollinsSpillerFragm current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::CollinsSpillerFragm

/********************************************************
* _ROOT_DICT_Fragmentation.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtable_ROOT_DICT_Fragmentation();

extern "C" void G__set_cpp_environment_ROOT_DICT_Fragmentation() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("CharmHadronization.h");
  G__add_compiledheader("CollinsSpillerFragm.h");
  G__add_compiledheader("FragmentationFunctionI.h");
  G__add_compiledheader("FragmentationFunctions.h");
  G__add_compiledheader("HadronizationModelBase.h");
  G__add_compiledheader("HadronizationModelI.h");
  G__add_compiledheader("KNOHadronization.h");
  G__add_compiledheader("KNOPythiaHadronization.h");
  G__add_compiledheader("PetersonFragm.h");
  G__add_compiledheader("PythiaHadronization.h");
  G__cpp_reset_tagtable_ROOT_DICT_Fragmentation();
}
#include <new>
extern "C" int G__cpp_dllrev_ROOT_DICT_Fragmentation() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* genie */
static int G___ROOT_DICT_Fragmentation_462_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = genie::operator<<(*(ostream*) libp->para[0].ref, *(genie::AlgId*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Fragmentation_462_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = genie::operator<<(*(ostream*) libp->para[0].ref, *(genie::Registry*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Fragmentation_462_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = genie::operator<<(*(ostream*) libp->para[0].ref, *(genie::Algorithm*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::HadronizationModelI */
static int G___ROOT_DICT_Fragmentation_601_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const genie::HadronizationModelI*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Fragmentation_601_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const genie::HadronizationModelI*) G__getstructoffset())->Hadronize((genie::Interaction*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Fragmentation_601_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::HadronizationModelI*) G__getstructoffset())->Weight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Fragmentation_601_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const genie::HadronizationModelI*) G__getstructoffset())->SelectParticles((genie::Interaction*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Fragmentation_601_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((const genie::HadronizationModelI*) G__getstructoffset())->MultiplicityProb((genie::Interaction*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((const genie::HadronizationModelI*) G__getstructoffset())->MultiplicityProb((genie::Interaction*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::HadronizationModelI G__TgeniecLcLHadronizationModelI;
static int G___ROOT_DICT_Fragmentation_601_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::HadronizationModelI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::HadronizationModelI*) (soff+(sizeof(genie::HadronizationModelI)*i)))->~G__TgeniecLcLHadronizationModelI();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::HadronizationModelI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::HadronizationModelI*) (soff))->~G__TgeniecLcLHadronizationModelI();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Fragmentation_601_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::HadronizationModelI* dest = (genie::HadronizationModelI*) G__getstructoffset();
   *dest = *(genie::HadronizationModelI*) libp->para[0].ref;
   const genie::HadronizationModelI& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::FragmentationFunctionI */
static int G___ROOT_DICT_Fragmentation_604_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::FragmentationFunctionI*) G__getstructoffset())->Value((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Fragmentation_604_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::FragmentationFunctionI*) G__getstructoffset())->GenerateZ());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::FragmentationFunctionI G__TgeniecLcLFragmentationFunctionI;
static int G___ROOT_DICT_Fragmentation_604_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::FragmentationFunctionI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::FragmentationFunctionI*) (soff+(sizeof(genie::FragmentationFunctionI)*i)))->~G__TgeniecLcLFragmentationFunctionI();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::FragmentationFunctionI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::FragmentationFunctionI*) (soff))->~G__TgeniecLcLFragmentationFunctionI();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Fragmentation_604_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::FragmentationFunctionI* dest = (genie::FragmentationFunctionI*) G__getstructoffset();
   *dest = *(genie::FragmentationFunctionI*) libp->para[0].ref;
   const genie::FragmentationFunctionI& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::CharmHadronization */
static int G___ROOT_DICT_Fragmentation_605_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::CharmHadronization* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::CharmHadronization[n];
     } else {
       p = new((void*) gvp) genie::CharmHadronization[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::CharmHadronization;
     } else {
       p = new((void*) gvp) genie::CharmHadronization;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLCharmHadronization));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Fragmentation_605_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::CharmHadronization* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::CharmHadronization(*((string*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) genie::CharmHadronization(*((string*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLCharmHadronization));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_Fragmentation_605_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genie::CharmHadronization* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genie::CharmHadronization(*(genie::CharmHadronization*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLCharmHadronization));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::CharmHadronization G__TgeniecLcLCharmHadronization;
static int G___ROOT_DICT_Fragmentation_605_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::CharmHadronization*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::CharmHadronization*) (soff+(sizeof(genie::CharmHadronization)*i)))->~G__TgeniecLcLCharmHadronization();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::CharmHadronization*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::CharmHadronization*) (soff))->~G__TgeniecLcLCharmHadronization();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::CollinsSpillerFragm */
static int G___ROOT_DICT_Fragmentation_619_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::CollinsSpillerFragm* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::CollinsSpillerFragm[n];
     } else {
       p = new((void*) gvp) genie::CollinsSpillerFragm[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::CollinsSpillerFragm;
     } else {
       p = new((void*) gvp) genie::CollinsSpillerFragm;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLCollinsSpillerFragm));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Fragmentation_619_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::CollinsSpillerFragm* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::CollinsSpillerFragm(*((string*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) genie::CollinsSpillerFragm(*((string*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLCollinsSpillerFragm));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_Fragmentation_619_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genie::CollinsSpillerFragm* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genie::CollinsSpillerFragm(*(genie::CollinsSpillerFragm*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLCollinsSpillerFragm));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::CollinsSpillerFragm G__TgeniecLcLCollinsSpillerFragm;
static int G___ROOT_DICT_Fragmentation_619_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::CollinsSpillerFragm*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::CollinsSpillerFragm*) (soff+(sizeof(genie::CollinsSpillerFragm)*i)))->~G__TgeniecLcLCollinsSpillerFragm();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::CollinsSpillerFragm*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::CollinsSpillerFragm*) (soff))->~G__TgeniecLcLCollinsSpillerFragm();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Fragmentation_619_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::CollinsSpillerFragm* dest = (genie::CollinsSpillerFragm*) G__getstructoffset();
   *dest = *(genie::CollinsSpillerFragm*) libp->para[0].ref;
   const genie::CollinsSpillerFragm& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::utils::frgmfunc */
static int G___ROOT_DICT_Fragmentation_621_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) genie::utils::frgmfunc::collins_spiller_func((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Fragmentation_621_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) genie::utils::frgmfunc::peterson_func((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::HadronizationModelBase */
// automatic assignment operator
static int G___ROOT_DICT_Fragmentation_622_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::HadronizationModelBase* dest = (genie::HadronizationModelBase*) G__getstructoffset();
   *dest = *(genie::HadronizationModelBase*) libp->para[0].ref;
   const genie::HadronizationModelBase& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::KNOHadronization */
static int G___ROOT_DICT_Fragmentation_624_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::KNOHadronization* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::KNOHadronization[n];
     } else {
       p = new((void*) gvp) genie::KNOHadronization[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::KNOHadronization;
     } else {
       p = new((void*) gvp) genie::KNOHadronization;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLKNOHadronization));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Fragmentation_624_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::KNOHadronization* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::KNOHadronization(*((string*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) genie::KNOHadronization(*((string*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLKNOHadronization));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_Fragmentation_624_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genie::KNOHadronization* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genie::KNOHadronization(*(genie::KNOHadronization*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLKNOHadronization));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::KNOHadronization G__TgeniecLcLKNOHadronization;
static int G___ROOT_DICT_Fragmentation_624_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::KNOHadronization*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::KNOHadronization*) (soff+(sizeof(genie::KNOHadronization)*i)))->~G__TgeniecLcLKNOHadronization();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::KNOHadronization*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::KNOHadronization*) (soff))->~G__TgeniecLcLKNOHadronization();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::KNOPythiaHadronization */
static int G___ROOT_DICT_Fragmentation_625_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::KNOPythiaHadronization* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::KNOPythiaHadronization[n];
     } else {
       p = new((void*) gvp) genie::KNOPythiaHadronization[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::KNOPythiaHadronization;
     } else {
       p = new((void*) gvp) genie::KNOPythiaHadronization;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLKNOPythiaHadronization));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Fragmentation_625_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::KNOPythiaHadronization* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::KNOPythiaHadronization(*((string*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) genie::KNOPythiaHadronization(*((string*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLKNOPythiaHadronization));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_Fragmentation_625_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genie::KNOPythiaHadronization* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genie::KNOPythiaHadronization(*(genie::KNOPythiaHadronization*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLKNOPythiaHadronization));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::KNOPythiaHadronization G__TgeniecLcLKNOPythiaHadronization;
static int G___ROOT_DICT_Fragmentation_625_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::KNOPythiaHadronization*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::KNOPythiaHadronization*) (soff+(sizeof(genie::KNOPythiaHadronization)*i)))->~G__TgeniecLcLKNOPythiaHadronization();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::KNOPythiaHadronization*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::KNOPythiaHadronization*) (soff))->~G__TgeniecLcLKNOPythiaHadronization();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::PetersonFragm */
static int G___ROOT_DICT_Fragmentation_626_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::PetersonFragm* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::PetersonFragm[n];
     } else {
       p = new((void*) gvp) genie::PetersonFragm[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::PetersonFragm;
     } else {
       p = new((void*) gvp) genie::PetersonFragm;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLPetersonFragm));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Fragmentation_626_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::PetersonFragm* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::PetersonFragm(*((string*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) genie::PetersonFragm(*((string*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLPetersonFragm));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_Fragmentation_626_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genie::PetersonFragm* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genie::PetersonFragm(*(genie::PetersonFragm*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLPetersonFragm));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::PetersonFragm G__TgeniecLcLPetersonFragm;
static int G___ROOT_DICT_Fragmentation_626_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::PetersonFragm*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::PetersonFragm*) (soff+(sizeof(genie::PetersonFragm)*i)))->~G__TgeniecLcLPetersonFragm();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::PetersonFragm*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::PetersonFragm*) (soff))->~G__TgeniecLcLPetersonFragm();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Fragmentation_626_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::PetersonFragm* dest = (genie::PetersonFragm*) G__getstructoffset();
   *dest = *(genie::PetersonFragm*) libp->para[0].ref;
   const genie::PetersonFragm& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::PythiaHadronization */
static int G___ROOT_DICT_Fragmentation_651_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::PythiaHadronization* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::PythiaHadronization[n];
     } else {
       p = new((void*) gvp) genie::PythiaHadronization[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::PythiaHadronization;
     } else {
       p = new((void*) gvp) genie::PythiaHadronization;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLPythiaHadronization));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Fragmentation_651_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::PythiaHadronization* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::PythiaHadronization(*((string*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) genie::PythiaHadronization(*((string*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLPythiaHadronization));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_Fragmentation_651_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genie::PythiaHadronization* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genie::PythiaHadronization(*(genie::PythiaHadronization*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLPythiaHadronization));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::PythiaHadronization G__TgeniecLcLPythiaHadronization;
static int G___ROOT_DICT_Fragmentation_651_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::PythiaHadronization*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::PythiaHadronization*) (soff+(sizeof(genie::PythiaHadronization)*i)))->~G__TgeniecLcLPythiaHadronization();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::PythiaHadronization*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::PythiaHadronization*) (soff))->~G__TgeniecLcLPythiaHadronization();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* genie */

/* genie::HadronizationModelI */

/* genie::FragmentationFunctionI */

/* genie::CharmHadronization */

/* genie::CollinsSpillerFragm */

/* genie::utils::frgmfunc */

/* genie::HadronizationModelBase */

/* genie::KNOHadronization */

/* genie::KNOPythiaHadronization */

/* genie::PetersonFragm */

/* genie::PythiaHadronization */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfunc_ROOT_DICT_Fragmentation {
 public:
  G__Sizep2memfunc_ROOT_DICT_Fragmentation(): p(&G__Sizep2memfunc_ROOT_DICT_Fragmentation::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfunc_ROOT_DICT_Fragmentation::*p)();
};

size_t G__get_sizep2memfunc_ROOT_DICT_Fragmentation()
{
  G__Sizep2memfunc_ROOT_DICT_Fragmentation a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritance_ROOT_DICT_Fragmentation() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLHadronizationModelI))) {
     genie::HadronizationModelI *G__Lderived;
     G__Lderived=(genie::HadronizationModelI*)0x1000;
     {
       genie::Algorithm *G__Lpbase=(genie::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLHadronizationModelI),G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLFragmentationFunctionI))) {
     genie::FragmentationFunctionI *G__Lderived;
     G__Lderived=(genie::FragmentationFunctionI*)0x1000;
     {
       genie::Algorithm *G__Lpbase=(genie::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLFragmentationFunctionI),G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLCharmHadronization))) {
     genie::CharmHadronization *G__Lderived;
     G__Lderived=(genie::CharmHadronization*)0x1000;
     {
       genie::HadronizationModelI *G__Lpbase=(genie::HadronizationModelI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLCharmHadronization),G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLHadronizationModelI),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       genie::Algorithm *G__Lpbase=(genie::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLCharmHadronization),G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLCollinsSpillerFragm))) {
     genie::CollinsSpillerFragm *G__Lderived;
     G__Lderived=(genie::CollinsSpillerFragm*)0x1000;
     {
       genie::FragmentationFunctionI *G__Lpbase=(genie::FragmentationFunctionI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLCollinsSpillerFragm),G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLFragmentationFunctionI),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       genie::Algorithm *G__Lpbase=(genie::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLCollinsSpillerFragm),G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLHadronizationModelBase))) {
     genie::HadronizationModelBase *G__Lderived;
     G__Lderived=(genie::HadronizationModelBase*)0x1000;
     {
       genie::HadronizationModelI *G__Lpbase=(genie::HadronizationModelI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLHadronizationModelBase),G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLHadronizationModelI),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       genie::Algorithm *G__Lpbase=(genie::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLHadronizationModelBase),G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLKNOHadronization))) {
     genie::KNOHadronization *G__Lderived;
     G__Lderived=(genie::KNOHadronization*)0x1000;
     {
       genie::HadronizationModelBase *G__Lpbase=(genie::HadronizationModelBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLKNOHadronization),G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLHadronizationModelBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       genie::HadronizationModelI *G__Lpbase=(genie::HadronizationModelI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLKNOHadronization),G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLHadronizationModelI),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       genie::Algorithm *G__Lpbase=(genie::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLKNOHadronization),G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLKNOPythiaHadronization))) {
     genie::KNOPythiaHadronization *G__Lderived;
     G__Lderived=(genie::KNOPythiaHadronization*)0x1000;
     {
       genie::HadronizationModelI *G__Lpbase=(genie::HadronizationModelI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLKNOPythiaHadronization),G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLHadronizationModelI),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       genie::Algorithm *G__Lpbase=(genie::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLKNOPythiaHadronization),G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLPetersonFragm))) {
     genie::PetersonFragm *G__Lderived;
     G__Lderived=(genie::PetersonFragm*)0x1000;
     {
       genie::FragmentationFunctionI *G__Lpbase=(genie::FragmentationFunctionI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLPetersonFragm),G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLFragmentationFunctionI),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       genie::Algorithm *G__Lpbase=(genie::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLPetersonFragm),G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLPythiaHadronization))) {
     genie::PythiaHadronization *G__Lderived;
     G__Lderived=(genie::PythiaHadronization*)0x1000;
     {
       genie::HadronizationModelBase *G__Lpbase=(genie::HadronizationModelBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLPythiaHadronization),G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLHadronizationModelBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       genie::HadronizationModelI *G__Lpbase=(genie::HadronizationModelI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLPythiaHadronization),G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLHadronizationModelI),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       genie::Algorithm *G__Lpbase=(genie::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLPythiaHadronization),G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetable_ROOT_DICT_Fragmentation() {

   /* Setting up typedef entry */
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("AlgStatus_t",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLEAlgStatus),0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("AlgCmp_t",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLEAlgCmp),0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RgType_t",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLERgType),0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<RgKey,RegistryItemI*>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,genie::RegistryItemI*>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,genie::RegistryItemI*,less<string> >",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RgIMap",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgR),0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<RgKey,RegistryItemI*>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_pairlEstringcOgeniecLcLRegistryItemImUgR),0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RgIMapPair",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_pairlEstringcOgeniecLcLRegistryItemImUgR),0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RgIMapSizeType",107,-1,0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RgIMapIter",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgRcLcLiterator),0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RgIMapConstIter",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgRcLcLiterator),0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RgKey>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RgKeyList",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_vectorlEstringcOallocatorlEstringgRsPgR),0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Algorithm*>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,genie::Algorithm*>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,genie::Algorithm*,less<string> >",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("AlgMap",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgR),0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("AlgMapIter",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgRcLcLiterator),0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("AlgMapConstIter",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgRcLcLiterator),0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<string,Algorithm*>",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_pairlEstringcOgeniecLcLAlgorithmmUgR),0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("AlgMapPair",117,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_pairlEstringcOgeniecLcLAlgorithmmUgR),0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_genie));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* genie */
static void G__setup_memvargenie(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_genie));
   {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLEAlgStatus),-1,-2,1,G__FastAllocString(2048).Format("kAlgUndefinedStatus=%lldLL",(long long)genie::kAlgUndefinedStatus).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLEAlgStatus),-1,-2,1,G__FastAllocString(2048).Format("kAlgFail=%lldLL",(long long)genie::kAlgFail).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLEAlgStatus),-1,-2,1,G__FastAllocString(2048).Format("kAlgSuccess=%lldLL",(long long)genie::kAlgSuccess).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLEAlgCmp),-1,-2,1,G__FastAllocString(2048).Format("kAlgCmpUnknown=%lldLL",(long long)genie::kAlgCmpUnknown).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLEAlgCmp),-1,-2,1,G__FastAllocString(2048).Format("kAlgCmpIdentical=%lldLL",(long long)genie::kAlgCmpIdentical).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLEAlgCmp),-1,-2,1,G__FastAllocString(2048).Format("kAlgCmpDiffConfig=%lldLL",(long long)genie::kAlgCmpDiffConfig).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLEAlgCmp),-1,-2,1,G__FastAllocString(2048).Format("kAlgCmpDiffAlg=%lldLL",(long long)genie::kAlgCmpDiffAlg).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgUndefined=%lldLL",(long long)genie::kRgUndefined).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgBool=%lldLL",(long long)genie::kRgBool).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgInt=%lldLL",(long long)genie::kRgInt).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgDbl=%lldLL",(long long)genie::kRgDbl).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgStr=%lldLL",(long long)genie::kRgStr).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgAlg=%lldLL",(long long)genie::kRgAlg).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgH1F=%lldLL",(long long)genie::kRgH1F).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgH2F=%lldLL",(long long)genie::kRgH2F).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgTree=%lldLL",(long long)genie::kRgTree).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genie::HadronizationModelI */
static void G__setup_memvargeniecLcLHadronizationModelI(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLHadronizationModelI));
   { genie::HadronizationModelI *p; p=(genie::HadronizationModelI*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* genie::FragmentationFunctionI */
static void G__setup_memvargeniecLcLFragmentationFunctionI(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLFragmentationFunctionI));
   { genie::FragmentationFunctionI *p; p=(genie::FragmentationFunctionI*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* genie::CharmHadronization */
static void G__setup_memvargeniecLcLCharmHadronization(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLCharmHadronization));
   { genie::CharmHadronization *p; p=(genie::CharmHadronization*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TGenPhaseSpace),-1,-1,4,"fPhaseSpaceGenerator=",0,"/< a phase space generator");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fCharmOnly=",0,"/< don't hadronize non-charm blob");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TF1),-1,-1,4,"fCharmPT2pdf=",0,"/< charm hadron pT^2 pdf");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLFragmentationFunctionI),-1,-1,4,"fFragmFunc=",0,"/< charm hadron fragmentation func");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLSpline),-1,-1,4,"fD0FracSpl=",0,"/< nu charm fraction vs Ev: D0");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLSpline),-1,-1,4,"fDpFracSpl=",0,"/< nu charm fraction vs Ev: D+");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLSpline),-1,-1,4,"fDsFracSpl=",0,"/< nu charm fraction vs Ev: Ds+");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fD0BarFrac=",0,"/< nubar \\bar{D0} charm fraction");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fDmFrac=",0,"/< nubar D- charm fraction");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TPythia6),-1,-1,4,"fPythia=",0,"/< remnant (non-charm) hadronizer");
   }
   G__tag_memvar_reset();
}


   /* genie::CollinsSpillerFragm */
static void G__setup_memvargeniecLcLCollinsSpillerFragm(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLCollinsSpillerFragm));
   { genie::CollinsSpillerFragm *p; p=(genie::CollinsSpillerFragm*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TF1),-1,-1,4,"fFunc=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genie::utils::frgmfunc */
static void G__setup_memvargeniecLcLutilscLcLfrgmfunc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLutilscLcLfrgmfunc));
   {
   }
   G__tag_memvar_reset();
}


   /* genie::HadronizationModelBase */
static void G__setup_memvargeniecLcLHadronizationModelBase(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLHadronizationModelBase));
   { genie::HadronizationModelBase *p; p=(genie::HadronizationModelBase*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fWcut=",0,"/< neugen's Rijk applied for W<Wcut (see DIS/RES join scheme)");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fRvpCCm2=",0,"/< neugen's Rijk: vp,  CC, multiplicity = 2");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fRvpCCm3=",0,"/< neugen's Rijk: vp,  CC, multiplicity = 3");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fRvpNCm2=",0,"/< neugen's Rijk: vp,  NC, multiplicity = 2");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fRvpNCm3=",0,"/< neugen's Rijk: vp,  NC, multiplicity = 3");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fRvnCCm2=",0,"/< neugen's Rijk: vn,  CC, multiplicity = 2");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fRvnCCm3=",0,"/< neugen's Rijk: vn,  CC, multiplicity = 3");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fRvnNCm2=",0,"/< neugen's Rijk: vn,  NC, multiplicity = 2");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fRvnNCm3=",0,"/< neugen's Rijk: vn,  NC, multiplicity = 3");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fRvbpCCm2=",0,"/< neugen's Rijk: vbp, CC, multiplicity = 2");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fRvbpCCm3=",0,"/< neugen's Rijk: vbp, CC, multiplicity = 3");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fRvbpNCm2=",0,"/< neugen's Rijk: vbp, NC, multiplicity = 2");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fRvbpNCm3=",0,"/< neugen's Rijk: vbp, NC, multiplicity = 3");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fRvbnCCm2=",0,"/< neugen's Rijk: vbn, CC, multiplicity = 2");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fRvbnCCm3=",0,"/< neugen's Rijk: vbn, CC, multiplicity = 3");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fRvbnNCm2=",0,"/< neugen's Rijk: vbn, NC, multiplicity = 2");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fRvbnNCm3=",0,"/< neugen's Rijk: vbn, NC, multiplicity = 3");
   }
   G__tag_memvar_reset();
}


   /* genie::KNOHadronization */
static void G__setup_memvargeniecLcLKNOHadronization(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLKNOHadronization));
   { genie::KNOHadronization *p; p=(genie::KNOHadronization*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TGenPhaseSpace),-1,-1,4,"fPhaseSpaceGenerator=",0,"/< a phase space generator");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fWeight=",0,"/< weight for generated event");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLDecayModelI),-1,-1,4,"fDecayer=",0,"/< decay algorithm");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fForceNeuGenLimit=",0,"/< force upper hadronic multiplicity to NeuGEN limit");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fUseIsotropic2BDecays=",0,"/< force isotropic, non-reweighted 2-body decays for consistency with neugen/daikon");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fUseBaryonXfPt2Param=",0,"/< Generate baryon xF,pT2 from experimental parameterization?");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fReWeightDecays=",0,"/< Reweight phase space decays?");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fForceDecays=",0,"/< force decays of unstable hadrons produced?");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fForceMinMult=",0,"/< force minimum multiplicity if (at low W) generated less?");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fGenerateWeighted=",0,"/< generate weighted events?");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fPhSpRwA=",0,"/< parameter for phase space decay reweighting");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fPpi0=",0,"/< {pi0 pi0  } production probability");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fPpic=",0,"/< {pi+ pi-  } production probability");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fPKc=",0,"/< {K+  K-   } production probability");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fPK0=",0,"/< {K0  K0bar} production probability");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fPpi0eta=",0,"/< {Pi0 eta} production probability");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fPeta=",0,"/< {eta eta} production probability");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fAvp=",0,"/< offset in average charged hadron multiplicity = f(W) relation for vp");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fAvn=",0,"/< offset in average charged hadron multiplicity = f(W) relation for vn");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fAvbp=",0,"/< offset in average charged hadron multiplicity = f(W) relation for vbp");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fAvbn=",0,"/< offset in average charged hadron multiplicity = f(W) relation for vbn");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBvp=",0,"/< slope  in average charged hadron multiplicity = f(W) relation for vp");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBvn=",0,"/< slope  in average charged hadron multiplicity = f(W) relation for vn");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBvbp=",0,"/< slope  in average charged hadron multiplicity = f(W) relation for vbp");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBvbn=",0,"/< slope  in average charged hadron multiplicity = f(W) relation for vbn");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fAhyperon=",0,"/< parameter controlling strange baryon production probability via associated production (P=a+b*lnW^2)");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fBhyperon=",0,"/< see above");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fCvp=",0,"/< Levy function parameter for vp");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fCvn=",0,"/< Levy function parameter for vn");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fCvbp=",0,"/< Levy function parameter for vbp");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fCvbn=",0,"/< Levy function parameter for vbn");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TF1),-1,-1,4,"fBaryonXFpdf=",0,"/< baryon xF PDF");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TF1),-1,-1,4,"fBaryonPT2pdf=",0,"/< baryon pT^2 PDF");
   }
   G__tag_memvar_reset();
}


   /* genie::KNOPythiaHadronization */
static void G__setup_memvargeniecLcLKNOPythiaHadronization(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLKNOPythiaHadronization));
   { genie::KNOPythiaHadronization *p; p=(genie::KNOPythiaHadronization*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fWeight=",0,"/< weight for generated event");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLHadronizationModelI),-1,-1,4,"fKNOHadronizer=",0,"/< KNO Hadronizer");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLHadronizationModelI),-1,-1,4,"fPythiaHadronizer=",0,"/< PYTHIA Hadronizer");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fMethod=",0,"/< KNO -> PYTHIA transition method");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fWminTrWindow=",0,"/< min W in transition region (pure KNO    < Wmin)");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fWmaxTrWindow=",0,"/< max W in transition region (pure PYTHIA > Wmax)");
   }
   G__tag_memvar_reset();
}


   /* genie::PetersonFragm */
static void G__setup_memvargeniecLcLPetersonFragm(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLPetersonFragm));
   { genie::PetersonFragm *p; p=(genie::PetersonFragm*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TF1),-1,-1,4,"fFunc=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genie::PythiaHadronization */
static void G__setup_memvargeniecLcLPythiaHadronization(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLPythiaHadronization));
   { genie::PythiaHadronization *p; p=(genie::PythiaHadronization*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TPythia6),-1,-1,4,"fPythia=",0,"/< PYTHIA6 wrapper class");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLDecayModelI),-1,-1,4,"fDecayer=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fSSBarSuppression=",0,"/< ssbar suppression");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fGaussianPt2=",0,"/< gaussian pt2 distribution width");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fNonGaussianPt2Tail=",0,"/< non gaussian pt2 tail parameterization");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fRemainingECutoff=",0,"/< remaining E cutoff for stopping fragmentation");
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvar_ROOT_DICT_Fragmentation() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncgenie(void) {
   /* genie */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_genie));
   G__memfunc_setup("operator<<",996,G___ROOT_DICT_Fragmentation_462_0_1, 117, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - stream u 'genie::AlgId' - 11 - alg", (char*)NULL, (void*) G__func2void( (ostream& (*)(ostream&, const genie::AlgId&))(&genie::operator<<) ), 0);
   G__memfunc_setup("operator<<",996,G___ROOT_DICT_Fragmentation_462_0_2, 117, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - stream u 'genie::Registry' - 11 - registry", (char*)NULL, (void*) G__func2void( (ostream& (*)(ostream&, const genie::Registry&))(&genie::operator<<) ), 0);
   G__memfunc_setup("operator<<",996,G___ROOT_DICT_Fragmentation_462_0_3, 117, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - stream u 'genie::Algorithm' - 11 - alg", (char*)NULL, (void*) G__func2void( (ostream& (*)(ostream&, const genie::Algorithm&))(&genie::operator<<) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLHadronizationModelI(void) {
   /* genie::HadronizationModelI */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLHadronizationModelI));
   G__memfunc_setup("Initialize",1042,G___ROOT_DICT_Fragmentation_601_0_1, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Hadronize",932,G___ROOT_DICT_Fragmentation_601_0_2, 85, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TClonesArray), -1, 0, 1, 1, 1, 8, "U 'genie::Interaction' - 10 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Weight",616,G___ROOT_DICT_Fragmentation_601_0_3, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SelectParticles",1543,G___ROOT_DICT_Fragmentation_601_0_4, 85, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLPDGCodeList), -1, 0, 1, 1, 1, 8, "U 'genie::Interaction' - 10 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("MultiplicityProb",1692,G___ROOT_DICT_Fragmentation_601_0_5, 85, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TH1D), -1, 0, 2, 1, 1, 8, 
"U 'genie::Interaction' - 10 - - C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 3);
   // automatic destructor
   G__memfunc_setup("~HadronizationModelI", 2066, G___ROOT_DICT_Fragmentation_601_0_9, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Fragmentation_601_0_10, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLHadronizationModelI), -1, 1, 1, 1, 1, 0, "u 'genie::HadronizationModelI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLFragmentationFunctionI(void) {
   /* genie::FragmentationFunctionI */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLFragmentationFunctionI));
   G__memfunc_setup("Value",509,G___ROOT_DICT_Fragmentation_604_0_1, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - z", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GenerateZ",901,G___ROOT_DICT_Fragmentation_604_0_2, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   // automatic destructor
   G__memfunc_setup("~FragmentationFunctionI", 2396, G___ROOT_DICT_Fragmentation_604_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Fragmentation_604_0_7, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLFragmentationFunctionI), -1, 1, 1, 1, 1, 0, "u 'genie::FragmentationFunctionI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLCharmHadronization(void) {
   /* genie::CharmHadronization */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLCharmHadronization));
   G__memfunc_setup("CharmHadronization",1861,G___ROOT_DICT_Fragmentation_605_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLCharmHadronization), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CharmHadronization",1861,G___ROOT_DICT_Fragmentation_605_0_2, 105, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLCharmHadronization), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - config", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Hadronize",932,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TClonesArray), -1, 0, 1, 1, 1, 8, "U 'genie::Interaction' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Weight",616,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SelectParticles",1543,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLPDGCodeList), -1, 0, 1, 1, 1, 8, "U 'genie::Interaction' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MultiplicityProb",1692,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TH1D), -1, 0, 2, 1, 1, 8, 
"U 'genie::Interaction' - 10 - - C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Configure",930,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'genie::Registry' - 11 - config", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Configure",930,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - config", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadConfig",982,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenerateCharmHadron",1906,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 2, 1, 4, 8, 
"i - - 0 - nupdg d - - 0 - EvLab", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("CharmHadronization", 1861, G___ROOT_DICT_Fragmentation_605_0_12, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLCharmHadronization), -1, 0, 1, 1, 1, 0, "u 'genie::CharmHadronization' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CharmHadronization", 1987, G___ROOT_DICT_Fragmentation_605_0_13, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLCollinsSpillerFragm(void) {
   /* genie::CollinsSpillerFragm */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLCollinsSpillerFragm));
   G__memfunc_setup("CollinsSpillerFragm",1948,G___ROOT_DICT_Fragmentation_619_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLCollinsSpillerFragm), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CollinsSpillerFragm",1948,G___ROOT_DICT_Fragmentation_619_0_2, 105, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLCollinsSpillerFragm), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - config", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Value",509,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GenerateZ",901,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Configure",930,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'genie::Registry' - 11 - config", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Configure",930,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - config", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BuildFunction",1334,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("CollinsSpillerFragm", 1948, G___ROOT_DICT_Fragmentation_619_0_8, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLCollinsSpillerFragm), -1, 0, 1, 1, 1, 0, "u 'genie::CollinsSpillerFragm' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CollinsSpillerFragm", 2074, G___ROOT_DICT_Fragmentation_619_0_9, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Fragmentation_619_0_10, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLCollinsSpillerFragm), -1, 1, 1, 1, 1, 0, "u 'genie::CollinsSpillerFragm' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLutilscLcLfrgmfunc(void) {
   /* genie::utils::frgmfunc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLutilscLcLfrgmfunc));
   G__memfunc_setup("collins_spiller_func",2137,G___ROOT_DICT_Fragmentation_621_0_1, 100, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (double (*)(double*, double*))(&genie::utils::frgmfunc::collins_spiller_func) ), 0);
   G__memfunc_setup("peterson_func",1403,G___ROOT_DICT_Fragmentation_621_0_2, 100, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (double (*)(double*, double*))(&genie::utils::frgmfunc::peterson_func) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLHadronizationModelBase(void) {
   /* genie::HadronizationModelBase */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLHadronizationModelBase));
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Hadronize",932,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TClonesArray), -1, 0, 1, 1, 1, 8, "U 'genie::Interaction' - 10 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Weight",616,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SelectParticles",1543,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLPDGCodeList), -1, 0, 1, 1, 1, 8, "U 'genie::Interaction' - 10 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("MultiplicityProb",1692,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TH1D), -1, 0, 2, 1, 1, 8, 
"U 'genie::Interaction' - 10 - - C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Wmin",411,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MaxMult",712,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 2, 8, "U 'genie::Interaction' - 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ApplyRijk",918,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 8, 
"U 'genie::Interaction' - 10 - i g - - 0 - norm "
"U 'TH1D' - 0 - mp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateMultProbHist",1825,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TH1D), -1, 0, 1, 1, 2, 8, "d - - 0 - maxmult", (char*)NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Fragmentation_622_0_13, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLHadronizationModelBase), -1, 1, 1, 1, 1, 0, "u 'genie::HadronizationModelBase' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLKNOHadronization(void) {
   /* genie::KNOHadronization */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLKNOHadronization));
   G__memfunc_setup("KNOHadronization",1602,G___ROOT_DICT_Fragmentation_624_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLKNOHadronization), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KNOHadronization",1602,G___ROOT_DICT_Fragmentation_624_0_2, 105, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLKNOHadronization), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - config", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Hadronize",932,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TClonesArray), -1, 0, 1, 1, 1, 8, "U 'genie::Interaction' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Weight",616,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SelectParticles",1543,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLPDGCodeList), -1, 0, 1, 1, 1, 8, "U 'genie::Interaction' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MultiplicityProb",1692,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TH1D), -1, 0, 2, 1, 1, 8, 
"U 'genie::Interaction' - 10 - - C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Configure",930,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'genie::Registry' - 11 - config", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Configure",930,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - config", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadConfig",982,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AssertValidity",1464,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 8, "U 'genie::Interaction' - 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenerateHadronCodes",1909,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLPDGCodeList), -1, 0, 3, 1, 4, 8, 
"i - - 0 - mult i - - 0 - maxQ "
"d - - 0 - W", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenerateBaryonPdgCode",2092,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 3, 1, 4, 8, 
"i - - 0 - mult i - - 0 - maxQ "
"d - - 0 - W", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HadronShowerCharge",1822,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 1, 1, 4, 8, "U 'genie::Interaction' - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KNO",232,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 3, 1, 4, 8, 
"i - - 0 - nu i - - 0 - nuc "
"d - - 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AverageChMult",1288,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 3, 1, 4, 8, 
"i - - 0 - nu i - - 0 - nuc "
"d - - 0 - W", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleDecays",1189,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "U 'TClonesArray' - 0 - particle_list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReWeightPt2",1045,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 4, 8, "u 'genie::PDGCodeList' - 11 - pdgcv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DecayMethod1",1144,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TClonesArray), -1, 0, 3, 1, 4, 8, 
"d - - 0 - W u 'genie::PDGCodeList' - 11 - pdgv "
"g - - 0 - reweight_decays", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DecayMethod2",1145,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TClonesArray), -1, 0, 3, 1, 4, 8, 
"d - - 0 - W u 'genie::PDGCodeList' - 11 - pdgv "
"g - - 0 - reweight_decays", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DecayBackToBack",1419,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TClonesArray), -1, 0, 2, 1, 4, 8, 
"d - - 0 - W u 'genie::PDGCodeList' - 11 - pdgv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PhaseSpaceDecay",1475,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 5, 1, 4, 8, 
"u 'TClonesArray' - 1 - pl u 'TLorentzVector' - 1 - pd "
"u 'genie::PDGCodeList' - 11 - pdgv i - - 0 '0' offset "
"g - - 0 'false' reweight", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("KNOHadronization", 1602, G___ROOT_DICT_Fragmentation_624_0_23, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLKNOHadronization), -1, 0, 1, 1, 1, 0, "u 'genie::KNOHadronization' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KNOHadronization", 1728, G___ROOT_DICT_Fragmentation_624_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLKNOPythiaHadronization(void) {
   /* genie::KNOPythiaHadronization */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLKNOPythiaHadronization));
   G__memfunc_setup("KNOPythiaHadronization",2225,G___ROOT_DICT_Fragmentation_625_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLKNOPythiaHadronization), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KNOPythiaHadronization",2225,G___ROOT_DICT_Fragmentation_625_0_2, 105, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLKNOPythiaHadronization), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - config", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Hadronize",932,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TClonesArray), -1, 0, 1, 1, 1, 8, "U 'genie::Interaction' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Weight",616,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SelectParticles",1543,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLPDGCodeList), -1, 0, 1, 1, 1, 8, "U 'genie::Interaction' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MultiplicityProb",1692,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TH1D), -1, 0, 2, 1, 1, 8, 
"U 'genie::Interaction' - 10 - - C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Configure",930,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'genie::Registry' - 11 - config", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Configure",930,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - config", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadConfig",982,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectHadronizer",1654,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLHadronizationModelI), -1, 0, 1, 1, 4, 9, "U 'genie::Interaction' - 10 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("KNOPythiaHadronization", 2225, G___ROOT_DICT_Fragmentation_625_0_12, (int) ('i'), 
G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLKNOPythiaHadronization), -1, 0, 1, 1, 1, 0, "u 'genie::KNOPythiaHadronization' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KNOPythiaHadronization", 2351, G___ROOT_DICT_Fragmentation_625_0_13, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLPetersonFragm(void) {
   /* genie::PetersonFragm */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLPetersonFragm));
   G__memfunc_setup("PetersonFragm",1341,G___ROOT_DICT_Fragmentation_626_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLPetersonFragm), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PetersonFragm",1341,G___ROOT_DICT_Fragmentation_626_0_2, 105, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLPetersonFragm), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - config", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Value",509,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GenerateZ",901,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Configure",930,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'genie::Registry' - 11 - config", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Configure",930,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - config", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BuildFunction",1334,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("PetersonFragm", 1341, G___ROOT_DICT_Fragmentation_626_0_8, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLPetersonFragm), -1, 0, 1, 1, 1, 0, "u 'genie::PetersonFragm' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PetersonFragm", 1467, G___ROOT_DICT_Fragmentation_626_0_9, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Fragmentation_626_0_10, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLPetersonFragm), -1, 1, 1, 1, 1, 0, "u 'genie::PetersonFragm' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLPythiaHadronization(void) {
   /* genie::PythiaHadronization */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLPythiaHadronization));
   G__memfunc_setup("PythiaHadronization",1993,G___ROOT_DICT_Fragmentation_651_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLPythiaHadronization), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PythiaHadronization",1993,G___ROOT_DICT_Fragmentation_651_0_2, 105, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLPythiaHadronization), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - config", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Hadronize",932,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TClonesArray), -1, 0, 1, 1, 1, 8, "U 'genie::Interaction' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Weight",616,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SelectParticles",1543,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLPDGCodeList), -1, 0, 1, 1, 1, 8, "U 'genie::Interaction' - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MultiplicityProb",1692,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_TH1D), -1, 0, 2, 1, 1, 8, 
"U 'genie::Interaction' - 10 - - C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Configure",930,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'genie::Registry' - 11 - config", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Configure",930,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - config", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadConfig",982,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AssertValidity",1464,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 8, "U 'genie::Interaction' - 10 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("PythiaHadronization", 1993, G___ROOT_DICT_Fragmentation_651_0_12, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_FragmentationLN_geniecLcLPythiaHadronization), -1, 0, 1, 1, 1, 0, "u 'genie::PythiaHadronization' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PythiaHadronization", 2119, G___ROOT_DICT_Fragmentation_651_0_13, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfunc_ROOT_DICT_Fragmentation() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_global_ROOT_DICT_Fragmentation() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_func_ROOT_DICT_Fragmentation() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G___ROOT_DICT_FragmentationLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_string = { "string" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_TGenPhaseSpace = { "TGenPhaseSpace" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_genie = { "genie" , 110 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_geniecLcLEAlgStatus = { "genie::EAlgStatus" , 101 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_geniecLcLEAlgCmp = { "genie::EAlgCmp" , 101 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_geniecLcLAlgId = { "genie::AlgId" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_geniecLcLERgType = { "genie::ERgType" , 101 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgR = { "map<string,genie::RegistryItemI*,less<string>,allocator<pair<const string,genie::RegistryItemI*> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_pairlEstringcOgeniecLcLRegistryItemImUgR = { "pair<string,genie::RegistryItemI*>" , 115 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgRcLcLiterator = { "map<string,genie::RegistryItemI*,less<string>,allocator<pair<const string,genie::RegistryItemI*> > >::iterator" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_geniecLcLRegistry = { "genie::Registry" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_geniecLcLAlgorithm = { "genie::Algorithm" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgR = { "map<string,genie::Algorithm*,less<string>,allocator<pair<const string,genie::Algorithm*> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_pairlEstringcOgeniecLcLAlgorithmmUgR = { "pair<string,genie::Algorithm*>" , 115 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgRcLcLiterator = { "map<string,genie::Algorithm*,less<string>,allocator<pair<const string,genie::Algorithm*> > >::iterator" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_geniecLcLInteraction = { "genie::Interaction" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_geniecLcLPDGCodeList = { "genie::PDGCodeList" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_geniecLcLHadronizationModelI = { "genie::HadronizationModelI" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_TPythia6 = { "TPythia6" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_geniecLcLSpline = { "genie::Spline" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_geniecLcLFragmentationFunctionI = { "genie::FragmentationFunctionI" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_geniecLcLCharmHadronization = { "genie::CharmHadronization" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_geniecLcLCollinsSpillerFragm = { "genie::CollinsSpillerFragm" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_geniecLcLutils = { "genie::utils" , 110 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_geniecLcLutilscLcLfrgmfunc = { "genie::utils::frgmfunc" , 110 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_geniecLcLHadronizationModelBase = { "genie::HadronizationModelBase" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_geniecLcLDecayModelI = { "genie::DecayModelI" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_geniecLcLKNOHadronization = { "genie::KNOHadronization" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_geniecLcLKNOPythiaHadronization = { "genie::KNOPythiaHadronization" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_geniecLcLPetersonFragm = { "genie::PetersonFragm" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_FragmentationLN_geniecLcLPythiaHadronization = { "genie::PythiaHadronization" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtable_ROOT_DICT_Fragmentation() {
  G___ROOT_DICT_FragmentationLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_string.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_TClonesArray.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_TVectorTlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_TVectorTlEdoublegR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_TLorentzVector.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_TGenPhaseSpace.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_genie.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_geniecLcLEAlgStatus.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_geniecLcLEAlgCmp.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_TF1.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_TH1D.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_geniecLcLAlgId.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_geniecLcLERgType.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_pairlEstringcOgeniecLcLRegistryItemImUgR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_geniecLcLRegistry.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_geniecLcLAlgorithm.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_pairlEstringcOgeniecLcLAlgorithmmUgR.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_geniecLcLInteraction.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_geniecLcLPDGCodeList.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_geniecLcLHadronizationModelI.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_TPythia6.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_geniecLcLSpline.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_geniecLcLFragmentationFunctionI.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_geniecLcLCharmHadronization.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_geniecLcLCollinsSpillerFragm.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_geniecLcLutils.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_geniecLcLutilscLcLfrgmfunc.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_geniecLcLHadronizationModelBase.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_geniecLcLDecayModelI.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_geniecLcLKNOHadronization.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_geniecLcLKNOPythiaHadronization.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_geniecLcLPetersonFragm.tagnum = -1 ;
  G___ROOT_DICT_FragmentationLN_geniecLcLPythiaHadronization.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtable_ROOT_DICT_Fragmentation() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_string);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_TLorentzVector);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_TGenPhaseSpace);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_genie),0,-1,0,(char*)NULL,G__setup_memvargenie,G__setup_memfuncgenie);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_geniecLcLEAlgStatus);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_geniecLcLEAlgCmp);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_TF1);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_TH1D);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_geniecLcLAlgId);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_geniecLcLERgType);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_pairlEstringcOgeniecLcLRegistryItemImUgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_geniecLcLRegistry);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_geniecLcLAlgorithm);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_pairlEstringcOgeniecLcLAlgorithmmUgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_geniecLcLInteraction);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_geniecLcLPDGCodeList);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_geniecLcLHadronizationModelI),sizeof(genie::HadronizationModelI),-1,34053,(char*)NULL,G__setup_memvargeniecLcLHadronizationModelI,G__setup_memfuncgeniecLcLHadronizationModelI);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_TPythia6);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_geniecLcLSpline);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_geniecLcLFragmentationFunctionI),sizeof(genie::FragmentationFunctionI),-1,34050,(char*)NULL,G__setup_memvargeniecLcLFragmentationFunctionI,G__setup_memfuncgeniecLcLFragmentationFunctionI);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_geniecLcLCharmHadronization),sizeof(genie::CharmHadronization),-1,34048,(char*)NULL,G__setup_memvargeniecLcLCharmHadronization,G__setup_memfuncgeniecLcLCharmHadronization);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_geniecLcLCollinsSpillerFragm),sizeof(genie::CollinsSpillerFragm),-1,34048,(char*)NULL,G__setup_memvargeniecLcLCollinsSpillerFragm,G__setup_memfuncgeniecLcLCollinsSpillerFragm);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_geniecLcLutils);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_geniecLcLutilscLcLfrgmfunc),0,-1,0,(char*)NULL,G__setup_memvargeniecLcLutilscLcLfrgmfunc,G__setup_memfuncgeniecLcLutilscLcLfrgmfunc);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_geniecLcLHadronizationModelBase),sizeof(genie::HadronizationModelBase),-1,34053,(char*)NULL,G__setup_memvargeniecLcLHadronizationModelBase,G__setup_memfuncgeniecLcLHadronizationModelBase);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_geniecLcLDecayModelI);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_geniecLcLKNOHadronization),sizeof(genie::KNOHadronization),-1,34048,(char*)NULL,G__setup_memvargeniecLcLKNOHadronization,G__setup_memfuncgeniecLcLKNOHadronization);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_geniecLcLKNOPythiaHadronization),sizeof(genie::KNOPythiaHadronization),-1,34048,(char*)NULL,G__setup_memvargeniecLcLKNOPythiaHadronization,G__setup_memfuncgeniecLcLKNOPythiaHadronization);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_geniecLcLPetersonFragm),sizeof(genie::PetersonFragm),-1,34048,(char*)NULL,G__setup_memvargeniecLcLPetersonFragm,G__setup_memfuncgeniecLcLPetersonFragm);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_FragmentationLN_geniecLcLPythiaHadronization),sizeof(genie::PythiaHadronization),-1,34048,(char*)NULL,G__setup_memvargeniecLcLPythiaHadronization,G__setup_memfuncgeniecLcLPythiaHadronization);
}
extern "C" void G__cpp_setup_ROOT_DICT_Fragmentation(void) {
  G__check_setup_version(30051515,"G__cpp_setup_ROOT_DICT_Fragmentation()");
  G__set_cpp_environment_ROOT_DICT_Fragmentation();
  G__cpp_setup_tagtable_ROOT_DICT_Fragmentation();

  G__cpp_setup_inheritance_ROOT_DICT_Fragmentation();

  G__cpp_setup_typetable_ROOT_DICT_Fragmentation();

  G__cpp_setup_memvar_ROOT_DICT_Fragmentation();

  G__cpp_setup_memfunc_ROOT_DICT_Fragmentation();
  G__cpp_setup_global_ROOT_DICT_Fragmentation();
  G__cpp_setup_func_ROOT_DICT_Fragmentation();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfunc_ROOT_DICT_Fragmentation();
  return;
}
class G__cpp_setup_init_ROOT_DICT_Fragmentation {
  public:
    G__cpp_setup_init_ROOT_DICT_Fragmentation() { G__add_setup_func("_ROOT_DICT_Fragmentation",(G__incsetup)(&G__cpp_setup_ROOT_DICT_Fragmentation)); G__call_setup_funcs(); }
   ~G__cpp_setup_init_ROOT_DICT_Fragmentation() { G__remove_setup_func("_ROOT_DICT_Fragmentation"); }
};
G__cpp_setup_init_ROOT_DICT_Fragmentation G__cpp_setup_initializer_ROOT_DICT_Fragmentation;

