//
// File generated by rootcint at Thu Jul 13 14:26:46 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME _ROOT_DICT_Nuclear
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "_ROOT_DICT_Nuclear.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace genie {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void genie_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("genie", 0 /*version*/, "./SpectralFunc.h", 29,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &genie_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void genie_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOTDict {
   void geniecLcLNuclearModel_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLNuclearModel_Dictionary();
   static void *new_geniecLcLNuclearModel(void *p = 0);
   static void *newArray_geniecLcLNuclearModel(Long_t size, void *p);
   static void delete_geniecLcLNuclearModel(void *p);
   static void deleteArray_geniecLcLNuclearModel(void *p);
   static void destruct_geniecLcLNuclearModel(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::NuclearModel*)
   {
      ::genie::NuclearModel *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::NuclearModel),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::NuclearModel", "/users/mouland/Documents/GENIE_NCGamma/src//Nuclear/NuclearModel.h", 44,
                  typeid(::genie::NuclearModel), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLNuclearModel_Dictionary, isa_proxy, 0,
                  sizeof(::genie::NuclearModel) );
      instance.SetNew(&new_geniecLcLNuclearModel);
      instance.SetNewArray(&newArray_geniecLcLNuclearModel);
      instance.SetDelete(&delete_geniecLcLNuclearModel);
      instance.SetDeleteArray(&deleteArray_geniecLcLNuclearModel);
      instance.SetDestructor(&destruct_geniecLcLNuclearModel);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::NuclearModel*)
   {
      return GenerateInitInstanceLocal((::genie::NuclearModel*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::NuclearModel*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLNuclearModel_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::NuclearModel*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLNuclearModelI_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLNuclearModelI_Dictionary();
   static void delete_geniecLcLNuclearModelI(void *p);
   static void deleteArray_geniecLcLNuclearModelI(void *p);
   static void destruct_geniecLcLNuclearModelI(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::NuclearModelI*)
   {
      ::genie::NuclearModelI *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::NuclearModelI),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::NuclearModelI", "/users/mouland/Documents/GENIE_NCGamma/src//Nuclear/NuclearModelI.h", 32,
                  typeid(::genie::NuclearModelI), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLNuclearModelI_Dictionary, isa_proxy, 0,
                  sizeof(::genie::NuclearModelI) );
      instance.SetDelete(&delete_geniecLcLNuclearModelI);
      instance.SetDeleteArray(&deleteArray_geniecLcLNuclearModelI);
      instance.SetDestructor(&destruct_geniecLcLNuclearModelI);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::NuclearModelI*)
   {
      return GenerateInitInstanceLocal((::genie::NuclearModelI*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::NuclearModelI*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLNuclearModelI_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::NuclearModelI*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLEffectiveSF_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLEffectiveSF_Dictionary();
   static void *new_geniecLcLEffectiveSF(void *p = 0);
   static void *newArray_geniecLcLEffectiveSF(Long_t size, void *p);
   static void delete_geniecLcLEffectiveSF(void *p);
   static void deleteArray_geniecLcLEffectiveSF(void *p);
   static void destruct_geniecLcLEffectiveSF(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::EffectiveSF*)
   {
      ::genie::EffectiveSF *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::EffectiveSF),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::EffectiveSF", "./EffectiveSF.h", 33,
                  typeid(::genie::EffectiveSF), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLEffectiveSF_Dictionary, isa_proxy, 0,
                  sizeof(::genie::EffectiveSF) );
      instance.SetNew(&new_geniecLcLEffectiveSF);
      instance.SetNewArray(&newArray_geniecLcLEffectiveSF);
      instance.SetDelete(&delete_geniecLcLEffectiveSF);
      instance.SetDeleteArray(&deleteArray_geniecLcLEffectiveSF);
      instance.SetDestructor(&destruct_geniecLcLEffectiveSF);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::EffectiveSF*)
   {
      return GenerateInitInstanceLocal((::genie::EffectiveSF*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::EffectiveSF*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLEffectiveSF_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::EffectiveSF*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLFermiMomentumTable_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLFermiMomentumTable_Dictionary();
   static void *new_geniecLcLFermiMomentumTable(void *p = 0);
   static void *newArray_geniecLcLFermiMomentumTable(Long_t size, void *p);
   static void delete_geniecLcLFermiMomentumTable(void *p);
   static void deleteArray_geniecLcLFermiMomentumTable(void *p);
   static void destruct_geniecLcLFermiMomentumTable(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::FermiMomentumTable*)
   {
      ::genie::FermiMomentumTable *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::FermiMomentumTable),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::FermiMomentumTable", "./FermiMomentumTable.h", 34,
                  typeid(::genie::FermiMomentumTable), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLFermiMomentumTable_Dictionary, isa_proxy, 0,
                  sizeof(::genie::FermiMomentumTable) );
      instance.SetNew(&new_geniecLcLFermiMomentumTable);
      instance.SetNewArray(&newArray_geniecLcLFermiMomentumTable);
      instance.SetDelete(&delete_geniecLcLFermiMomentumTable);
      instance.SetDeleteArray(&deleteArray_geniecLcLFermiMomentumTable);
      instance.SetDestructor(&destruct_geniecLcLFermiMomentumTable);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::FermiMomentumTable*)
   {
      return GenerateInitInstanceLocal((::genie::FermiMomentumTable*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::FermiMomentumTable*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLFermiMomentumTable_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::FermiMomentumTable*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLFermiMomentumTablePool_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLFermiMomentumTablePool_Dictionary();

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::FermiMomentumTablePool*)
   {
      ::genie::FermiMomentumTablePool *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::FermiMomentumTablePool),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::FermiMomentumTablePool", "./FermiMomentumTablePool.h", 35,
                  typeid(::genie::FermiMomentumTablePool), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLFermiMomentumTablePool_Dictionary, isa_proxy, 0,
                  sizeof(::genie::FermiMomentumTablePool) );
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::FermiMomentumTablePool*)
   {
      return GenerateInitInstanceLocal((::genie::FermiMomentumTablePool*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::FermiMomentumTablePool*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLFermiMomentumTablePool_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::FermiMomentumTablePool*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLFGMBodekRitchie_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLFGMBodekRitchie_Dictionary();
   static void *new_geniecLcLFGMBodekRitchie(void *p = 0);
   static void *newArray_geniecLcLFGMBodekRitchie(Long_t size, void *p);
   static void delete_geniecLcLFGMBodekRitchie(void *p);
   static void deleteArray_geniecLcLFGMBodekRitchie(void *p);
   static void destruct_geniecLcLFGMBodekRitchie(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::FGMBodekRitchie*)
   {
      ::genie::FGMBodekRitchie *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::FGMBodekRitchie),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::FGMBodekRitchie", "./FGMBodekRitchie.h", 34,
                  typeid(::genie::FGMBodekRitchie), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLFGMBodekRitchie_Dictionary, isa_proxy, 0,
                  sizeof(::genie::FGMBodekRitchie) );
      instance.SetNew(&new_geniecLcLFGMBodekRitchie);
      instance.SetNewArray(&newArray_geniecLcLFGMBodekRitchie);
      instance.SetDelete(&delete_geniecLcLFGMBodekRitchie);
      instance.SetDeleteArray(&deleteArray_geniecLcLFGMBodekRitchie);
      instance.SetDestructor(&destruct_geniecLcLFGMBodekRitchie);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::FGMBodekRitchie*)
   {
      return GenerateInitInstanceLocal((::genie::FGMBodekRitchie*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::FGMBodekRitchie*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLFGMBodekRitchie_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::FGMBodekRitchie*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLNuclearModelMap_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLNuclearModelMap_Dictionary();
   static void *new_geniecLcLNuclearModelMap(void *p = 0);
   static void *newArray_geniecLcLNuclearModelMap(Long_t size, void *p);
   static void delete_geniecLcLNuclearModelMap(void *p);
   static void deleteArray_geniecLcLNuclearModelMap(void *p);
   static void destruct_geniecLcLNuclearModelMap(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::NuclearModelMap*)
   {
      ::genie::NuclearModelMap *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::NuclearModelMap),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::NuclearModelMap", "./NuclearModelMap.h", 32,
                  typeid(::genie::NuclearModelMap), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLNuclearModelMap_Dictionary, isa_proxy, 0,
                  sizeof(::genie::NuclearModelMap) );
      instance.SetNew(&new_geniecLcLNuclearModelMap);
      instance.SetNewArray(&newArray_geniecLcLNuclearModelMap);
      instance.SetDelete(&delete_geniecLcLNuclearModelMap);
      instance.SetDeleteArray(&deleteArray_geniecLcLNuclearModelMap);
      instance.SetDestructor(&destruct_geniecLcLNuclearModelMap);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::NuclearModelMap*)
   {
      return GenerateInitInstanceLocal((::genie::NuclearModelMap*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::NuclearModelMap*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLNuclearModelMap_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::NuclearModelMap*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLSpectralFunc1d_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLSpectralFunc1d_Dictionary();
   static void *new_geniecLcLSpectralFunc1d(void *p = 0);
   static void *newArray_geniecLcLSpectralFunc1d(Long_t size, void *p);
   static void delete_geniecLcLSpectralFunc1d(void *p);
   static void deleteArray_geniecLcLSpectralFunc1d(void *p);
   static void destruct_geniecLcLSpectralFunc1d(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::SpectralFunc1d*)
   {
      ::genie::SpectralFunc1d *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::SpectralFunc1d),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::SpectralFunc1d", "./SpectralFunc1d.h", 35,
                  typeid(::genie::SpectralFunc1d), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLSpectralFunc1d_Dictionary, isa_proxy, 0,
                  sizeof(::genie::SpectralFunc1d) );
      instance.SetNew(&new_geniecLcLSpectralFunc1d);
      instance.SetNewArray(&newArray_geniecLcLSpectralFunc1d);
      instance.SetDelete(&delete_geniecLcLSpectralFunc1d);
      instance.SetDeleteArray(&deleteArray_geniecLcLSpectralFunc1d);
      instance.SetDestructor(&destruct_geniecLcLSpectralFunc1d);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::SpectralFunc1d*)
   {
      return GenerateInitInstanceLocal((::genie::SpectralFunc1d*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::SpectralFunc1d*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLSpectralFunc1d_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::SpectralFunc1d*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLSpectralFunc_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLSpectralFunc_Dictionary();
   static void *new_geniecLcLSpectralFunc(void *p = 0);
   static void *newArray_geniecLcLSpectralFunc(Long_t size, void *p);
   static void delete_geniecLcLSpectralFunc(void *p);
   static void deleteArray_geniecLcLSpectralFunc(void *p);
   static void destruct_geniecLcLSpectralFunc(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::SpectralFunc*)
   {
      ::genie::SpectralFunc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::SpectralFunc),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::SpectralFunc", "./SpectralFunc.h", 31,
                  typeid(::genie::SpectralFunc), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLSpectralFunc_Dictionary, isa_proxy, 0,
                  sizeof(::genie::SpectralFunc) );
      instance.SetNew(&new_geniecLcLSpectralFunc);
      instance.SetNewArray(&newArray_geniecLcLSpectralFunc);
      instance.SetDelete(&delete_geniecLcLSpectralFunc);
      instance.SetDeleteArray(&deleteArray_geniecLcLSpectralFunc);
      instance.SetDestructor(&destruct_geniecLcLSpectralFunc);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::SpectralFunc*)
   {
      return GenerateInitInstanceLocal((::genie::SpectralFunc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::SpectralFunc*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLSpectralFunc_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::SpectralFunc*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_geniecLcLNuclearModel(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::NuclearModel : new ::genie::NuclearModel;
   }
   static void *newArray_geniecLcLNuclearModel(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::NuclearModel[nElements] : new ::genie::NuclearModel[nElements];
   }
   // Wrapper around operator delete
   static void delete_geniecLcLNuclearModel(void *p) {
      delete ((::genie::NuclearModel*)p);
   }
   static void deleteArray_geniecLcLNuclearModel(void *p) {
      delete [] ((::genie::NuclearModel*)p);
   }
   static void destruct_geniecLcLNuclearModel(void *p) {
      typedef ::genie::NuclearModel current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::NuclearModel

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_geniecLcLNuclearModelI(void *p) {
      delete ((::genie::NuclearModelI*)p);
   }
   static void deleteArray_geniecLcLNuclearModelI(void *p) {
      delete [] ((::genie::NuclearModelI*)p);
   }
   static void destruct_geniecLcLNuclearModelI(void *p) {
      typedef ::genie::NuclearModelI current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::NuclearModelI

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_geniecLcLSpectralFunc(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::SpectralFunc : new ::genie::SpectralFunc;
   }
   static void *newArray_geniecLcLSpectralFunc(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::SpectralFunc[nElements] : new ::genie::SpectralFunc[nElements];
   }
   // Wrapper around operator delete
   static void delete_geniecLcLSpectralFunc(void *p) {
      delete ((::genie::SpectralFunc*)p);
   }
   static void deleteArray_geniecLcLSpectralFunc(void *p) {
      delete [] ((::genie::SpectralFunc*)p);
   }
   static void destruct_geniecLcLSpectralFunc(void *p) {
      typedef ::genie::SpectralFunc current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::SpectralFunc

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_geniecLcLSpectralFunc1d(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::SpectralFunc1d : new ::genie::SpectralFunc1d;
   }
   static void *newArray_geniecLcLSpectralFunc1d(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::SpectralFunc1d[nElements] : new ::genie::SpectralFunc1d[nElements];
   }
   // Wrapper around operator delete
   static void delete_geniecLcLSpectralFunc1d(void *p) {
      delete ((::genie::SpectralFunc1d*)p);
   }
   static void deleteArray_geniecLcLSpectralFunc1d(void *p) {
      delete [] ((::genie::SpectralFunc1d*)p);
   }
   static void destruct_geniecLcLSpectralFunc1d(void *p) {
      typedef ::genie::SpectralFunc1d current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::SpectralFunc1d

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_geniecLcLFGMBodekRitchie(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::FGMBodekRitchie : new ::genie::FGMBodekRitchie;
   }
   static void *newArray_geniecLcLFGMBodekRitchie(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::FGMBodekRitchie[nElements] : new ::genie::FGMBodekRitchie[nElements];
   }
   // Wrapper around operator delete
   static void delete_geniecLcLFGMBodekRitchie(void *p) {
      delete ((::genie::FGMBodekRitchie*)p);
   }
   static void deleteArray_geniecLcLFGMBodekRitchie(void *p) {
      delete [] ((::genie::FGMBodekRitchie*)p);
   }
   static void destruct_geniecLcLFGMBodekRitchie(void *p) {
      typedef ::genie::FGMBodekRitchie current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::FGMBodekRitchie

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_geniecLcLNuclearModelMap(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::NuclearModelMap : new ::genie::NuclearModelMap;
   }
   static void *newArray_geniecLcLNuclearModelMap(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::NuclearModelMap[nElements] : new ::genie::NuclearModelMap[nElements];
   }
   // Wrapper around operator delete
   static void delete_geniecLcLNuclearModelMap(void *p) {
      delete ((::genie::NuclearModelMap*)p);
   }
   static void deleteArray_geniecLcLNuclearModelMap(void *p) {
      delete [] ((::genie::NuclearModelMap*)p);
   }
   static void destruct_geniecLcLNuclearModelMap(void *p) {
      typedef ::genie::NuclearModelMap current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::NuclearModelMap

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_geniecLcLFermiMomentumTable(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::FermiMomentumTable : new ::genie::FermiMomentumTable;
   }
   static void *newArray_geniecLcLFermiMomentumTable(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::FermiMomentumTable[nElements] : new ::genie::FermiMomentumTable[nElements];
   }
   // Wrapper around operator delete
   static void delete_geniecLcLFermiMomentumTable(void *p) {
      delete ((::genie::FermiMomentumTable*)p);
   }
   static void deleteArray_geniecLcLFermiMomentumTable(void *p) {
      delete [] ((::genie::FermiMomentumTable*)p);
   }
   static void destruct_geniecLcLFermiMomentumTable(void *p) {
      typedef ::genie::FermiMomentumTable current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::FermiMomentumTable

namespace ROOTDict {
} // end of namespace ROOTDict for class ::genie::FermiMomentumTablePool

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_geniecLcLEffectiveSF(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::EffectiveSF : new ::genie::EffectiveSF;
   }
   static void *newArray_geniecLcLEffectiveSF(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::EffectiveSF[nElements] : new ::genie::EffectiveSF[nElements];
   }
   // Wrapper around operator delete
   static void delete_geniecLcLEffectiveSF(void *p) {
      delete ((::genie::EffectiveSF*)p);
   }
   static void deleteArray_geniecLcLEffectiveSF(void *p) {
      delete [] ((::genie::EffectiveSF*)p);
   }
   static void destruct_geniecLcLEffectiveSF(void *p) {
      typedef ::genie::EffectiveSF current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::EffectiveSF

/********************************************************
* _ROOT_DICT_Nuclear.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtable_ROOT_DICT_Nuclear();

extern "C" void G__set_cpp_environment_ROOT_DICT_Nuclear() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("EffectiveSF.h");
  G__add_compiledheader("FermiMomentumTable.h");
  G__add_compiledheader("FermiMomentumTablePool.h");
  G__add_compiledheader("FGMBodekRitchie.h");
  G__add_compiledheader("NuclearData.h");
  G__add_compiledheader("NuclearModelI.h");
  G__add_compiledheader("NuclearModelMap.h");
  G__add_compiledheader("SpectralFunc1d.h");
  G__add_compiledheader("SpectralFunc.h");
  G__cpp_reset_tagtable_ROOT_DICT_Nuclear();
}
#include <new>
extern "C" int G__cpp_dllrev_ROOT_DICT_Nuclear() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* genie */
static int G___ROOT_DICT_Nuclear_486_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = genie::operator<<(*(ostream*) libp->para[0].ref, *(genie::AlgId*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Nuclear_486_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = genie::operator<<(*(ostream*) libp->para[0].ref, *(genie::Registry*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Nuclear_486_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = genie::operator<<(*(ostream*) libp->para[0].ref, *(genie::Algorithm*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Nuclear_486_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = genie::operator<<(*(ostream*) libp->para[0].ref, *(genie::Target*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::NuclearModel */
static int G___ROOT_DICT_Nuclear_601_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genie::NuclearModel::AsString((genie::NuclearModel_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G___ROOT_DICT_Nuclear_601_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::NuclearModel *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::NuclearModel[n];
     } else {
       p = new((void*) gvp) genie::NuclearModel[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::NuclearModel;
     } else {
       p = new((void*) gvp) genie::NuclearModel;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModel));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_Nuclear_601_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genie::NuclearModel* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genie::NuclearModel(*(genie::NuclearModel*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModel));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::NuclearModel G__TgeniecLcLNuclearModel;
static int G___ROOT_DICT_Nuclear_601_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::NuclearModel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::NuclearModel*) (soff+(sizeof(genie::NuclearModel)*i)))->~G__TgeniecLcLNuclearModel();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::NuclearModel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::NuclearModel*) (soff))->~G__TgeniecLcLNuclearModel();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Nuclear_601_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::NuclearModel* dest = (genie::NuclearModel*) G__getstructoffset();
   const genie::NuclearModel& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::NuclearModelI */
static int G___ROOT_DICT_Nuclear_602_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const genie::NuclearModelI*) G__getstructoffset())->GenerateNucleon(*(genie::Target*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Nuclear_602_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::NuclearModelI*) G__getstructoffset())->Prob((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, *(genie::Target*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Nuclear_602_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const genie::NuclearModelI*) G__getstructoffset())->ModelType(*(genie::Target*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Nuclear_602_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::NuclearModelI*) G__getstructoffset())->RemovalEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Nuclear_602_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::NuclearModelI*) G__getstructoffset())->Momentum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Nuclear_602_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const genie::NuclearModelI*) G__getstructoffset())->Momentum3();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Nuclear_602_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const genie::NuclearModelI*) G__getstructoffset())->GetFermiMoverInteractionType());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::NuclearModelI G__TgeniecLcLNuclearModelI;
static int G___ROOT_DICT_Nuclear_602_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::NuclearModelI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::NuclearModelI*) (soff+(sizeof(genie::NuclearModelI)*i)))->~G__TgeniecLcLNuclearModelI();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::NuclearModelI*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::NuclearModelI*) (soff))->~G__TgeniecLcLNuclearModelI();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Nuclear_602_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::NuclearModelI* dest = (genie::NuclearModelI*) G__getstructoffset();
   *dest = *(genie::NuclearModelI*) libp->para[0].ref;
   const genie::NuclearModelI& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::EffectiveSF */
static int G___ROOT_DICT_Nuclear_603_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::EffectiveSF* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::EffectiveSF[n];
     } else {
       p = new((void*) gvp) genie::EffectiveSF[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::EffectiveSF;
     } else {
       p = new((void*) gvp) genie::EffectiveSF;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEffectiveSF));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Nuclear_603_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::EffectiveSF* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::EffectiveSF(*((string*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) genie::EffectiveSF(*((string*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEffectiveSF));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_Nuclear_603_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genie::EffectiveSF* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genie::EffectiveSF(*(genie::EffectiveSF*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEffectiveSF));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::EffectiveSF G__TgeniecLcLEffectiveSF;
static int G___ROOT_DICT_Nuclear_603_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::EffectiveSF*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::EffectiveSF*) (soff+(sizeof(genie::EffectiveSF)*i)))->~G__TgeniecLcLEffectiveSF();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::EffectiveSF*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::EffectiveSF*) (soff))->~G__TgeniecLcLEffectiveSF();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Nuclear_603_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::EffectiveSF* dest = (genie::EffectiveSF*) G__getstructoffset();
   *dest = *(genie::EffectiveSF*) libp->para[0].ref;
   const genie::EffectiveSF& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::FermiMomentumTable */
static int G___ROOT_DICT_Nuclear_642_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::FermiMomentumTable* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::FermiMomentumTable[n];
     } else {
       p = new((void*) gvp) genie::FermiMomentumTable[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::FermiMomentumTable;
     } else {
       p = new((void*) gvp) genie::FermiMomentumTable;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLFermiMomentumTable));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Nuclear_642_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::FermiMomentumTable* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::FermiMomentumTable(*(genie::FermiMomentumTable*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) genie::FermiMomentumTable(*(genie::FermiMomentumTable*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLFermiMomentumTable));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Nuclear_642_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::FermiMomentumTable*) G__getstructoffset())->FindClosestKF((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Nuclear_642_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::FermiMomentumTable*) G__getstructoffset())->AddTableEntry((int) G__int(libp->para[0]), *((genie::KF_t*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::FermiMomentumTable G__TgeniecLcLFermiMomentumTable;
static int G___ROOT_DICT_Nuclear_642_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::FermiMomentumTable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::FermiMomentumTable*) (soff+(sizeof(genie::FermiMomentumTable)*i)))->~G__TgeniecLcLFermiMomentumTable();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::FermiMomentumTable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::FermiMomentumTable*) (soff))->~G__TgeniecLcLFermiMomentumTable();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Nuclear_642_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::FermiMomentumTable* dest = (genie::FermiMomentumTable*) G__getstructoffset();
   *dest = *(genie::FermiMomentumTable*) libp->para[0].ref;
   const genie::FermiMomentumTable& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::FermiMomentumTablePool */
static int G___ROOT_DICT_Nuclear_652_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genie::FermiMomentumTablePool::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Nuclear_652_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((genie::FermiMomentumTablePool*) G__getstructoffset())->GetTable(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Nuclear_652_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::FermiMomentumTablePool* dest = (genie::FermiMomentumTablePool*) G__getstructoffset();
   *dest = *(genie::FermiMomentumTablePool*) libp->para[0].ref;
   const genie::FermiMomentumTablePool& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::FGMBodekRitchie */
static int G___ROOT_DICT_Nuclear_661_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::FGMBodekRitchie* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::FGMBodekRitchie[n];
     } else {
       p = new((void*) gvp) genie::FGMBodekRitchie[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::FGMBodekRitchie;
     } else {
       p = new((void*) gvp) genie::FGMBodekRitchie;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLFGMBodekRitchie));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Nuclear_661_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::FGMBodekRitchie* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::FGMBodekRitchie(*((string*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) genie::FGMBodekRitchie(*((string*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLFGMBodekRitchie));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_Nuclear_661_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genie::FGMBodekRitchie* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genie::FGMBodekRitchie(*(genie::FGMBodekRitchie*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLFGMBodekRitchie));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::FGMBodekRitchie G__TgeniecLcLFGMBodekRitchie;
static int G___ROOT_DICT_Nuclear_661_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::FGMBodekRitchie*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::FGMBodekRitchie*) (soff+(sizeof(genie::FGMBodekRitchie)*i)))->~G__TgeniecLcLFGMBodekRitchie();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::FGMBodekRitchie*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::FGMBodekRitchie*) (soff))->~G__TgeniecLcLFGMBodekRitchie();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Nuclear_661_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::FGMBodekRitchie* dest = (genie::FGMBodekRitchie*) G__getstructoffset();
   *dest = *(genie::FGMBodekRitchie*) libp->para[0].ref;
   const genie::FGMBodekRitchie& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::NuclearModelMap */
static int G___ROOT_DICT_Nuclear_665_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::NuclearModelMap* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::NuclearModelMap[n];
     } else {
       p = new((void*) gvp) genie::NuclearModelMap[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::NuclearModelMap;
     } else {
       p = new((void*) gvp) genie::NuclearModelMap;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModelMap));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Nuclear_665_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::NuclearModelMap* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::NuclearModelMap(*((string*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) genie::NuclearModelMap(*((string*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModelMap));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_Nuclear_665_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genie::NuclearModelMap* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genie::NuclearModelMap(*(genie::NuclearModelMap*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModelMap));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::NuclearModelMap G__TgeniecLcLNuclearModelMap;
static int G___ROOT_DICT_Nuclear_665_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::NuclearModelMap*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::NuclearModelMap*) (soff+(sizeof(genie::NuclearModelMap)*i)))->~G__TgeniecLcLNuclearModelMap();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::NuclearModelMap*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::NuclearModelMap*) (soff))->~G__TgeniecLcLNuclearModelMap();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::SpectralFunc1d */
static int G___ROOT_DICT_Nuclear_673_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::SpectralFunc1d* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::SpectralFunc1d[n];
     } else {
       p = new((void*) gvp) genie::SpectralFunc1d[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::SpectralFunc1d;
     } else {
       p = new((void*) gvp) genie::SpectralFunc1d;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLSpectralFunc1d));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Nuclear_673_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::SpectralFunc1d* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::SpectralFunc1d(*((string*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) genie::SpectralFunc1d(*((string*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLSpectralFunc1d));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_Nuclear_673_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genie::SpectralFunc1d* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genie::SpectralFunc1d(*(genie::SpectralFunc1d*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLSpectralFunc1d));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::SpectralFunc1d G__TgeniecLcLSpectralFunc1d;
static int G___ROOT_DICT_Nuclear_673_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::SpectralFunc1d*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::SpectralFunc1d*) (soff+(sizeof(genie::SpectralFunc1d)*i)))->~G__TgeniecLcLSpectralFunc1d();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::SpectralFunc1d*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::SpectralFunc1d*) (soff))->~G__TgeniecLcLSpectralFunc1d();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Nuclear_673_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::SpectralFunc1d* dest = (genie::SpectralFunc1d*) G__getstructoffset();
   *dest = *(genie::SpectralFunc1d*) libp->para[0].ref;
   const genie::SpectralFunc1d& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::SpectralFunc */
static int G___ROOT_DICT_Nuclear_683_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::SpectralFunc* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::SpectralFunc[n];
     } else {
       p = new((void*) gvp) genie::SpectralFunc[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::SpectralFunc;
     } else {
       p = new((void*) gvp) genie::SpectralFunc;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLSpectralFunc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Nuclear_683_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::SpectralFunc* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::SpectralFunc(*((string*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) genie::SpectralFunc(*((string*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLSpectralFunc));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_Nuclear_683_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genie::SpectralFunc* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genie::SpectralFunc(*(genie::SpectralFunc*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLSpectralFunc));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::SpectralFunc G__TgeniecLcLSpectralFunc;
static int G___ROOT_DICT_Nuclear_683_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::SpectralFunc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::SpectralFunc*) (soff+(sizeof(genie::SpectralFunc)*i)))->~G__TgeniecLcLSpectralFunc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::SpectralFunc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::SpectralFunc*) (soff))->~G__TgeniecLcLSpectralFunc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Nuclear_683_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::SpectralFunc* dest = (genie::SpectralFunc*) G__getstructoffset();
   *dest = *(genie::SpectralFunc*) libp->para[0].ref;
   const genie::SpectralFunc& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* genie */

/* genie::NuclearModel */

/* genie::NuclearModelI */

/* genie::EffectiveSF */

/* genie::FermiMomentumTable */

/* genie::FermiMomentumTablePool */

/* genie::FGMBodekRitchie */

/* genie::NuclearModelMap */

/* genie::SpectralFunc1d */

/* genie::SpectralFunc */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfunc_ROOT_DICT_Nuclear {
 public:
  G__Sizep2memfunc_ROOT_DICT_Nuclear(): p(&G__Sizep2memfunc_ROOT_DICT_Nuclear::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfunc_ROOT_DICT_Nuclear::*p)();
};

size_t G__get_sizep2memfunc_ROOT_DICT_Nuclear()
{
  G__Sizep2memfunc_ROOT_DICT_Nuclear a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritance_ROOT_DICT_Nuclear() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModelI))) {
     genie::NuclearModelI *G__Lderived;
     G__Lderived=(genie::NuclearModelI*)0x1000;
     {
       genie::Algorithm *G__Lpbase=(genie::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModelI),G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEffectiveSF))) {
     genie::EffectiveSF *G__Lderived;
     G__Lderived=(genie::EffectiveSF*)0x1000;
     {
       genie::NuclearModelI *G__Lpbase=(genie::NuclearModelI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEffectiveSF),G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModelI),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       genie::Algorithm *G__Lpbase=(genie::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEffectiveSF),G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLFGMBodekRitchie))) {
     genie::FGMBodekRitchie *G__Lderived;
     G__Lderived=(genie::FGMBodekRitchie*)0x1000;
     {
       genie::NuclearModelI *G__Lpbase=(genie::NuclearModelI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLFGMBodekRitchie),G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModelI),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       genie::Algorithm *G__Lpbase=(genie::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLFGMBodekRitchie),G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModelMap))) {
     genie::NuclearModelMap *G__Lderived;
     G__Lderived=(genie::NuclearModelMap*)0x1000;
     {
       genie::NuclearModelI *G__Lpbase=(genie::NuclearModelI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModelMap),G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModelI),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       genie::Algorithm *G__Lpbase=(genie::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModelMap),G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLSpectralFunc1d))) {
     genie::SpectralFunc1d *G__Lderived;
     G__Lderived=(genie::SpectralFunc1d*)0x1000;
     {
       genie::NuclearModelI *G__Lpbase=(genie::NuclearModelI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLSpectralFunc1d),G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModelI),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       genie::Algorithm *G__Lpbase=(genie::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLSpectralFunc1d),G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLSpectralFunc))) {
     genie::SpectralFunc *G__Lderived;
     G__Lderived=(genie::SpectralFunc*)0x1000;
     {
       genie::NuclearModelI *G__Lpbase=(genie::NuclearModelI*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLSpectralFunc),G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModelI),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       genie::Algorithm *G__Lpbase=(genie::Algorithm*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLSpectralFunc),G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLAlgorithm),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetable_ROOT_DICT_Nuclear() {

   /* Setting up typedef entry */
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("AlgStatus_t",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEAlgStatus),0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("AlgCmp_t",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEAlgCmp),0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RgType_t",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLERgType),0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<RgKey,RegistryItemI*>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,genie::RegistryItemI*>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,genie::RegistryItemI*,less<string> >",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RgIMap",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<RgKey,RegistryItemI*>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_pairlEstringcOgeniecLcLRegistryItemImUgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RgIMapPair",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_pairlEstringcOgeniecLcLRegistryItemImUgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RgIMapSizeType",107,-1,0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RgIMapIter",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgRcLcLiterator),0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RgIMapConstIter",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgRcLcLiterator),0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RgKey>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RgKeyList",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_vectorlEstringcOallocatorlEstringgRsPgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Algorithm*>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,genie::Algorithm*>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,genie::Algorithm*,less<string> >",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("AlgMap",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("AlgMapIter",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgRcLcLiterator),0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("AlgMapConstIter",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgRcLcLiterator),0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<string,Algorithm*>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_pairlEstringcOgeniecLcLAlgorithmmUgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("AlgMapPair",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_pairlEstringcOgeniecLcLAlgorithmmUgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("NuclearModel_t",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLENuclearModel),0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("FermiMoverInteractionType_t",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEFermiMoverInteractionType),0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TH1D*>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TH1D*,less<string> >",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,double>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,double,less<int> >",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,std::vector<double> >",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEintcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEintcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,vector<double,allocator<double> >,less<int> >",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEintcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,int>,double>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEpairlEintcOintgRcOdoublecOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,int>,double,less<pair<int,int> > >",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEpairlEintcOintgRcOdoublecOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,int>,std::vector<double> >",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEpairlEintcOintgRcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,int>,vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEpairlEintcOintgRcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,int>,vector<double,allocator<double> >,less<pair<int,int> > >",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEpairlEintcOintgRcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("KF_t",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEKF_t),0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,KF_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEintcOgeniecLcLEKF_tcOlesslEintgRcOallocatorlEpairlEconstsPintcOgeniecLcLEKF_tgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,genie::EKF_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEintcOgeniecLcLEKF_tcOlesslEintgRcOallocatorlEpairlEconstsPintcOgeniecLcLEKF_tgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,genie::EKF_t,less<int> >",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEintcOgeniecLcLEKF_tcOlesslEintgRcOallocatorlEpairlEconstsPintcOgeniecLcLEKF_tgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("XmlParserStatus_t",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEXmlParseStatus),0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,FermiMomentumTable*>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEstringcOgeniecLcLFermiMomentumTablemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLFermiMomentumTablemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,genie::FermiMomentumTable*>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEstringcOgeniecLcLFermiMomentumTablemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLFermiMomentumTablemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,genie::FermiMomentumTable*,less<string> >",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEstringcOgeniecLcLFermiMomentumTablemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLFermiMomentumTablemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,const NuclearModelI*>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEintcOconstsPgeniecLcLNuclearModelImUcOlesslEintgRcOallocatorlEpairlEconstsPintcOconstsPgeniecLcLNuclearModelImUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,const genie::NuclearModelI*>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEintcOconstsPgeniecLcLNuclearModelImUcOlesslEintgRcOallocatorlEpairlEconstsPintcOconstsPgeniecLcLNuclearModelImUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,const genie::NuclearModelI*,less<int> >",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEintcOconstsPgeniecLcLNuclearModelImUcOlesslEintgRcOallocatorlEpairlEconstsPintcOconstsPgeniecLcLNuclearModelImUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,Spline*>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEintcOgeniecLcLSplinemUcOlesslEintgRcOallocatorlEpairlEconstsPintcOgeniecLcLSplinemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,genie::Spline*>",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEintcOgeniecLcLSplinemUcOlesslEintgRcOallocatorlEpairlEconstsPintcOgeniecLcLSplinemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,genie::Spline*,less<int> >",117,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEintcOgeniecLcLSplinemUcOlesslEintgRcOallocatorlEpairlEconstsPintcOgeniecLcLSplinemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* genie */
static void G__setup_memvargenie(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_genie));
   {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEAlgStatus),-1,-2,1,G__FastAllocString(2048).Format("kAlgUndefinedStatus=%lldLL",(long long)genie::kAlgUndefinedStatus).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEAlgStatus),-1,-2,1,G__FastAllocString(2048).Format("kAlgFail=%lldLL",(long long)genie::kAlgFail).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEAlgStatus),-1,-2,1,G__FastAllocString(2048).Format("kAlgSuccess=%lldLL",(long long)genie::kAlgSuccess).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEAlgCmp),-1,-2,1,G__FastAllocString(2048).Format("kAlgCmpUnknown=%lldLL",(long long)genie::kAlgCmpUnknown).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEAlgCmp),-1,-2,1,G__FastAllocString(2048).Format("kAlgCmpIdentical=%lldLL",(long long)genie::kAlgCmpIdentical).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEAlgCmp),-1,-2,1,G__FastAllocString(2048).Format("kAlgCmpDiffConfig=%lldLL",(long long)genie::kAlgCmpDiffConfig).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEAlgCmp),-1,-2,1,G__FastAllocString(2048).Format("kAlgCmpDiffAlg=%lldLL",(long long)genie::kAlgCmpDiffAlg).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgUndefined=%lldLL",(long long)genie::kRgUndefined).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgBool=%lldLL",(long long)genie::kRgBool).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgInt=%lldLL",(long long)genie::kRgInt).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgDbl=%lldLL",(long long)genie::kRgDbl).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgStr=%lldLL",(long long)genie::kRgStr).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgAlg=%lldLL",(long long)genie::kRgAlg).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgH1F=%lldLL",(long long)genie::kRgH1F).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgH2F=%lldLL",(long long)genie::kRgH2F).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgTree=%lldLL",(long long)genie::kRgTree).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLENuclearModel),-1,-2,1,G__FastAllocString(2048).Format("kNucmUndefined=%lldLL",(long long)genie::kNucmUndefined).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLENuclearModel),-1,-2,1,G__FastAllocString(2048).Format("kNucmFermiGas=%lldLL",(long long)genie::kNucmFermiGas).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLENuclearModel),-1,-2,1,G__FastAllocString(2048).Format("kNucmSpectralFunc=%lldLL",(long long)genie::kNucmSpectralFunc).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLENuclearModel),-1,-2,1,G__FastAllocString(2048).Format("kNucmEffSpectralFunc=%lldLL",(long long)genie::kNucmEffSpectralFunc).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEFermiMoverInteractionType),-1,-2,1,G__FastAllocString(2048).Format("kFermiMoveDefault=%lldLL",(long long)genie::kFermiMoveDefault).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEFermiMoverInteractionType),-1,-2,1,G__FastAllocString(2048).Format("kFermiMoveEffectiveSF1p1h=%lldLL",(long long)genie::kFermiMoveEffectiveSF1p1h).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEFermiMoverInteractionType),-1,-2,1,G__FastAllocString(2048).Format("kFermiMoveEffectiveSF2p2h_eject=%lldLL",(long long)genie::kFermiMoveEffectiveSF2p2h_eject).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEFermiMoverInteractionType),-1,-2,1,G__FastAllocString(2048).Format("kFermiMoveEffectiveSF2p2h_noeject=%lldLL",(long long)genie::kFermiMoveEffectiveSF2p2h_noeject).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEXmlParseStatus),-1,-2,1,G__FastAllocString(2048).Format("kXmlUndefined=%lldLL",(long long)genie::kXmlUndefined).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEXmlParseStatus),-1,-2,1,G__FastAllocString(2048).Format("kXmlOK=%lldLL",(long long)genie::kXmlOK).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEXmlParseStatus),-1,-2,1,G__FastAllocString(2048).Format("kXmlNotParsed=%lldLL",(long long)genie::kXmlNotParsed).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEXmlParseStatus),-1,-2,1,G__FastAllocString(2048).Format("kXmlEmpty=%lldLL",(long long)genie::kXmlEmpty).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEXmlParseStatus),-1,-2,1,G__FastAllocString(2048).Format("kXmlInvalidRoot=%lldLL",(long long)genie::kXmlInvalidRoot).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genie::NuclearModel */
static void G__setup_memvargeniecLcLNuclearModel(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModel));
   { genie::NuclearModel *p; p=(genie::NuclearModel*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* genie::NuclearModelI */
static void G__setup_memvargeniecLcLNuclearModelI(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModelI));
   { genie::NuclearModelI *p; p=(genie::NuclearModelI*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fCurrRemovalEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_TVector3),-1,-1,2,"fCurrMomentum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEFermiMoverInteractionType),G__defined_typename("FermiMoverInteractionType_t"),-1,2,"fFermiMoverInteractionType=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genie::EffectiveSF */
static void G__setup_memvargeniecLcLEffectiveSF(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEffectiveSF));
   { genie::EffectiveSF *p; p=(genie::EffectiveSF*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR),G__defined_typename("map<string,TH1D*>"),-1,4,"fProbDistroMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fPMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fPCutOff=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fEjectSecondNucleon2p2h=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("map<int,double>"),-1,4,"fNucRmvE=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("map<int,double>"),-1,4,"f1p1hMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEintcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),G__defined_typename("map<int,std::vector<double> >"),-1,4,"fProbDistParams=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("map<int,double>"),-1,4,"fTransEnh1p1hMods=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEpairlEintcOintgRcOdoublecOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOdoublegRsPgRsPgR),G__defined_typename("map<pair<int,int>,double>"),-1,4,"fRangeNucRmvE=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEpairlEintcOintgRcOdoublecOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOdoublegRsPgRsPgR),G__defined_typename("map<pair<int,int>,double>"),-1,4,"fRange1p1hMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEpairlEintcOintgRcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),G__defined_typename("map<pair<int,int>,std::vector<double> >"),-1,4,"fRangeProbDistParams=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEpairlEintcOintgRcOdoublecOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOdoublegRsPgRsPgR),G__defined_typename("map<pair<int,int>,double>"),-1,4,"fRangeTransEnh1p1hMods=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genie::FermiMomentumTable */
static void G__setup_memvargeniecLcLFermiMomentumTable(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLFermiMomentumTable));
   { genie::FermiMomentumTable *p; p=(genie::FermiMomentumTable*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEintcOgeniecLcLEKF_tcOlesslEintgRcOallocatorlEpairlEconstsPintcOgeniecLcLEKF_tgRsPgRsPgR),G__defined_typename("map<int,KF_t>"),-1,4,"fKFSets=",0,"the actual Fermi momenta table");
   }
   G__tag_memvar_reset();
}


   /* genie::FermiMomentumTablePool */
static void G__setup_memvargeniecLcLFermiMomentumTablePool(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLFermiMomentumTablePool));
   { genie::FermiMomentumTablePool *p; p=(genie::FermiMomentumTablePool*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLFermiMomentumTablePool),-1,-2,4,"fInstance=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEstringcOgeniecLcLFermiMomentumTablemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLFermiMomentumTablemUgRsPgRsPgR),G__defined_typename("map<string,FermiMomentumTable*>"),-1,4,"fKFSets=",0,"kf tables");
   }
   G__tag_memvar_reset();
}


   /* genie::FGMBodekRitchie */
static void G__setup_memvargeniecLcLFGMBodekRitchie(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLFGMBodekRitchie));
   { genie::FGMBodekRitchie *p; p=(genie::FGMBodekRitchie*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR),G__defined_typename("map<string,TH1D*>"),-1,4,"fProbDistroMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("map<int,double>"),-1,4,"fNucRmvE=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fPMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fPCutOff=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_string),-1,-1,4,"fKFTable=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genie::NuclearModelMap */
static void G__setup_memvargeniecLcLNuclearModelMap(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModelMap));
   { genie::NuclearModelMap *p; p=(genie::NuclearModelMap*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModelI),-1,-1,4,"fDefGlobModel=",0,"/< default basic model (should work for all nuclei)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEintcOconstsPgeniecLcLNuclearModelImUcOlesslEintgRcOallocatorlEpairlEconstsPintcOconstsPgeniecLcLNuclearModelImUgRsPgRsPgR),G__defined_typename("map<int,const NuclearModelI*>"),-1,4,"fRefinedModels=",0,"/< refinements for specific elements");
   }
   G__tag_memvar_reset();
}


   /* genie::SpectralFunc1d */
static void G__setup_memvargeniecLcLSpectralFunc1d(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLSpectralFunc1d));
   { genie::SpectralFunc1d *p; p=(genie::SpectralFunc1d*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fUseRFGRemovalE=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fUseRFGMomentumCutoff=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fPCutOff=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEintcOgeniecLcLSplinemUcOlesslEintgRcOallocatorlEpairlEconstsPintcOgeniecLcLSplinemUgRsPgRsPgR),G__defined_typename("map<int,Spline*>"),-1,4,"fSFk=",0,"/< All available spectral funcs integrated over removal energy");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEintcOgeniecLcLSplinemUcOlesslEintgRcOallocatorlEpairlEconstsPintcOgeniecLcLSplinemUgRsPgRsPgR),G__defined_typename("map<int,Spline*>"),-1,4,"fSFw=",0,"/< Average nucleon removal as a function of pF - computed from the spectral function");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("map<int,double>"),-1,4,"fNucRmvE=",0,"/< Removal energies as used in FG model");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),G__defined_typename("map<int,double>"),-1,4,"fMaxProb=",0,"/< Max SF(k) probability used in rejection method");
   }
   G__tag_memvar_reset();
}


   /* genie::SpectralFunc */
static void G__setup_memvargeniecLcLSpectralFunc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLSpectralFunc));
   { genie::SpectralFunc *p; p=(genie::SpectralFunc*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_TGraph2D),-1,-1,4,"fSfFe56=",0,"/< Benhar's Fe56 SF");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_TGraph2D),-1,-1,4,"fSfC12=",0,"/< Benhar's C12 SF");
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvar_ROOT_DICT_Nuclear() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncgenie(void) {
   /* genie */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_genie));
   G__memfunc_setup("operator<<",996,G___ROOT_DICT_Nuclear_486_0_1, 117, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - stream u 'genie::AlgId' - 11 - alg", (char*)NULL, (void*) G__func2void( (ostream& (*)(ostream&, const genie::AlgId&))(&genie::operator<<) ), 0);
   G__memfunc_setup("operator<<",996,G___ROOT_DICT_Nuclear_486_0_2, 117, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - stream u 'genie::Registry' - 11 - registry", (char*)NULL, (void*) G__func2void( (ostream& (*)(ostream&, const genie::Registry&))(&genie::operator<<) ), 0);
   G__memfunc_setup("operator<<",996,G___ROOT_DICT_Nuclear_486_0_3, 117, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - stream u 'genie::Algorithm' - 11 - alg", (char*)NULL, (void*) G__func2void( (ostream& (*)(ostream&, const genie::Algorithm&))(&genie::operator<<) ), 0);
   G__memfunc_setup("operator<<",996,G___ROOT_DICT_Nuclear_486_0_4, 117, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - stream u 'genie::Target' - 11 - t", "/< print", (void*) G__func2void( (ostream& (*)(ostream&, const genie::Target&))(&genie::operator<<) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLNuclearModel(void) {
   /* genie::NuclearModel */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModel));
   G__memfunc_setup("AsString",811,G___ROOT_DICT_Nuclear_601_0_1, 67, -1, -1, 0, 1, 3, 1, 1, "u 'genie::ENuclearModel' 'genie::NuclearModel_t' 0 - nucmod", (char*)NULL, (void*) G__func2void( (const char* (*)(genie::NuclearModel_t))(&genie::NuclearModel::AsString) ), 0);
   // automatic default constructor
   G__memfunc_setup("NuclearModel", 1211, G___ROOT_DICT_Nuclear_601_0_2, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModel), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("NuclearModel", 1211, G___ROOT_DICT_Nuclear_601_0_3, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModel), -1, 0, 1, 1, 1, 0, "u 'genie::NuclearModel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~NuclearModel", 1337, G___ROOT_DICT_Nuclear_601_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Nuclear_601_0_5, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModel), -1, 1, 1, 1, 1, 0, "u 'genie::NuclearModel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLNuclearModelI(void) {
   /* genie::NuclearModelI */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModelI));
   G__memfunc_setup("GenerateNucleon",1535,G___ROOT_DICT_Nuclear_602_0_1, 103, -1, -1, 0, 1, 1, 1, 8, "u 'genie::Target' - 11 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Prob",403,G___ROOT_DICT_Nuclear_602_0_2, 100, -1, -1, 0, 3, 1, 1, 8, 
"d - - 0 - p d - - 0 - w "
"u 'genie::Target' - 11 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("ModelType",915,G___ROOT_DICT_Nuclear_602_0_3, 105, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLENuclearModel), G__defined_typename("genie::NuclearModel_t"), 0, 1, 1, 1, 8, "u 'genie::Target' - 11 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("RemovalEnergy",1344,G___ROOT_DICT_Nuclear_602_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Momentum",850,G___ROOT_DICT_Nuclear_602_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Momentum3",901,G___ROOT_DICT_Nuclear_602_0_6, 117, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFermiMoverInteractionType",2878,G___ROOT_DICT_Nuclear_602_0_7, 105, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEFermiMoverInteractionType), G__defined_typename("genie::FermiMoverInteractionType_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~NuclearModelI", 1410, G___ROOT_DICT_Nuclear_602_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Nuclear_602_0_12, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModelI), -1, 1, 1, 1, 1, 0, "u 'genie::NuclearModelI' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLEffectiveSF(void) {
   /* genie::EffectiveSF */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEffectiveSF));
   G__memfunc_setup("EffectiveSF",1066,G___ROOT_DICT_Nuclear_603_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEffectiveSF), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EffectiveSF",1066,G___ROOT_DICT_Nuclear_603_0_2, 105, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEffectiveSF), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - config", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenerateNucleon",1535,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 8, "u 'genie::Target' - 11 - t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Prob",403,(G__InterfaceMethod) NULL,100, -1, -1, 0, 3, 1, 1, 8, 
"d - - 0 - p d - - 0 - w "
"u 'genie::Target' - 11 - t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ModelType",915,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLENuclearModel), G__defined_typename("genie::NuclearModel_t"), 0, 1, 1, 1, 8, "u 'genie::Target' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Configure",930,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'genie::Registry' - 11 - config", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Configure",930,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - param_set", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ProbDistro",1032,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_TH1D), -1, 0, 1, 1, 4, 8, "u 'genie::Target' - 11 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeEffectiveSF",1448,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_TH1D), -1, 0, 1, 1, 4, 8, "u 'genie::Target' - 11 - target", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeEffectiveSF",1448,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_TH1D), -1, 0, 8, 1, 4, 8, 
"d - - 0 - bs d - - 0 - bp "
"d - - 0 - alpha d - - 0 - beta "
"d - - 0 - c1 d - - 0 - c2 "
"d - - 0 - c3 u 'genie::Target' - 11 - target", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReturnBindingEnergy",1957,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 4, 8, "u 'genie::Target' - 11 - target", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTransEnh1p1hMod",1693,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 4, 8, "u 'genie::Target' - 11 - target", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Returnf1p1h",1056,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 1, 1, 4, 8, "u 'genie::Target' - 11 - target", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadConfig",982,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("EffectiveSF", 1066, G___ROOT_DICT_Nuclear_603_0_15, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEffectiveSF), -1, 0, 1, 1, 1, 0, "u 'genie::EffectiveSF' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EffectiveSF", 1192, G___ROOT_DICT_Nuclear_603_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Nuclear_603_0_17, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEffectiveSF), -1, 1, 1, 1, 1, 0, "u 'genie::EffectiveSF' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLFermiMomentumTable(void) {
   /* genie::FermiMomentumTable */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLFermiMomentumTable));
   G__memfunc_setup("FermiMomentumTable",1837,G___ROOT_DICT_Nuclear_642_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLFermiMomentumTable), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FermiMomentumTable",1837,G___ROOT_DICT_Nuclear_642_0_2, 105, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLFermiMomentumTable), -1, 0, 1, 1, 1, 0, "u 'genie::FermiMomentumTable' - 11 - fmt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindClosestKF",1263,G___ROOT_DICT_Nuclear_642_0_3, 100, -1, -1, 0, 2, 1, 1, 8, 
"i - - 0 - target_pdgc i - - 0 - nucleon_pdgc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTableEntry",1283,G___ROOT_DICT_Nuclear_642_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - target_pdgc u 'genie::EKF_t' 'genie::KF_t' 0 - kf", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FermiMomentumTable", 1963, G___ROOT_DICT_Nuclear_642_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Nuclear_642_0_6, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLFermiMomentumTable), -1, 1, 1, 1, 1, 0, "u 'genie::FermiMomentumTable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLFermiMomentumTablePool(void) {
   /* genie::FermiMomentumTablePool */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLFermiMomentumTablePool));
   G__memfunc_setup("Instance",821,G___ROOT_DICT_Nuclear_652_0_1, 85, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLFermiMomentumTablePool), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (genie::FermiMomentumTablePool* (*)())(&genie::FermiMomentumTablePool::Instance) ), 0);
   G__memfunc_setup("GetTable",776,G___ROOT_DICT_Nuclear_652_0_2, 85, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLFermiMomentumTable), -1, 0, 1, 1, 1, 1, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FermiMomentumTablePool",2247,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLFermiMomentumTablePool), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FermiMomentumTablePool",2247,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLFermiMomentumTablePool), -1, 0, 1, 1, 4, 0, "u 'genie::FermiMomentumTablePool' - 11 - fmc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadTables",987,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseXMLTables",1351,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLEXmlParseStatus), G__defined_typename("genie::XmlParserStatus_t"), 0, 1, 1, 4, 0, "u 'string' - 0 - filename", (char*)NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Nuclear_652_0_7, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLFermiMomentumTablePool), -1, 1, 1, 1, 1, 0, "u 'genie::FermiMomentumTablePool' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLFGMBodekRitchie(void) {
   /* genie::FGMBodekRitchie */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLFGMBodekRitchie));
   G__memfunc_setup("FGMBodekRitchie",1415,G___ROOT_DICT_Nuclear_661_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLFGMBodekRitchie), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FGMBodekRitchie",1415,G___ROOT_DICT_Nuclear_661_0_2, 105, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLFGMBodekRitchie), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - config", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenerateNucleon",1535,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 8, "u 'genie::Target' - 11 - t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Prob",403,(G__InterfaceMethod) NULL,100, -1, -1, 0, 3, 1, 1, 8, 
"d - - 0 - p d - - 0 - w "
"u 'genie::Target' - 11 - t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ModelType",915,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLENuclearModel), G__defined_typename("genie::NuclearModel_t"), 0, 1, 1, 1, 8, "u 'genie::Target' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Configure",930,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'genie::Registry' - 11 - config", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Configure",930,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - param_set", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadConfig",982,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProbDistro",1032,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_TH1D), -1, 0, 1, 1, 4, 8, "u 'genie::Target' - 11 - t", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("FGMBodekRitchie", 1415, G___ROOT_DICT_Nuclear_661_0_10, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLFGMBodekRitchie), -1, 0, 1, 1, 1, 0, "u 'genie::FGMBodekRitchie' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FGMBodekRitchie", 1541, G___ROOT_DICT_Nuclear_661_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Nuclear_661_0_12, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLFGMBodekRitchie), -1, 1, 1, 1, 1, 0, "u 'genie::FGMBodekRitchie' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLNuclearModelMap(void) {
   /* genie::NuclearModelMap */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModelMap));
   G__memfunc_setup("NuclearModelMap",1497,G___ROOT_DICT_Nuclear_665_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModelMap), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NuclearModelMap",1497,G___ROOT_DICT_Nuclear_665_0_2, 105, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModelMap), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - config", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenerateNucleon",1535,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 8, "u 'genie::Target' - 11 - t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Prob",403,(G__InterfaceMethod) NULL,100, -1, -1, 0, 3, 1, 1, 8, 
"d - - 0 - p d - - 0 - w "
"u 'genie::Target' - 11 - t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ModelType",915,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLENuclearModel), G__defined_typename("genie::NuclearModel_t"), 0, 1, 1, 1, 8, "u 'genie::Target' - 11 - t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Configure",930,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'genie::Registry' - 11 - config", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Configure",930,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - config", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadConfig",982,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectModel",1105,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModelI), -1, 0, 1, 1, 4, 9, "u 'genie::Target' - 11 - t", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("NuclearModelMap", 1497, G___ROOT_DICT_Nuclear_665_0_10, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModelMap), -1, 0, 1, 1, 1, 0, "u 'genie::NuclearModelMap' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~NuclearModelMap", 1623, G___ROOT_DICT_Nuclear_665_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLSpectralFunc1d(void) {
   /* genie::SpectralFunc1d */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLSpectralFunc1d));
   G__memfunc_setup("SpectralFunc1d",1375,G___ROOT_DICT_Nuclear_673_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLSpectralFunc1d), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SpectralFunc1d",1375,G___ROOT_DICT_Nuclear_673_0_2, 105, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLSpectralFunc1d), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - config", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenerateNucleon",1535,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 8, "u 'genie::Target' - 11 - t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Prob",403,(G__InterfaceMethod) NULL,100, -1, -1, 0, 3, 1, 1, 8, 
"d - - 0 - p d - - 0 - w "
"u 'genie::Target' - 11 - t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ModelType",915,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLENuclearModel), G__defined_typename("genie::NuclearModel_t"), 0, 1, 1, 1, 8, "u 'genie::Target' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Configure",930,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'genie::Registry' - 11 - config", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Configure",930,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - param_set", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadConfig",982,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CleanUp",680,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SpectralFunc1d", 1375, G___ROOT_DICT_Nuclear_673_0_10, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLSpectralFunc1d), -1, 0, 1, 1, 1, 0, "u 'genie::SpectralFunc1d' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SpectralFunc1d", 1501, G___ROOT_DICT_Nuclear_673_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Nuclear_673_0_12, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLSpectralFunc1d), -1, 1, 1, 1, 1, 0, "u 'genie::SpectralFunc1d' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLSpectralFunc(void) {
   /* genie::SpectralFunc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLSpectralFunc));
   G__memfunc_setup("SpectralFunc",1226,G___ROOT_DICT_Nuclear_683_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLSpectralFunc), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SpectralFunc",1226,G___ROOT_DICT_Nuclear_683_0_2, 105, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLSpectralFunc), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - config", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenerateNucleon",1535,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 8, "u 'genie::Target' - 11 - t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Prob",403,(G__InterfaceMethod) NULL,100, -1, -1, 0, 3, 1, 1, 8, 
"d - - 0 - p d - - 0 - w "
"u 'genie::Target' - 11 - t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ModelType",915,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLENuclearModel), G__defined_typename("genie::NuclearModel_t"), 0, 1, 1, 1, 8, "u 'genie::Target' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Configure",930,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'genie::Registry' - 11 - config", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Configure",930,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - config", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadConfig",982,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Convert2Graph",1285,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_TGraph2D), -1, 0, 1, 1, 4, 8, "u 'TNtupleD' - 1 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectSpectralFunction",2276,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_TGraph2D), -1, 0, 1, 1, 4, 8, "u 'genie::Target' - 11 - target", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SpectralFunc", 1226, G___ROOT_DICT_Nuclear_683_0_11, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLSpectralFunc), -1, 0, 1, 1, 1, 0, "u 'genie::SpectralFunc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SpectralFunc", 1352, G___ROOT_DICT_Nuclear_683_0_12, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Nuclear_683_0_13, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_NuclearLN_geniecLcLSpectralFunc), -1, 1, 1, 1, 1, 0, "u 'genie::SpectralFunc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfunc_ROOT_DICT_Nuclear() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_global_ROOT_DICT_Nuclear() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_func_ROOT_DICT_Nuclear() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G___ROOT_DICT_NuclearLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_string = { "string" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_genie = { "genie" , 110 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_geniecLcLEAlgStatus = { "genie::EAlgStatus" , 101 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_geniecLcLEAlgCmp = { "genie::EAlgCmp" , 101 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_geniecLcLAlgId = { "genie::AlgId" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_geniecLcLERgType = { "genie::ERgType" , 101 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgR = { "map<string,genie::RegistryItemI*,less<string>,allocator<pair<const string,genie::RegistryItemI*> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_pairlEstringcOgeniecLcLRegistryItemImUgR = { "pair<string,genie::RegistryItemI*>" , 115 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgRcLcLiterator = { "map<string,genie::RegistryItemI*,less<string>,allocator<pair<const string,genie::RegistryItemI*> > >::iterator" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_geniecLcLRegistry = { "genie::Registry" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_geniecLcLAlgorithm = { "genie::Algorithm" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgR = { "map<string,genie::Algorithm*,less<string>,allocator<pair<const string,genie::Algorithm*> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_pairlEstringcOgeniecLcLAlgorithmmUgR = { "pair<string,genie::Algorithm*>" , 115 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgRcLcLiterator = { "map<string,genie::Algorithm*,less<string>,allocator<pair<const string,genie::Algorithm*> > >::iterator" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_geniecLcLTarget = { "genie::Target" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_geniecLcLENuclearModel = { "genie::ENuclearModel" , 101 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_geniecLcLEFermiMoverInteractionType = { "genie::EFermiMoverInteractionType" , 101 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_geniecLcLNuclearModel = { "genie::NuclearModel" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_geniecLcLNuclearModelI = { "genie::NuclearModelI" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_geniecLcLEffectiveSF = { "genie::EffectiveSF" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR = { "map<string,TH1D*,less<string>,allocator<pair<const string,TH1D*> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR = { "map<int,double,less<int>,allocator<pair<const int,double> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_maplEintcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR = { "map<int,vector<double,allocator<double> >,less<int>,allocator<pair<const int,vector<double,allocator<double> > > > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_maplEpairlEintcOintgRcOdoublecOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOdoublegRsPgRsPgR = { "map<pair<int,int>,double,less<pair<int,int> >,allocator<pair<const pair<int,int>,double> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_maplEpairlEintcOintgRcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR = { "map<pair<int,int>,vector<double,allocator<double> >,less<pair<int,int> >,allocator<pair<const pair<int,int>,vector<double,allocator<double> > > > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_geniecLcLEKF_t = { "genie::EKF_t" , 115 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_geniecLcLFermiMomentumTable = { "genie::FermiMomentumTable" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_maplEintcOgeniecLcLEKF_tcOlesslEintgRcOallocatorlEpairlEconstsPintcOgeniecLcLEKF_tgRsPgRsPgR = { "map<int,genie::EKF_t,less<int>,allocator<pair<const int,genie::EKF_t> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_geniecLcLEXmlParseStatus = { "genie::EXmlParseStatus" , 101 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_geniecLcLFermiMomentumTablePool = { "genie::FermiMomentumTablePool" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_maplEstringcOgeniecLcLFermiMomentumTablemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLFermiMomentumTablemUgRsPgRsPgR = { "map<string,genie::FermiMomentumTable*,less<string>,allocator<pair<const string,genie::FermiMomentumTable*> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_geniecLcLFGMBodekRitchie = { "genie::FGMBodekRitchie" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_geniecLcLNuclearModelMap = { "genie::NuclearModelMap" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_maplEintcOconstsPgeniecLcLNuclearModelImUcOlesslEintgRcOallocatorlEpairlEconstsPintcOconstsPgeniecLcLNuclearModelImUgRsPgRsPgR = { "map<int,const genie::NuclearModelI*,less<int>,allocator<pair<const int,const genie::NuclearModelI*> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_geniecLcLSpectralFunc1d = { "genie::SpectralFunc1d" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_maplEintcOgeniecLcLSplinemUcOlesslEintgRcOallocatorlEpairlEconstsPintcOgeniecLcLSplinemUgRsPgRsPgR = { "map<int,genie::Spline*,less<int>,allocator<pair<const int,genie::Spline*> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_TNtupleD = { "TNtupleD" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_TGraph2D = { "TGraph2D" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NuclearLN_geniecLcLSpectralFunc = { "genie::SpectralFunc" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtable_ROOT_DICT_Nuclear() {
  G___ROOT_DICT_NuclearLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_string.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_TVectorTlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_TVectorTlEdoublegR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_TH1D.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_TVector3.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_genie.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_geniecLcLEAlgStatus.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_geniecLcLEAlgCmp.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_geniecLcLAlgId.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_geniecLcLERgType.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_pairlEstringcOgeniecLcLRegistryItemImUgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_geniecLcLRegistry.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_geniecLcLAlgorithm.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_pairlEstringcOgeniecLcLAlgorithmmUgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_geniecLcLTarget.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_geniecLcLENuclearModel.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_geniecLcLEFermiMoverInteractionType.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_geniecLcLNuclearModel.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_geniecLcLNuclearModelI.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_geniecLcLEffectiveSF.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_maplEintcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_maplEpairlEintcOintgRcOdoublecOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOdoublegRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_maplEpairlEintcOintgRcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_geniecLcLEKF_t.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_geniecLcLFermiMomentumTable.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_maplEintcOgeniecLcLEKF_tcOlesslEintgRcOallocatorlEpairlEconstsPintcOgeniecLcLEKF_tgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_geniecLcLEXmlParseStatus.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_geniecLcLFermiMomentumTablePool.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_maplEstringcOgeniecLcLFermiMomentumTablemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLFermiMomentumTablemUgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_geniecLcLFGMBodekRitchie.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_geniecLcLNuclearModelMap.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_maplEintcOconstsPgeniecLcLNuclearModelImUcOlesslEintgRcOallocatorlEpairlEconstsPintcOconstsPgeniecLcLNuclearModelImUgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_geniecLcLSpectralFunc1d.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_maplEintcOgeniecLcLSplinemUcOlesslEintgRcOallocatorlEpairlEconstsPintcOgeniecLcLSplinemUgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_TNtupleD.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_TGraph2D.tagnum = -1 ;
  G___ROOT_DICT_NuclearLN_geniecLcLSpectralFunc.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtable_ROOT_DICT_Nuclear() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_string);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_TH1D);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_TVector3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_genie),0,-1,0,(char*)NULL,G__setup_memvargenie,G__setup_memfuncgenie);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_geniecLcLEAlgStatus);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_geniecLcLEAlgCmp);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_geniecLcLAlgId);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_geniecLcLERgType);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_pairlEstringcOgeniecLcLRegistryItemImUgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_geniecLcLRegistry);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_geniecLcLAlgorithm);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_pairlEstringcOgeniecLcLAlgorithmmUgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_geniecLcLTarget);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_geniecLcLENuclearModel);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_geniecLcLEFermiMoverInteractionType);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModel),sizeof(genie::NuclearModel),-1,0,(char*)NULL,G__setup_memvargeniecLcLNuclearModel,G__setup_memfuncgeniecLcLNuclearModel);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModelI),sizeof(genie::NuclearModelI),-1,34051,(char*)NULL,G__setup_memvargeniecLcLNuclearModelI,G__setup_memfuncgeniecLcLNuclearModelI);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_geniecLcLEffectiveSF),sizeof(genie::EffectiveSF),-1,34048,(char*)NULL,G__setup_memvargeniecLcLEffectiveSF,G__setup_memfuncgeniecLcLEffectiveSF);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_maplEstringcOTH1DmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1DmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_maplEintcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_maplEpairlEintcOintgRcOdoublecOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_maplEpairlEintcOintgRcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_geniecLcLEKF_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_geniecLcLFermiMomentumTable),sizeof(genie::FermiMomentumTable),-1,1792,(char*)NULL,G__setup_memvargeniecLcLFermiMomentumTable,G__setup_memfuncgeniecLcLFermiMomentumTable);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_maplEintcOgeniecLcLEKF_tcOlesslEintgRcOallocatorlEpairlEconstsPintcOgeniecLcLEKF_tgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_geniecLcLEXmlParseStatus);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_geniecLcLFermiMomentumTablePool),sizeof(genie::FermiMomentumTablePool),-1,1792,(char*)NULL,G__setup_memvargeniecLcLFermiMomentumTablePool,G__setup_memfuncgeniecLcLFermiMomentumTablePool);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_maplEstringcOgeniecLcLFermiMomentumTablemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLFermiMomentumTablemUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_geniecLcLFGMBodekRitchie),sizeof(genie::FGMBodekRitchie),-1,34048,(char*)NULL,G__setup_memvargeniecLcLFGMBodekRitchie,G__setup_memfuncgeniecLcLFGMBodekRitchie);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_geniecLcLNuclearModelMap),sizeof(genie::NuclearModelMap),-1,34048,(char*)NULL,G__setup_memvargeniecLcLNuclearModelMap,G__setup_memfuncgeniecLcLNuclearModelMap);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_maplEintcOconstsPgeniecLcLNuclearModelImUcOlesslEintgRcOallocatorlEpairlEconstsPintcOconstsPgeniecLcLNuclearModelImUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_geniecLcLSpectralFunc1d),sizeof(genie::SpectralFunc1d),-1,34048,(char*)NULL,G__setup_memvargeniecLcLSpectralFunc1d,G__setup_memfuncgeniecLcLSpectralFunc1d);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_maplEintcOgeniecLcLSplinemUcOlesslEintgRcOallocatorlEpairlEconstsPintcOgeniecLcLSplinemUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_TNtupleD);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_TGraph2D);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NuclearLN_geniecLcLSpectralFunc),sizeof(genie::SpectralFunc),-1,34048,(char*)NULL,G__setup_memvargeniecLcLSpectralFunc,G__setup_memfuncgeniecLcLSpectralFunc);
}
extern "C" void G__cpp_setup_ROOT_DICT_Nuclear(void) {
  G__check_setup_version(30051515,"G__cpp_setup_ROOT_DICT_Nuclear()");
  G__set_cpp_environment_ROOT_DICT_Nuclear();
  G__cpp_setup_tagtable_ROOT_DICT_Nuclear();

  G__cpp_setup_inheritance_ROOT_DICT_Nuclear();

  G__cpp_setup_typetable_ROOT_DICT_Nuclear();

  G__cpp_setup_memvar_ROOT_DICT_Nuclear();

  G__cpp_setup_memfunc_ROOT_DICT_Nuclear();
  G__cpp_setup_global_ROOT_DICT_Nuclear();
  G__cpp_setup_func_ROOT_DICT_Nuclear();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfunc_ROOT_DICT_Nuclear();
  return;
}
class G__cpp_setup_init_ROOT_DICT_Nuclear {
  public:
    G__cpp_setup_init_ROOT_DICT_Nuclear() { G__add_setup_func("_ROOT_DICT_Nuclear",(G__incsetup)(&G__cpp_setup_ROOT_DICT_Nuclear)); G__call_setup_funcs(); }
   ~G__cpp_setup_init_ROOT_DICT_Nuclear() { G__remove_setup_func("_ROOT_DICT_Nuclear"); }
};
G__cpp_setup_init_ROOT_DICT_Nuclear G__cpp_setup_initializer_ROOT_DICT_Nuclear;

