//
// File generated by rootcint at Thu Jul 13 14:23:15 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME _ROOT_DICT_Algorithm
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "_ROOT_DICT_Algorithm.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace genie {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void genie_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("genie", 0 /*version*/, "./AlgFactory.h", 33,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &genie_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void genie_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOTDict {
   void geniecLcLAlgStatus_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLAlgStatus_Dictionary();
   static void *new_geniecLcLAlgStatus(void *p = 0);
   static void *newArray_geniecLcLAlgStatus(Long_t size, void *p);
   static void delete_geniecLcLAlgStatus(void *p);
   static void deleteArray_geniecLcLAlgStatus(void *p);
   static void destruct_geniecLcLAlgStatus(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::AlgStatus*)
   {
      ::genie::AlgStatus *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::AlgStatus),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::AlgStatus", "/users/mouland/Documents/GENIE_NCGamma/src//Algorithm/AlgStatus.h", 37,
                  typeid(::genie::AlgStatus), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLAlgStatus_Dictionary, isa_proxy, 0,
                  sizeof(::genie::AlgStatus) );
      instance.SetNew(&new_geniecLcLAlgStatus);
      instance.SetNewArray(&newArray_geniecLcLAlgStatus);
      instance.SetDelete(&delete_geniecLcLAlgStatus);
      instance.SetDeleteArray(&deleteArray_geniecLcLAlgStatus);
      instance.SetDestructor(&destruct_geniecLcLAlgStatus);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::AlgStatus*)
   {
      return GenerateInitInstanceLocal((::genie::AlgStatus*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::AlgStatus*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLAlgStatus_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::AlgStatus*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLAlgCmp_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLAlgCmp_Dictionary();
   static void *new_geniecLcLAlgCmp(void *p = 0);
   static void *newArray_geniecLcLAlgCmp(Long_t size, void *p);
   static void delete_geniecLcLAlgCmp(void *p);
   static void deleteArray_geniecLcLAlgCmp(void *p);
   static void destruct_geniecLcLAlgCmp(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::AlgCmp*)
   {
      ::genie::AlgCmp *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::AlgCmp),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::AlgCmp", "/users/mouland/Documents/GENIE_NCGamma/src//Algorithm/AlgCmp.h", 38,
                  typeid(::genie::AlgCmp), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLAlgCmp_Dictionary, isa_proxy, 0,
                  sizeof(::genie::AlgCmp) );
      instance.SetNew(&new_geniecLcLAlgCmp);
      instance.SetNewArray(&newArray_geniecLcLAlgCmp);
      instance.SetDelete(&delete_geniecLcLAlgCmp);
      instance.SetDeleteArray(&deleteArray_geniecLcLAlgCmp);
      instance.SetDestructor(&destruct_geniecLcLAlgCmp);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::AlgCmp*)
   {
      return GenerateInitInstanceLocal((::genie::AlgCmp*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::AlgCmp*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLAlgCmp_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::AlgCmp*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLAlgId_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLAlgId_Dictionary();
   static void *new_geniecLcLAlgId(void *p = 0);
   static void *newArray_geniecLcLAlgId(Long_t size, void *p);
   static void delete_geniecLcLAlgId(void *p);
   static void deleteArray_geniecLcLAlgId(void *p);
   static void destruct_geniecLcLAlgId(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::AlgId*)
   {
      ::genie::AlgId *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::AlgId),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::AlgId", "/users/mouland/Documents/GENIE_NCGamma/src//Algorithm/AlgId.h", 32,
                  typeid(::genie::AlgId), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLAlgId_Dictionary, isa_proxy, 0,
                  sizeof(::genie::AlgId) );
      instance.SetNew(&new_geniecLcLAlgId);
      instance.SetNewArray(&newArray_geniecLcLAlgId);
      instance.SetDelete(&delete_geniecLcLAlgId);
      instance.SetDeleteArray(&deleteArray_geniecLcLAlgId);
      instance.SetDestructor(&destruct_geniecLcLAlgId);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::AlgId*)
   {
      return GenerateInitInstanceLocal((::genie::AlgId*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::AlgId*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLAlgId_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::AlgId*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLAlgorithm_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLAlgorithm_Dictionary();
   static void delete_geniecLcLAlgorithm(void *p);
   static void deleteArray_geniecLcLAlgorithm(void *p);
   static void destruct_geniecLcLAlgorithm(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::Algorithm*)
   {
      ::genie::Algorithm *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::Algorithm),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::Algorithm", "/users/mouland/Documents/GENIE_NCGamma/src//Algorithm/Algorithm.h", 45,
                  typeid(::genie::Algorithm), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLAlgorithm_Dictionary, isa_proxy, 0,
                  sizeof(::genie::Algorithm) );
      instance.SetDelete(&delete_geniecLcLAlgorithm);
      instance.SetDeleteArray(&deleteArray_geniecLcLAlgorithm);
      instance.SetDestructor(&destruct_geniecLcLAlgorithm);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::Algorithm*)
   {
      return GenerateInitInstanceLocal((::genie::Algorithm*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::Algorithm*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLAlgorithm_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::Algorithm*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLAlgConfigPool_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLAlgConfigPool_Dictionary();

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::AlgConfigPool*)
   {
      ::genie::AlgConfigPool *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::AlgConfigPool),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::AlgConfigPool", "./AlgConfigPool.h", 38,
                  typeid(::genie::AlgConfigPool), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLAlgConfigPool_Dictionary, isa_proxy, 0,
                  sizeof(::genie::AlgConfigPool) );
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::AlgConfigPool*)
   {
      return GenerateInitInstanceLocal((::genie::AlgConfigPool*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::AlgConfigPool*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLAlgConfigPool_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::AlgConfigPool*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLAlgFactory_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLAlgFactory_Dictionary();

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::AlgFactory*)
   {
      ::genie::AlgFactory *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::AlgFactory),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::AlgFactory", "./AlgFactory.h", 37,
                  typeid(::genie::AlgFactory), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLAlgFactory_Dictionary, isa_proxy, 0,
                  sizeof(::genie::AlgFactory) );
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::AlgFactory*)
   {
      return GenerateInitInstanceLocal((::genie::AlgFactory*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::AlgFactory*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLAlgFactory_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::AlgFactory*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_geniecLcLAlgId(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::AlgId : new ::genie::AlgId;
   }
   static void *newArray_geniecLcLAlgId(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::AlgId[nElements] : new ::genie::AlgId[nElements];
   }
   // Wrapper around operator delete
   static void delete_geniecLcLAlgId(void *p) {
      delete ((::genie::AlgId*)p);
   }
   static void deleteArray_geniecLcLAlgId(void *p) {
      delete [] ((::genie::AlgId*)p);
   }
   static void destruct_geniecLcLAlgId(void *p) {
      typedef ::genie::AlgId current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::AlgId

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_geniecLcLAlgorithm(void *p) {
      delete ((::genie::Algorithm*)p);
   }
   static void deleteArray_geniecLcLAlgorithm(void *p) {
      delete [] ((::genie::Algorithm*)p);
   }
   static void destruct_geniecLcLAlgorithm(void *p) {
      typedef ::genie::Algorithm current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::Algorithm

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_geniecLcLAlgStatus(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::AlgStatus : new ::genie::AlgStatus;
   }
   static void *newArray_geniecLcLAlgStatus(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::AlgStatus[nElements] : new ::genie::AlgStatus[nElements];
   }
   // Wrapper around operator delete
   static void delete_geniecLcLAlgStatus(void *p) {
      delete ((::genie::AlgStatus*)p);
   }
   static void deleteArray_geniecLcLAlgStatus(void *p) {
      delete [] ((::genie::AlgStatus*)p);
   }
   static void destruct_geniecLcLAlgStatus(void *p) {
      typedef ::genie::AlgStatus current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::AlgStatus

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_geniecLcLAlgCmp(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::AlgCmp : new ::genie::AlgCmp;
   }
   static void *newArray_geniecLcLAlgCmp(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::AlgCmp[nElements] : new ::genie::AlgCmp[nElements];
   }
   // Wrapper around operator delete
   static void delete_geniecLcLAlgCmp(void *p) {
      delete ((::genie::AlgCmp*)p);
   }
   static void deleteArray_geniecLcLAlgCmp(void *p) {
      delete [] ((::genie::AlgCmp*)p);
   }
   static void destruct_geniecLcLAlgCmp(void *p) {
      typedef ::genie::AlgCmp current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::AlgCmp

namespace ROOTDict {
} // end of namespace ROOTDict for class ::genie::AlgFactory

namespace ROOTDict {
} // end of namespace ROOTDict for class ::genie::AlgConfigPool

/********************************************************
* _ROOT_DICT_Algorithm.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtable_ROOT_DICT_Algorithm();

extern "C" void G__set_cpp_environment_ROOT_DICT_Algorithm() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("AlgConfigPool.h");
  G__add_compiledheader("AlgFactory.h");
  G__add_compiledheader("AlgId.h");
  G__add_compiledheader("Algorithm.h");
  G__cpp_reset_tagtable_ROOT_DICT_Algorithm();
}
#include <new>
extern "C" int G__cpp_dllrev_ROOT_DICT_Algorithm() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* genie */
static int G___ROOT_DICT_Algorithm_403_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = genie::operator<<(*(ostream*) libp->para[0].ref, *(genie::AlgId*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_403_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = genie::operator<<(*(ostream*) libp->para[0].ref, *(genie::Registry*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_403_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = genie::operator<<(*(ostream*) libp->para[0].ref, *(genie::Algorithm*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_403_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = genie::operator<<(*(ostream*) libp->para[0].ref, *(genie::AlgConfigPool*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_403_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = genie::operator<<(*(ostream*) libp->para[0].ref, *(genie::AlgFactory*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::AlgStatus */
static int G___ROOT_DICT_Algorithm_405_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genie::AlgStatus::AsString((genie::AlgStatus_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G___ROOT_DICT_Algorithm_405_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::AlgStatus *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::AlgStatus[n];
     } else {
       p = new((void*) gvp) genie::AlgStatus[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::AlgStatus;
     } else {
       p = new((void*) gvp) genie::AlgStatus;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgStatus));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_Algorithm_405_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genie::AlgStatus* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genie::AlgStatus(*(genie::AlgStatus*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgStatus));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::AlgStatus G__TgeniecLcLAlgStatus;
static int G___ROOT_DICT_Algorithm_405_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::AlgStatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::AlgStatus*) (soff+(sizeof(genie::AlgStatus)*i)))->~G__TgeniecLcLAlgStatus();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::AlgStatus*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::AlgStatus*) (soff))->~G__TgeniecLcLAlgStatus();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Algorithm_405_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::AlgStatus* dest = (genie::AlgStatus*) G__getstructoffset();
   const genie::AlgStatus& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::AlgCmp */
static int G___ROOT_DICT_Algorithm_407_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genie::AlgCmp::AsString((genie::AlgCmp_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G___ROOT_DICT_Algorithm_407_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::AlgCmp *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::AlgCmp[n];
     } else {
       p = new((void*) gvp) genie::AlgCmp[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::AlgCmp;
     } else {
       p = new((void*) gvp) genie::AlgCmp;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgCmp));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_Algorithm_407_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genie::AlgCmp* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genie::AlgCmp(*(genie::AlgCmp*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgCmp));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::AlgCmp G__TgeniecLcLAlgCmp;
static int G___ROOT_DICT_Algorithm_407_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::AlgCmp*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::AlgCmp*) (soff+(sizeof(genie::AlgCmp)*i)))->~G__TgeniecLcLAlgCmp();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::AlgCmp*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::AlgCmp*) (soff))->~G__TgeniecLcLAlgCmp();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Algorithm_407_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::AlgCmp* dest = (genie::AlgCmp*) G__getstructoffset();
   const genie::AlgCmp& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::AlgId */
static int G___ROOT_DICT_Algorithm_535_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::AlgId* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::AlgId[n];
     } else {
       p = new((void*) gvp) genie::AlgId[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::AlgId;
     } else {
       p = new((void*) gvp) genie::AlgId;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgId));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_535_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::AlgId* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::AlgId(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) genie::AlgId(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgId));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_535_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::AlgId* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::AlgId(*(genie::AlgId*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) genie::AlgId(*(genie::AlgId*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgId));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_535_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::AlgId* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::AlgId(*(RgAlg*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) genie::AlgId(*(RgAlg*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgId));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_535_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const genie::AlgId*) G__getstructoffset())->Name();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_535_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const genie::AlgId*) G__getstructoffset())->Config();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_535_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const genie::AlgId*) G__getstructoffset())->Key();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_535_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((genie::AlgId*) G__getstructoffset())->SetId(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((genie::AlgId*) G__getstructoffset())->SetId(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_535_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::AlgId*) G__getstructoffset())->SetName(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_535_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::AlgId*) G__getstructoffset())->SetConfig(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_535_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::AlgId*) G__getstructoffset())->Copy(*(genie::AlgId*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_535_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::AlgId*) G__getstructoffset())->Copy(*(RgAlg*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_535_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const genie::AlgId*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::AlgId G__TgeniecLcLAlgId;
static int G___ROOT_DICT_Algorithm_535_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::AlgId*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::AlgId*) (soff+(sizeof(genie::AlgId)*i)))->~G__TgeniecLcLAlgId();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::AlgId*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::AlgId*) (soff))->~G__TgeniecLcLAlgId();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Algorithm_535_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::AlgId* dest = (genie::AlgId*) G__getstructoffset();
   *dest = *(genie::AlgId*) libp->para[0].ref;
   const genie::AlgId& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::Algorithm */
static int G___ROOT_DICT_Algorithm_552_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::Algorithm*) G__getstructoffset())->Configure(*(genie::Registry*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_552_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::Algorithm*) G__getstructoffset())->Configure(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_552_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::Algorithm*) G__getstructoffset())->FindConfig();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_552_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const genie::Registry& obj = ((const genie::Algorithm*) G__getstructoffset())->GetConfig();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_552_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((genie::Algorithm*) G__getstructoffset())->GetOwnedConfig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_552_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const genie::AlgId& obj = ((const genie::Algorithm*) G__getstructoffset())->Id();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_552_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const genie::Algorithm*) G__getstructoffset())->GetStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_552_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const genie::Algorithm*) G__getstructoffset())->AllowReconfig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_552_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const genie::Algorithm*) G__getstructoffset())->Compare((genie::Algorithm*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_552_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::Algorithm*) G__getstructoffset())->SetId(*(genie::AlgId*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_552_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::Algorithm*) G__getstructoffset())->SetId(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_552_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const genie::Algorithm*) G__getstructoffset())->SubAlg(*(RgKey*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_552_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::Algorithm*) G__getstructoffset())->AdoptConfig();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_552_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::Algorithm*) G__getstructoffset())->AdoptSubstructure();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_552_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const genie::Algorithm*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_Algorithm_552_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genie::Algorithm* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genie::Algorithm(*(genie::Algorithm*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgorithm));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::Algorithm G__TgeniecLcLAlgorithm;
static int G___ROOT_DICT_Algorithm_552_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::Algorithm*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::Algorithm*) (soff+(sizeof(genie::Algorithm)*i)))->~G__TgeniecLcLAlgorithm();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::Algorithm*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::Algorithm*) (soff))->~G__TgeniecLcLAlgorithm();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Algorithm_552_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::Algorithm* dest = (genie::Algorithm*) G__getstructoffset();
   *dest = *(genie::Algorithm*) libp->para[0].ref;
   const genie::Algorithm& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::AlgConfigPool */
static int G___ROOT_DICT_Algorithm_560_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genie::AlgConfigPool::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_560_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const genie::AlgConfigPool*) G__getstructoffset())->FindRegistry(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_560_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const genie::AlgConfigPool*) G__getstructoffset())->FindRegistry(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_560_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const genie::AlgConfigPool*) G__getstructoffset())->FindRegistry((genie::Algorithm*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_560_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const genie::AlgConfigPool*) G__getstructoffset())->FindRegistry(*(genie::AlgId*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_560_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const genie::AlgConfigPool*) G__getstructoffset())->GlobalParameterList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_560_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<string>& obj = ((const genie::AlgConfigPool*) G__getstructoffset())->ConfigKeyList();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_560_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const genie::AlgConfigPool*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Algorithm_560_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::AlgConfigPool* dest = (genie::AlgConfigPool*) G__getstructoffset();
   *dest = *(genie::AlgConfigPool*) libp->para[0].ref;
   const genie::AlgConfigPool& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::AlgFactory */
static int G___ROOT_DICT_Algorithm_576_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genie::AlgFactory::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_576_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((genie::AlgFactory*) G__getstructoffset())->GetAlgorithm(*(genie::AlgId*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_576_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((genie::AlgFactory*) G__getstructoffset())->GetAlgorithm(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 85, (long) ((genie::AlgFactory*) G__getstructoffset())->GetAlgorithm(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_576_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const genie::AlgFactory*) G__getstructoffset())->AdoptAlgorithm(*(genie::AlgId*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_576_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((const genie::AlgFactory*) G__getstructoffset())->AdoptAlgorithm(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 85, (long) ((const genie::AlgFactory*) G__getstructoffset())->AdoptAlgorithm(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_576_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((genie::AlgFactory*) G__getstructoffset())->ForceReconfiguration((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((genie::AlgFactory*) G__getstructoffset())->ForceReconfiguration();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Algorithm_576_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const genie::AlgFactory*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Algorithm_576_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::AlgFactory* dest = (genie::AlgFactory*) G__getstructoffset();
   *dest = *(genie::AlgFactory*) libp->para[0].ref;
   const genie::AlgFactory& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* genie */

/* genie::AlgStatus */

/* genie::AlgCmp */

/* genie::AlgId */

/* genie::Algorithm */

/* genie::AlgConfigPool */

/* genie::AlgFactory */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfunc_ROOT_DICT_Algorithm {
 public:
  G__Sizep2memfunc_ROOT_DICT_Algorithm(): p(&G__Sizep2memfunc_ROOT_DICT_Algorithm::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfunc_ROOT_DICT_Algorithm::*p)();
};

size_t G__get_sizep2memfunc_ROOT_DICT_Algorithm()
{
  G__Sizep2memfunc_ROOT_DICT_Algorithm a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritance_ROOT_DICT_Algorithm() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetable_ROOT_DICT_Algorithm() {

   /* Setting up typedef entry */
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("AlgStatus_t",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLEAlgStatus),0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("AlgCmp_t",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLEAlgCmp),0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RgKey",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_string),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RgType_t",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLERgType),0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<RgKey,RegistryItemI*>",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,genie::RegistryItemI*>",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,genie::RegistryItemI*,less<string> >",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RgIMap",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgR),0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<RgKey,RegistryItemI*>",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_pairlEstringcOgeniecLcLRegistryItemImUgR),0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RgIMapPair",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_pairlEstringcOgeniecLcLRegistryItemImUgR),0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RgIMapSizeType",107,-1,0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RgIMapIter",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgRcLcLiterator),0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RgIMapConstIter",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgRcLcLiterator),0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RgKey>",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RgKeyList",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_vectorlEstringcOallocatorlEstringgRsPgR),0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Algorithm*>",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,genie::Algorithm*>",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,genie::Algorithm*,less<string> >",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("AlgMap",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgR),0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("AlgMapIter",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgRcLcLiterator),0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("AlgMapConstIter",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgRcLcLiterator),0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<string,Algorithm*>",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_pairlEstringcOgeniecLcLAlgorithmmUgR),0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("AlgMapPair",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_pairlEstringcOgeniecLcLAlgorithmmUgR),0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_genie));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Registry*>",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLRegistrymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistrymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,genie::Registry*>",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLRegistrymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistrymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,genie::Registry*,less<string> >",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLRegistrymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistrymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string>",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string,less<string> >",117,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* genie */
static void G__setup_memvargenie(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_genie));
   {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLEAlgStatus),-1,-2,1,G__FastAllocString(2048).Format("kAlgUndefinedStatus=%lldLL",(long long)genie::kAlgUndefinedStatus).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLEAlgStatus),-1,-2,1,G__FastAllocString(2048).Format("kAlgFail=%lldLL",(long long)genie::kAlgFail).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLEAlgStatus),-1,-2,1,G__FastAllocString(2048).Format("kAlgSuccess=%lldLL",(long long)genie::kAlgSuccess).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLEAlgCmp),-1,-2,1,G__FastAllocString(2048).Format("kAlgCmpUnknown=%lldLL",(long long)genie::kAlgCmpUnknown).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLEAlgCmp),-1,-2,1,G__FastAllocString(2048).Format("kAlgCmpIdentical=%lldLL",(long long)genie::kAlgCmpIdentical).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLEAlgCmp),-1,-2,1,G__FastAllocString(2048).Format("kAlgCmpDiffConfig=%lldLL",(long long)genie::kAlgCmpDiffConfig).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLEAlgCmp),-1,-2,1,G__FastAllocString(2048).Format("kAlgCmpDiffAlg=%lldLL",(long long)genie::kAlgCmpDiffAlg).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgUndefined=%lldLL",(long long)genie::kRgUndefined).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgBool=%lldLL",(long long)genie::kRgBool).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgInt=%lldLL",(long long)genie::kRgInt).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgDbl=%lldLL",(long long)genie::kRgDbl).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgStr=%lldLL",(long long)genie::kRgStr).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgAlg=%lldLL",(long long)genie::kRgAlg).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgH1F=%lldLL",(long long)genie::kRgH1F).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgH2F=%lldLL",(long long)genie::kRgH2F).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLERgType),-1,-2,1,G__FastAllocString(2048).Format("kRgTree=%lldLL",(long long)genie::kRgTree).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genie::AlgStatus */
static void G__setup_memvargeniecLcLAlgStatus(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgStatus));
   { genie::AlgStatus *p; p=(genie::AlgStatus*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* genie::AlgCmp */
static void G__setup_memvargeniecLcLAlgCmp(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgCmp));
   { genie::AlgCmp *p; p=(genie::AlgCmp*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* genie::AlgId */
static void G__setup_memvargeniecLcLAlgId(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgId));
   { genie::AlgId *p; p=(genie::AlgId*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_string),-1,-1,4,"fName=",0,"/< Algorithm name (including namespaces)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_string),-1,-1,4,"fConfig=",0,"/< Configuration set name");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_string),-1,-1,4,"fKey=",0,"/< Unique key: namespace::alg_name/alg_config");
   }
   G__tag_memvar_reset();
}


   /* genie::Algorithm */
static void G__setup_memvargeniecLcLAlgorithm(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgorithm));
   { genie::Algorithm *p; p=(genie::Algorithm*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fAllowReconfig=",0,"/<");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fOwnsConfig=",0,"/< true if it owns its config. registry");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fOwnsSubstruc=",0,"/< true if it owns its substructure (sub-algs,...)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgId),-1,-1,2,"fID=",0,"/< algorithm name and configuration set");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLRegistry),-1,-1,2,"fConfig=",0,"/< config. (either owned or pointing to config pool)");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLEAlgStatus),G__defined_typename("AlgStatus_t"),-1,2,"fStatus=",0,"/< algorithm execution status");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgR),G__defined_typename("AlgMap"),-1,2,"fOwnedSubAlgMp=",0,"/< local pool for owned sub-algs (taken out of the factory pool)");
   }
   G__tag_memvar_reset();
}


   /* genie::AlgConfigPool */
static void G__setup_memvargeniecLcLAlgConfigPool(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgConfigPool));
   { genie::AlgConfigPool *p; p=(genie::AlgConfigPool*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgConfigPool),-1,-2,4,"fInstance=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLRegistrymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistrymUgRsPgRsPgR),G__defined_typename("map<string,Registry*>"),-1,4,"fRegistryPool=",0,"/< algorithm/param_set -> Registry");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),G__defined_typename("map<string,string>"),-1,4,"fConfigFiles=",0,"/< algorithm -> XML config file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<string>"),-1,4,"fConfigKeyList=",0,"/< list of all available configuration keys");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_string),-1,-1,4,"fMasterConfig=",0,"/< lists config files for all algorithms");
   }
   G__tag_memvar_reset();
}


   /* genie::AlgFactory */
static void G__setup_memvargeniecLcLAlgFactory(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgFactory));
   { genie::AlgFactory *p; p=(genie::AlgFactory*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgFactory),-1,-2,4,"fInstance=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgR),G__defined_typename("map<string,Algorithm*>"),-1,4,"fAlgPool=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvar_ROOT_DICT_Algorithm() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncgenie(void) {
   /* genie */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_genie));
   G__memfunc_setup("operator<<",996,G___ROOT_DICT_Algorithm_403_0_1, 117, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - stream u 'genie::AlgId' - 11 - alg", (char*)NULL, (void*) G__func2void( (ostream& (*)(ostream&, const genie::AlgId&))(&genie::operator<<) ), 0);
   G__memfunc_setup("operator<<",996,G___ROOT_DICT_Algorithm_403_0_2, 117, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - stream u 'genie::Registry' - 11 - registry", (char*)NULL, (void*) G__func2void( (ostream& (*)(ostream&, const genie::Registry&))(&genie::operator<<) ), 0);
   G__memfunc_setup("operator<<",996,G___ROOT_DICT_Algorithm_403_0_3, 117, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - stream u 'genie::Algorithm' - 11 - alg", (char*)NULL, (void*) G__func2void( (ostream& (*)(ostream&, const genie::Algorithm&))(&genie::operator<<) ), 0);
   G__memfunc_setup("operator<<",996,G___ROOT_DICT_Algorithm_403_0_4, 117, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - stream u 'genie::AlgConfigPool' - 11 - cp", (char*)NULL, (void*) G__func2void( (ostream& (*)(ostream&, const genie::AlgConfigPool&))(&genie::operator<<) ), 0);
   G__memfunc_setup("operator<<",996,G___ROOT_DICT_Algorithm_403_0_5, 117, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - stream u 'genie::AlgFactory' - 11 - algf", (char*)NULL, (void*) G__func2void( (ostream& (*)(ostream&, const genie::AlgFactory&))(&genie::operator<<) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLAlgStatus(void) {
   /* genie::AlgStatus */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgStatus));
   G__memfunc_setup("AsString",811,G___ROOT_DICT_Algorithm_405_0_1, 67, -1, -1, 0, 1, 3, 1, 1, "u 'genie::EAlgStatus' 'genie::AlgStatus_t' 0 - alg", (char*)NULL, (void*) G__func2void( (const char* (*)(genie::AlgStatus_t))(&genie::AlgStatus::AsString) ), 0);
   // automatic default constructor
   G__memfunc_setup("AlgStatus", 920, G___ROOT_DICT_Algorithm_405_0_2, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgStatus), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("AlgStatus", 920, G___ROOT_DICT_Algorithm_405_0_3, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgStatus), -1, 0, 1, 1, 1, 0, "u 'genie::AlgStatus' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AlgStatus", 1046, G___ROOT_DICT_Algorithm_405_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Algorithm_405_0_5, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgStatus), -1, 1, 1, 1, 1, 0, "u 'genie::AlgStatus' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLAlgCmp(void) {
   /* genie::AlgCmp */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgCmp));
   G__memfunc_setup("AsString",811,G___ROOT_DICT_Algorithm_407_0_1, 67, -1, -1, 0, 1, 3, 1, 1, "u 'genie::EAlgCmp' 'genie::AlgCmp_t' 0 - alg", (char*)NULL, (void*) G__func2void( (const char* (*)(genie::AlgCmp_t))(&genie::AlgCmp::AsString) ), 0);
   // automatic default constructor
   G__memfunc_setup("AlgCmp", 564, G___ROOT_DICT_Algorithm_407_0_2, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgCmp), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("AlgCmp", 564, G___ROOT_DICT_Algorithm_407_0_3, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgCmp), -1, 0, 1, 1, 1, 0, "u 'genie::AlgCmp' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AlgCmp", 690, G___ROOT_DICT_Algorithm_407_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Algorithm_407_0_5, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgCmp), -1, 1, 1, 1, 1, 0, "u 'genie::AlgCmp' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLAlgId(void) {
   /* genie::AlgId */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgId));
   G__memfunc_setup("AlgId",449,G___ROOT_DICT_Algorithm_535_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgId), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AlgId",449,G___ROOT_DICT_Algorithm_535_0_2, 105, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgId), -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - name u 'string' - 0 - config", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AlgId",449,G___ROOT_DICT_Algorithm_535_0_3, 105, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgId), -1, 0, 1, 1, 1, 0, "u 'genie::AlgId' - 11 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AlgId",449,G___ROOT_DICT_Algorithm_535_0_4, 105, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgId), -1, 0, 1, 1, 1, 0, "u 'RgAlg' - 11 - registry_item", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Name",385,G___ROOT_DICT_Algorithm_535_0_5, 117, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Config",598,G___ROOT_DICT_Algorithm_535_0_6, 117, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Key",297,G___ROOT_DICT_Algorithm_535_0_7, 117, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetId",473,G___ROOT_DICT_Algorithm_535_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - name u 'string' - 0 '\"\"' config", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetName",685,G___ROOT_DICT_Algorithm_535_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConfig",898,G___ROOT_DICT_Algorithm_535_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - config", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,G___ROOT_DICT_Algorithm_535_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'genie::AlgId' - 11 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,G___ROOT_DICT_Algorithm_535_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'RgAlg' - 11 - registry_item", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G___ROOT_DICT_Algorithm_535_0_13, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - stream", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateKey",908,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AlgId", 575, G___ROOT_DICT_Algorithm_535_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Algorithm_535_0_17, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgId), -1, 1, 1, 1, 1, 0, "u 'genie::AlgId' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLAlgorithm(void) {
   /* genie::Algorithm */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgorithm));
   G__memfunc_setup("Configure",930,G___ROOT_DICT_Algorithm_552_0_1, 121, -1, -1, 0, 1, 1, 1, 0, "u 'genie::Registry' - 11 - config", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Configure",930,G___ROOT_DICT_Algorithm_552_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - config", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindConfig",983,G___ROOT_DICT_Algorithm_552_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetConfig",886,G___ROOT_DICT_Algorithm_552_0_4, 117, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLRegistry), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetOwnedConfig",1395,G___ROOT_DICT_Algorithm_552_0_5, 85, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLRegistry), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Id",173,G___ROOT_DICT_Algorithm_552_0_6, 117, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgId), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStatus",932,G___ROOT_DICT_Algorithm_552_0_7, 105, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLEAlgStatus), G__defined_typename("genie::AlgStatus_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AllowReconfig",1324,G___ROOT_DICT_Algorithm_552_0_8, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Compare",711,G___ROOT_DICT_Algorithm_552_0_9, 105, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLEAlgCmp), G__defined_typename("genie::AlgCmp_t"), 0, 1, 1, 1, 8, "U 'genie::Algorithm' - 10 - alg", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetId",473,G___ROOT_DICT_Algorithm_552_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'genie::AlgId' - 11 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetId",473,G___ROOT_DICT_Algorithm_552_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - name u 'string' - 0 - config", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SubAlg",574,G___ROOT_DICT_Algorithm_552_0_12, 85, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgorithm), -1, 0, 1, 1, 1, 9, "u 'string' 'RgKey' 11 - registry_key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AdoptConfig",1102,G___ROOT_DICT_Algorithm_552_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AdoptSubstructure",1811,G___ROOT_DICT_Algorithm_552_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G___ROOT_DICT_Algorithm_552_0_15, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - stream", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Algorithm",935,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgorithm), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Algorithm",935,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgorithm), -1, 0, 1, 1, 2, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Algorithm",935,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgorithm), -1, 0, 2, 1, 2, 0, 
"u 'string' - 0 - name u 'string' - 0 - config", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteConfig",1193,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteSubstructure",1902,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Algorithm", 935, G___ROOT_DICT_Algorithm_552_0_22, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgorithm), -1, 0, 1, 1, 1, 0, "u 'genie::Algorithm' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Algorithm", 1061, G___ROOT_DICT_Algorithm_552_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Algorithm_552_0_24, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgorithm), -1, 1, 1, 1, 1, 0, "u 'genie::Algorithm' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLAlgConfigPool(void) {
   /* genie::AlgConfigPool */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgConfigPool));
   G__memfunc_setup("Instance",821,G___ROOT_DICT_Algorithm_560_0_1, 85, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgConfigPool), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (genie::AlgConfigPool* (*)())(&genie::AlgConfigPool::Instance) ), 0);
   G__memfunc_setup("FindRegistry",1242,G___ROOT_DICT_Algorithm_560_0_2, 85, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLRegistry), -1, 0, 1, 1, 1, 8, "u 'string' - 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindRegistry",1242,G___ROOT_DICT_Algorithm_560_0_3, 85, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLRegistry), -1, 0, 2, 1, 1, 8, 
"u 'string' - 0 - alg_name u 'string' - 0 - param_set", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindRegistry",1242,G___ROOT_DICT_Algorithm_560_0_4, 85, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLRegistry), -1, 0, 1, 1, 1, 8, "U 'genie::Algorithm' - 10 - algorithm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindRegistry",1242,G___ROOT_DICT_Algorithm_560_0_5, 85, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLRegistry), -1, 0, 1, 1, 1, 8, "u 'genie::AlgId' - 11 - algid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GlobalParameterList",1934,G___ROOT_DICT_Algorithm_560_0_6, 85, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLRegistry), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConfigKeyList",1307,G___ROOT_DICT_Algorithm_560_0_7, 117, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<string>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G___ROOT_DICT_Algorithm_560_0_8, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - stream", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AlgConfigPool",1284,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgConfigPool), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AlgConfigPool",1284,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgConfigPool), -1, 0, 1, 1, 4, 0, "u 'genie::AlgConfigPool' - 11 - config_pool", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildConfigKey",1391,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_string), -1, 0, 2, 1, 4, 8, 
"u 'string' - 0 - alg_name u 'string' - 0 - param_set", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildConfigKey",1391,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_string), -1, 0, 1, 1, 4, 8, "U 'genie::Algorithm' - 10 - algorithm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadAlgConfig",1258,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadMasterConfig",1602,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadGlobalParamLists",2001,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadSingleAlgConfig",1868,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 2, 1, 4, 0, 
"u 'string' - 0 - alg_name u 'string' - 0 - file_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadRegistries",1441,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - key_base u 'string' - 0 - file_name "
"u 'string' - 0 - root", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddConfigParameter",1792,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"U 'genie::Registry' - 0 - r u 'string' - 0 - pt "
"u 'string' - 0 - pn u 'string' - 0 - pv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddBasicParameter",1676,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"U 'genie::Registry' - 0 - r u 'string' - 0 - pt "
"u 'string' - 0 - pn u 'string' - 0 - pv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddRootObjParameter",1897,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"U 'genie::Registry' - 0 - r u 'string' - 0 - pt "
"u 'string' - 0 - pn u 'string' - 0 - pv", (char*)NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Algorithm_560_0_21, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgConfigPool), -1, 1, 1, 1, 1, 0, "u 'genie::AlgConfigPool' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLAlgFactory(void) {
   /* genie::AlgFactory */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgFactory));
   G__memfunc_setup("Instance",821,G___ROOT_DICT_Algorithm_576_0_1, 85, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgFactory), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (genie::AlgFactory* (*)())(&genie::AlgFactory::Instance) ), 0);
   G__memfunc_setup("GetAlgorithm",1223,G___ROOT_DICT_Algorithm_576_0_2, 85, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgorithm), -1, 0, 1, 1, 1, 1, "u 'genie::AlgId' - 11 - algid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAlgorithm",1223,G___ROOT_DICT_Algorithm_576_0_3, 85, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgorithm), -1, 0, 2, 1, 1, 1, 
"u 'string' - 0 - name u 'string' - 0 '\"Default\"' conf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AdoptAlgorithm",1439,G___ROOT_DICT_Algorithm_576_0_4, 85, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgorithm), -1, 0, 1, 1, 1, 8, "u 'genie::AlgId' - 11 - algid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AdoptAlgorithm",1439,G___ROOT_DICT_Algorithm_576_0_5, 85, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgorithm), -1, 0, 2, 1, 1, 8, 
"u 'string' - 0 - name u 'string' - 0 '\"Default\"' conf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ForceReconfiguration",2078,G___ROOT_DICT_Algorithm_576_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'false' ignore_alg_opt_out", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G___ROOT_DICT_Algorithm_576_0_7, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - stream", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AlgFactory",1004,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgFactory), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AlgFactory",1004,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgFactory), -1, 0, 1, 1, 4, 0, "u 'genie::AlgFactory' - 11 - alg_factory", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InstantiateAlgorithm",2091,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgorithm), -1, 0, 2, 1, 4, 8, 
"u 'string' - 0 - name u 'string' - 0 - config", (char*)NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Algorithm_576_0_11, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgFactory), -1, 1, 1, 1, 1, 0, "u 'genie::AlgFactory' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfunc_ROOT_DICT_Algorithm() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_global_ROOT_DICT_Algorithm() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_func_ROOT_DICT_Algorithm() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_string = { "string" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_genie = { "genie" , 110 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_geniecLcLEAlgStatus = { "genie::EAlgStatus" , 101 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_geniecLcLAlgStatus = { "genie::AlgStatus" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_geniecLcLEAlgCmp = { "genie::EAlgCmp" , 101 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_geniecLcLAlgCmp = { "genie::AlgCmp" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_RgAlg = { "RgAlg" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_geniecLcLAlgId = { "genie::AlgId" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_geniecLcLERgType = { "genie::ERgType" , 101 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgR = { "map<string,genie::RegistryItemI*,less<string>,allocator<pair<const string,genie::RegistryItemI*> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_pairlEstringcOgeniecLcLRegistryItemImUgR = { "pair<string,genie::RegistryItemI*>" , 115 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgRcLcLiterator = { "map<string,genie::RegistryItemI*,less<string>,allocator<pair<const string,genie::RegistryItemI*> > >::iterator" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_geniecLcLRegistry = { "genie::Registry" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_geniecLcLAlgorithm = { "genie::Algorithm" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgR = { "map<string,genie::Algorithm*,less<string>,allocator<pair<const string,genie::Algorithm*> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_pairlEstringcOgeniecLcLAlgorithmmUgR = { "pair<string,genie::Algorithm*>" , 115 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgRcLcLiterator = { "map<string,genie::Algorithm*,less<string>,allocator<pair<const string,genie::Algorithm*> > >::iterator" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_geniecLcLAlgConfigPool = { "genie::AlgConfigPool" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLRegistrymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistrymUgRsPgRsPgR = { "map<string,genie::Registry*,less<string>,allocator<pair<const string,genie::Registry*> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR = { "map<string,string,less<string>,allocator<pair<const string,string> > >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_AlgorithmLN_geniecLcLAlgFactory = { "genie::AlgFactory" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtable_ROOT_DICT_Algorithm() {
  G___ROOT_DICT_AlgorithmLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_string.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_genie.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_geniecLcLEAlgStatus.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_geniecLcLAlgStatus.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_geniecLcLEAlgCmp.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_geniecLcLAlgCmp.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_TVectorTlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_TVectorTlEdoublegR.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_RgAlg.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_geniecLcLAlgId.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_geniecLcLERgType.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_pairlEstringcOgeniecLcLRegistryItemImUgR.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_geniecLcLRegistry.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_geniecLcLAlgorithm.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_pairlEstringcOgeniecLcLAlgorithmmUgR.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_geniecLcLAlgConfigPool.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLRegistrymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistrymUgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_AlgorithmLN_geniecLcLAlgFactory.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtable_ROOT_DICT_Algorithm() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_string);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_genie),0,-1,0,(char*)NULL,G__setup_memvargenie,G__setup_memfuncgenie);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_geniecLcLEAlgStatus);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgStatus),sizeof(genie::AlgStatus),-1,0,(char*)NULL,G__setup_memvargeniecLcLAlgStatus,G__setup_memfuncgeniecLcLAlgStatus);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_geniecLcLEAlgCmp);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgCmp),sizeof(genie::AlgCmp),-1,0,(char*)NULL,G__setup_memvargeniecLcLAlgCmp,G__setup_memfuncgeniecLcLAlgCmp);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_RgAlg);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgId),sizeof(genie::AlgId),-1,34560,(char*)NULL,G__setup_memvargeniecLcLAlgId,G__setup_memfuncgeniecLcLAlgId);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_geniecLcLERgType);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_pairlEstringcOgeniecLcLRegistryItemImUgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLRegistryItemImUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistryItemImUgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_geniecLcLRegistry);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgorithm),sizeof(genie::Algorithm),-1,34048,(char*)NULL,G__setup_memvargeniecLcLAlgorithm,G__setup_memfuncgeniecLcLAlgorithm);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_pairlEstringcOgeniecLcLAlgorithmmUgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLAlgorithmmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLAlgorithmmUgRsPgRsPgRcLcLiterator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgConfigPool),sizeof(genie::AlgConfigPool),-1,1792,(char*)NULL,G__setup_memvargeniecLcLAlgConfigPool,G__setup_memfuncgeniecLcLAlgConfigPool);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_maplEstringcOgeniecLcLRegistrymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOgeniecLcLRegistrymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_AlgorithmLN_geniecLcLAlgFactory),sizeof(genie::AlgFactory),-1,1792,(char*)NULL,G__setup_memvargeniecLcLAlgFactory,G__setup_memfuncgeniecLcLAlgFactory);
}
extern "C" void G__cpp_setup_ROOT_DICT_Algorithm(void) {
  G__check_setup_version(30051515,"G__cpp_setup_ROOT_DICT_Algorithm()");
  G__set_cpp_environment_ROOT_DICT_Algorithm();
  G__cpp_setup_tagtable_ROOT_DICT_Algorithm();

  G__cpp_setup_inheritance_ROOT_DICT_Algorithm();

  G__cpp_setup_typetable_ROOT_DICT_Algorithm();

  G__cpp_setup_memvar_ROOT_DICT_Algorithm();

  G__cpp_setup_memfunc_ROOT_DICT_Algorithm();
  G__cpp_setup_global_ROOT_DICT_Algorithm();
  G__cpp_setup_func_ROOT_DICT_Algorithm();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfunc_ROOT_DICT_Algorithm();
  return;
}
class G__cpp_setup_init_ROOT_DICT_Algorithm {
  public:
    G__cpp_setup_init_ROOT_DICT_Algorithm() { G__add_setup_func("_ROOT_DICT_Algorithm",(G__incsetup)(&G__cpp_setup_ROOT_DICT_Algorithm)); G__call_setup_funcs(); }
   ~G__cpp_setup_init_ROOT_DICT_Algorithm() { G__remove_setup_func("_ROOT_DICT_Algorithm"); }
};
G__cpp_setup_init_ROOT_DICT_Algorithm G__cpp_setup_initializer_ROOT_DICT_Algorithm;

