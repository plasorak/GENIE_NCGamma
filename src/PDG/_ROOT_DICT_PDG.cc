//
// File generated by rootcint at Thu Jul 13 14:23:40 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME _ROOT_DICT_PDG
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "_ROOT_DICT_PDG.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace genie {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void genie_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("genie", 0 /*version*/, "./PDGUtils.h", 22,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &genie_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void genie_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOTDict {
   void geniecLcLPDGCodeList_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLPDGCodeList_Dictionary();
   static void *new_geniecLcLPDGCodeList(void *p = 0);
   static void *newArray_geniecLcLPDGCodeList(Long_t size, void *p);
   static void delete_geniecLcLPDGCodeList(void *p);
   static void deleteArray_geniecLcLPDGCodeList(void *p);
   static void destruct_geniecLcLPDGCodeList(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::PDGCodeList*)
   {
      ::genie::PDGCodeList *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::PDGCodeList),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::PDGCodeList", "./PDGCodeList.h", 30,
                  typeid(::genie::PDGCodeList), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLPDGCodeList_Dictionary, isa_proxy, 0,
                  sizeof(::genie::PDGCodeList) );
      instance.SetNew(&new_geniecLcLPDGCodeList);
      instance.SetNewArray(&newArray_geniecLcLPDGCodeList);
      instance.SetDelete(&delete_geniecLcLPDGCodeList);
      instance.SetDeleteArray(&deleteArray_geniecLcLPDGCodeList);
      instance.SetDestructor(&destruct_geniecLcLPDGCodeList);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::PDGCodeList*)
   {
      return GenerateInitInstanceLocal((::genie::PDGCodeList*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::PDGCodeList*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLPDGCodeList_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::PDGCodeList*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLPDGLibrary_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLPDGLibrary_Dictionary();

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::PDGLibrary*)
   {
      ::genie::PDGLibrary *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::PDGLibrary),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::PDGLibrary", "./PDGLibrary.h", 28,
                  typeid(::genie::PDGLibrary), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLPDGLibrary_Dictionary, isa_proxy, 0,
                  sizeof(::genie::PDGLibrary) );
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::PDGLibrary*)
   {
      return GenerateInitInstanceLocal((::genie::PDGLibrary*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::PDGLibrary*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLPDGLibrary_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::PDGLibrary*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace genie {
namespace pdg {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void geniecLcLpdg_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("genie::pdg", 0 /*version*/, "./PDGUtils.h", 25,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &geniecLcLpdg_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void geniecLcLpdg_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}
}

namespace ROOTDict {
} // end of namespace ROOTDict for class ::genie::PDGLibrary

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_geniecLcLPDGCodeList(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::PDGCodeList : new ::genie::PDGCodeList;
   }
   static void *newArray_geniecLcLPDGCodeList(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::genie::PDGCodeList[nElements] : new ::genie::PDGCodeList[nElements];
   }
   // Wrapper around operator delete
   static void delete_geniecLcLPDGCodeList(void *p) {
      delete ((::genie::PDGCodeList*)p);
   }
   static void deleteArray_geniecLcLPDGCodeList(void *p) {
      delete [] ((::genie::PDGCodeList*)p);
   }
   static void destruct_geniecLcLPDGCodeList(void *p) {
      typedef ::genie::PDGCodeList current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::genie::PDGCodeList

/********************************************************
* _ROOT_DICT_PDG.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtable_ROOT_DICT_PDG();

extern "C" void G__set_cpp_environment_ROOT_DICT_PDG() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("PDGCodeList.h");
  G__add_compiledheader("PDGLibrary.h");
  G__add_compiledheader("PDGUtils.h");
  G__cpp_reset_tagtable_ROOT_DICT_PDG();
}
#include <new>
extern "C" int G__cpp_dllrev_ROOT_DICT_PDG() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* genie */
static int G___ROOT_DICT_PDG_168_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = genie::operator<<(*(ostream*) libp->para[0].ref, *(genie::PDGCodeList*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::PDGCodeList */
static int G___ROOT_DICT_PDG_169_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::PDGCodeList* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::PDGCodeList((bool) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) genie::PDGCodeList((bool) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new genie::PDGCodeList[n];
       } else {
         p = new((void*) gvp) genie::PDGCodeList[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new genie::PDGCodeList;
       } else {
         p = new((void*) gvp) genie::PDGCodeList;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_geniecLcLPDGCodeList));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_169_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::PDGCodeList* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::PDGCodeList((vector<int,allocator<int> >::size_type) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) genie::PDGCodeList((vector<int,allocator<int> >::size_type) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::PDGCodeList((vector<int,allocator<int> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) genie::PDGCodeList((vector<int,allocator<int> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_geniecLcLPDGCodeList));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_169_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::PDGCodeList* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::PDGCodeList(*(genie::PDGCodeList*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) genie::PDGCodeList(*(genie::PDGCodeList*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_geniecLcLPDGCodeList));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_169_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::PDGCodeList*) G__getstructoffset())->push_back((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_169_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::PDGCodeList*) G__getstructoffset())->insert(*((vector<int,allocator<int> >::iterator*) G__int(libp->para[0])), (vector<int,allocator<int> >::size_type) G__int(libp->para[1])
, *(int*) G__Intref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_169_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const genie::PDGCodeList*) G__getstructoffset())->CheckPDGCode((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_169_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const genie::PDGCodeList*) G__getstructoffset())->ExistsInPDGLibrary((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_169_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const genie::PDGCodeList*) G__getstructoffset())->ExistsInPDGCodeList((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_169_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::PDGCodeList*) G__getstructoffset())->Copy(*(genie::PDGCodeList*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_169_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const genie::PDGCodeList*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_169_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const genie::PDGCodeList*) G__getstructoffset())->DuplEntriesAllowed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_169_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const genie::PDGCodeList& obj = ((genie::PDGCodeList*) G__getstructoffset())->operator=(*(genie::PDGCodeList*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::PDGCodeList G__TgeniecLcLPDGCodeList;
static int G___ROOT_DICT_PDG_169_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::PDGCodeList*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::PDGCodeList*) (soff+(sizeof(genie::PDGCodeList)*i)))->~G__TgeniecLcLPDGCodeList();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::PDGCodeList*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::PDGCodeList*) (soff))->~G__TgeniecLcLPDGCodeList();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::PDGLibrary */
static int G___ROOT_DICT_PDG_203_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genie::PDGLibrary::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_203_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((genie::PDGLibrary*) G__getstructoffset())->DBase());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_203_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((genie::PDGLibrary*) G__getstructoffset())->Find((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_PDG_203_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::PDGLibrary* dest = (genie::PDGLibrary*) G__getstructoffset();
   *dest = *(genie::PDGLibrary*) libp->para[0].ref;
   const genie::PDGLibrary& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::pdg */
static int G___ROOT_DICT_PDG_205_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsPseudoParticle((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsIon((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsParticle((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genie::pdg::IonPdgCodeToZ((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genie::pdg::IonPdgCodeToA((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genie::pdg::IonPdgCode((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genie::pdg::IonPdgCode((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsLepton((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsNeutralLepton((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsChargedLepton((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsNeutrino((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsAntiNeutrino((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsNegChargedLepton((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsPosChargedLepton((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsNuE((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsNuMu((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsNuTau((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsAntiNuE((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsAntiNuMu((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsAntiNuTau((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsElectron((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsPositron((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsMuon((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsAntiMuon((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsTau((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsAntiTau((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsDiQuark((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsQuark((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsUQuark((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsDQuark((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsSQuark((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsCQuark((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsAntiQuark((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsAntiUQuark((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsAntiDQuark((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsAntiSQuark((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsAntiCQuark((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsKaon((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsPion((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsProton((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsNeutron((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsNucleon((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsNeutronOrProton((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsHadron((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::IsBaryonResonance((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) genie::pdg::Is2NucleonCluster((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genie::pdg::SwitchProtonNeutron((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genie::pdg::ModifyNucleonCluster((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genie::pdg::Neutrino2ChargedLepton((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_PDG_205_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genie::pdg::GeantToPdg((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* genie */

/* genie::PDGCodeList */

/* genie::PDGLibrary */

/* genie::pdg */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfunc_ROOT_DICT_PDG {
 public:
  G__Sizep2memfunc_ROOT_DICT_PDG(): p(&G__Sizep2memfunc_ROOT_DICT_PDG::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfunc_ROOT_DICT_PDG::*p)();
};

size_t G__get_sizep2memfunc_ROOT_DICT_PDG()
{
  G__Sizep2memfunc_ROOT_DICT_PDG a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritance_ROOT_DICT_PDG() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_geniecLcLPDGCodeList))) {
     genie::PDGCodeList *G__Lderived;
     G__Lderived=(genie::PDGCodeList*)0x1000;
     {
       vector<int,allocator<int> > *G__Lpbase=(vector<int,allocator<int> >*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_geniecLcLPDGCodeList),G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_vectorlEintcOallocatorlEintgRsPgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetable_ROOT_DICT_PDG() {

   /* Setting up typedef entry */
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* genie */
static void G__setup_memvargenie(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_genie));
   {
   }
   G__tag_memvar_reset();
}


   /* genie::PDGCodeList */
static void G__setup_memvargeniecLcLPDGCodeList(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_geniecLcLPDGCodeList));
   { genie::PDGCodeList *p; p=(genie::PDGCodeList*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fAllowDuplicateEntries=",0,"/< allow duplicate entries in the list?");
   }
   G__tag_memvar_reset();
}


   /* genie::PDGLibrary */
static void G__setup_memvargeniecLcLPDGLibrary(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_geniecLcLPDGLibrary));
   { genie::PDGLibrary *p; p=(genie::PDGLibrary*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_geniecLcLPDGLibrary),-1,-2,4,"fInstance=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_TDatabasePDG),-1,-1,4,"fDatabasePDG=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genie::pdg */
static void G__setup_memvargeniecLcLpdg(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_geniecLcLpdg));
   {
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvar_ROOT_DICT_PDG() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncgenie(void) {
   /* genie */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_genie));
   G__memfunc_setup("operator<<",996,G___ROOT_DICT_PDG_168_0_1, 117, G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - stream u 'genie::PDGCodeList' - 11 - list", (char*)NULL, (void*) G__func2void( (ostream& (*)(ostream&, const genie::PDGCodeList&))(&genie::operator<<) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLPDGCodeList(void) {
   /* genie::PDGCodeList */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_geniecLcLPDGCodeList));
   G__memfunc_setup("PDGCodeList",1010,G___ROOT_DICT_PDG_169_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_geniecLcLPDGCodeList), -1, 0, 1, 1, 1, 0, "g - - 0 'false' allowdup", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PDGCodeList",1010,G___ROOT_DICT_PDG_169_0_2, 105, G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_geniecLcLPDGCodeList), -1, 0, 2, 1, 1, 0, 
"k - 'vector<int,allocator<int> >::size_type' 0 - n g - - 0 'false' allowdup", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PDGCodeList",1010,G___ROOT_DICT_PDG_169_0_3, 105, G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_geniecLcLPDGCodeList), -1, 0, 1, 1, 1, 0, "u 'genie::PDGCodeList' - 11 - list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G___ROOT_DICT_PDG_169_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdg_code", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G___ROOT_DICT_PDG_169_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<int,allocator<int> >::iterator' - 0 - pos k - 'vector<int,allocator<int> >::size_type' 0 - n "
"i - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckPDGCode",1076,G___ROOT_DICT_PDG_169_0_6, 103, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - pdg_code", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExistsInPDGLibrary",1767,G___ROOT_DICT_PDG_169_0_7, 103, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - pdg_code", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExistsInPDGCodeList",1833,G___ROOT_DICT_PDG_169_0_8, 103, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - pdg_code", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,G___ROOT_DICT_PDG_169_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'genie::PDGCodeList' - 11 - list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G___ROOT_DICT_PDG_169_0_10, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - stream", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DuplEntriesAllowed",1847,G___ROOT_DICT_PDG_169_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G___ROOT_DICT_PDG_169_0_12, 117, G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_geniecLcLPDGCodeList), -1, 1, 1, 1, 1, 0, "u 'genie::PDGCodeList' - 11 - list", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PDGCodeList", 1136, G___ROOT_DICT_PDG_169_0_13, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLPDGLibrary(void) {
   /* genie::PDGLibrary */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_geniecLcLPDGLibrary));
   G__memfunc_setup("Instance",821,G___ROOT_DICT_PDG_203_0_1, 85, G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_geniecLcLPDGLibrary), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (genie::PDGLibrary* (*)())(&genie::PDGLibrary::Instance) ), 0);
   G__memfunc_setup("DBase",447,G___ROOT_DICT_PDG_203_0_2, 85, G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_TDatabasePDG), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Find",385,G___ROOT_DICT_PDG_203_0_3, 85, G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_TParticlePDG), -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PDGLibrary",944,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_geniecLcLPDGLibrary), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PDGLibrary",944,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_geniecLcLPDGLibrary), -1, 0, 1, 1, 4, 0, "u 'genie::PDGLibrary' - 11 - config_pool", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadDBase",831,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_PDG_203_0_7, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_geniecLcLPDGLibrary), -1, 1, 1, 1, 1, 0, "u 'genie::PDGLibrary' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLpdg(void) {
   /* genie::pdg */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_PDGLN_geniecLcLpdg));
   G__memfunc_setup("IsPseudoParticle",1632,G___ROOT_DICT_PDG_205_0_1, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsPseudoParticle) ), 0);
   G__memfunc_setup("IsIon",482,G___ROOT_DICT_PDG_205_0_2, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsIon) ), 0);
   G__memfunc_setup("IsParticle",1008,G___ROOT_DICT_PDG_205_0_3, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", "/< not ion or pseudo-particle", (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsParticle) ), 0);
   G__memfunc_setup("IonPdgCodeToZ",1241,G___ROOT_DICT_PDG_205_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (int (*)(int))(&genie::pdg::IonPdgCodeToZ) ), 0);
   G__memfunc_setup("IonPdgCodeToA",1216,G___ROOT_DICT_PDG_205_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (int (*)(int))(&genie::pdg::IonPdgCodeToA) ), 0);
   G__memfunc_setup("IonPdgCode",956,G___ROOT_DICT_PDG_205_0_6, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - A i - - 0 - Z", (char*)NULL, (void*) G__func2void( (int (*)(int, int))(&genie::pdg::IonPdgCode) ), 0);
   G__memfunc_setup("IonPdgCode",956,G___ROOT_DICT_PDG_205_0_7, 105, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - A i - - 0 - Z "
"i - - 0 - L i - - 0 - I", (char*)NULL, (void*) G__func2void( (int (*)(int, int, int, int))(&genie::pdg::IonPdgCode) ), 0);
   G__memfunc_setup("IsLepton",814,G___ROOT_DICT_PDG_205_0_8, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsLepton) ), 0);
   G__memfunc_setup("IsNeutralLepton",1545,G___ROOT_DICT_PDG_205_0_9, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsNeutralLepton) ), 0);
   G__memfunc_setup("IsChargedLepton",1500,G___ROOT_DICT_PDG_205_0_10, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsChargedLepton) ), 0);
   G__memfunc_setup("IsNeutrino",1040,G___ROOT_DICT_PDG_205_0_11, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsNeutrino) ), 0);
   G__memfunc_setup("IsAntiNeutrino",1436,G___ROOT_DICT_PDG_205_0_12, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsAntiNeutrino) ), 0);
   G__memfunc_setup("IsNegChargedLepton",1782,G___ROOT_DICT_PDG_205_0_13, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsNegChargedLepton) ), 0);
   G__memfunc_setup("IsPosChargedLepton",1806,G___ROOT_DICT_PDG_205_0_14, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsPosChargedLepton) ), 0);
   G__memfunc_setup("IsNuE",452,G___ROOT_DICT_PDG_205_0_15, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsNuE) ), 0);
   G__memfunc_setup("IsNuMu",577,G___ROOT_DICT_PDG_205_0_16, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsNuMu) ), 0);
   G__memfunc_setup("IsNuTau",681,G___ROOT_DICT_PDG_205_0_17, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsNuTau) ), 0);
   G__memfunc_setup("IsAntiNuE",848,G___ROOT_DICT_PDG_205_0_18, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsAntiNuE) ), 0);
   G__memfunc_setup("IsAntiNuMu",973,G___ROOT_DICT_PDG_205_0_19, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsAntiNuMu) ), 0);
   G__memfunc_setup("IsAntiNuTau",1077,G___ROOT_DICT_PDG_205_0_20, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsAntiNuTau) ), 0);
   G__memfunc_setup("IsElectron",1016,G___ROOT_DICT_PDG_205_0_21, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsElectron) ), 0);
   G__memfunc_setup("IsPositron",1050,G___ROOT_DICT_PDG_205_0_22, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsPositron) ), 0);
   G__memfunc_setup("IsMuon",603,G___ROOT_DICT_PDG_205_0_23, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsMuon) ), 0);
   G__memfunc_setup("IsAntiMuon",999,G___ROOT_DICT_PDG_205_0_24, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsAntiMuon) ), 0);
   G__memfunc_setup("IsTau",486,G___ROOT_DICT_PDG_205_0_25, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsTau) ), 0);
   G__memfunc_setup("IsAntiTau",882,G___ROOT_DICT_PDG_205_0_26, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsAntiTau) ), 0);
   G__memfunc_setup("IsDiQuark",877,G___ROOT_DICT_PDG_205_0_27, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsDiQuark) ), 0);
   G__memfunc_setup("IsQuark",704,G___ROOT_DICT_PDG_205_0_28, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsQuark) ), 0);
   G__memfunc_setup("IsUQuark",789,G___ROOT_DICT_PDG_205_0_29, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsUQuark) ), 0);
   G__memfunc_setup("IsDQuark",772,G___ROOT_DICT_PDG_205_0_30, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsDQuark) ), 0);
   G__memfunc_setup("IsSQuark",787,G___ROOT_DICT_PDG_205_0_31, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsSQuark) ), 0);
   G__memfunc_setup("IsCQuark",771,G___ROOT_DICT_PDG_205_0_32, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsCQuark) ), 0);
   G__memfunc_setup("IsAntiQuark",1100,G___ROOT_DICT_PDG_205_0_33, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsAntiQuark) ), 0);
   G__memfunc_setup("IsAntiUQuark",1185,G___ROOT_DICT_PDG_205_0_34, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsAntiUQuark) ), 0);
   G__memfunc_setup("IsAntiDQuark",1168,G___ROOT_DICT_PDG_205_0_35, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsAntiDQuark) ), 0);
   G__memfunc_setup("IsAntiSQuark",1183,G___ROOT_DICT_PDG_205_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsAntiSQuark) ), 0);
   G__memfunc_setup("IsAntiCQuark",1167,G___ROOT_DICT_PDG_205_0_37, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsAntiCQuark) ), 0);
   G__memfunc_setup("IsKaon",581,G___ROOT_DICT_PDG_205_0_38, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsKaon) ), 0);
   G__memfunc_setup("IsPion",594,G___ROOT_DICT_PDG_205_0_39, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsPion) ), 0);
   G__memfunc_setup("IsProton",830,G___ROOT_DICT_PDG_205_0_40, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsProton) ), 0);
   G__memfunc_setup("IsNeutron",935,G___ROOT_DICT_PDG_205_0_41, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsNeutron) ), 0);
   G__memfunc_setup("IsNucleon",912,G___ROOT_DICT_PDG_205_0_42, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsNucleon) ), 0);
   G__memfunc_setup("IsNeutronOrProton",1770,G___ROOT_DICT_PDG_205_0_43, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsNeutronOrProton) ), 0);
   G__memfunc_setup("IsHadron",792,G___ROOT_DICT_PDG_205_0_44, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsHadron) ), 0);
   G__memfunc_setup("IsBaryonResonance",1733,G___ROOT_DICT_PDG_205_0_45, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::IsBaryonResonance) ), 0);
   G__memfunc_setup("Is2NucleonCluster",1700,G___ROOT_DICT_PDG_205_0_46, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (bool (*)(int))(&genie::pdg::Is2NucleonCluster) ), 0);
   G__memfunc_setup("SwitchProtonNeutron",2015,G___ROOT_DICT_PDG_205_0_47, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (int (*)(int))(&genie::pdg::SwitchProtonNeutron) ), 0);
   G__memfunc_setup("ModifyNucleonCluster",2078,G___ROOT_DICT_PDG_205_0_48, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - pdgc i - - 0 - dQ", (char*)NULL, (void*) G__func2void( (int (*)(int, int))(&genie::pdg::ModifyNucleonCluster) ), 0);
   G__memfunc_setup("Neutrino2ChargedLepton",2214,G___ROOT_DICT_PDG_205_0_49, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdgc", (char*)NULL, (void*) G__func2void( (int (*)(int))(&genie::pdg::Neutrino2ChargedLepton) ), 0);
   G__memfunc_setup("GeantToPdg",973,G___ROOT_DICT_PDG_205_0_50, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - geant_code", (char*)NULL, (void*) G__func2void( (int (*)(int))(&genie::pdg::GeantToPdg) ), 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfunc_ROOT_DICT_PDG() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_global_ROOT_DICT_PDG() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_func_ROOT_DICT_PDG() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G___ROOT_DICT_PDGLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_PDGLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_PDGLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_PDGLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_PDGLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_PDGLN_genie = { "genie" , 110 , -1 };
G__linked_taginfo G___ROOT_DICT_PDGLN_geniecLcLPDGCodeList = { "genie::PDGCodeList" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_PDGLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_PDGLN_vectorlEintcOallocatorlEintgRsPgRcLcLiterator = { "vector<int,allocator<int> >::iterator" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_PDGLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_PDGLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G___ROOT_DICT_PDGLN_TParticlePDG = { "TParticlePDG" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_PDGLN_TDatabasePDG = { "TDatabasePDG" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_PDGLN_geniecLcLPDGLibrary = { "genie::PDGLibrary" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_PDGLN_geniecLcLpdg = { "genie::pdg" , 110 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtable_ROOT_DICT_PDG() {
  G___ROOT_DICT_PDGLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G___ROOT_DICT_PDGLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G___ROOT_DICT_PDGLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_PDGLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_PDGLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_PDGLN_genie.tagnum = -1 ;
  G___ROOT_DICT_PDGLN_geniecLcLPDGCodeList.tagnum = -1 ;
  G___ROOT_DICT_PDGLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_PDGLN_vectorlEintcOallocatorlEintgRsPgRcLcLiterator.tagnum = -1 ;
  G___ROOT_DICT_PDGLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_PDGLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G___ROOT_DICT_PDGLN_TParticlePDG.tagnum = -1 ;
  G___ROOT_DICT_PDGLN_TDatabasePDG.tagnum = -1 ;
  G___ROOT_DICT_PDGLN_geniecLcLPDGLibrary.tagnum = -1 ;
  G___ROOT_DICT_PDGLN_geniecLcLpdg.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtable_ROOT_DICT_PDG() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_PDGLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_PDGLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_PDGLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_PDGLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_PDGLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_PDGLN_genie),0,-1,0,(char*)NULL,G__setup_memvargenie,G__setup_memfuncgenie);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_PDGLN_geniecLcLPDGCodeList),sizeof(genie::PDGCodeList),-1,36608,(char*)NULL,G__setup_memvargeniecLcLPDGCodeList,G__setup_memfuncgeniecLcLPDGCodeList);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_PDGLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_PDGLN_vectorlEintcOallocatorlEintgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_PDGLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_PDGLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_PDGLN_TParticlePDG);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_PDGLN_TDatabasePDG);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_PDGLN_geniecLcLPDGLibrary),sizeof(genie::PDGLibrary),-1,1792,(char*)NULL,G__setup_memvargeniecLcLPDGLibrary,G__setup_memfuncgeniecLcLPDGLibrary);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_PDGLN_geniecLcLpdg),0,-1,0,(char*)NULL,G__setup_memvargeniecLcLpdg,G__setup_memfuncgeniecLcLpdg);
}
extern "C" void G__cpp_setup_ROOT_DICT_PDG(void) {
  G__check_setup_version(30051515,"G__cpp_setup_ROOT_DICT_PDG()");
  G__set_cpp_environment_ROOT_DICT_PDG();
  G__cpp_setup_tagtable_ROOT_DICT_PDG();

  G__cpp_setup_inheritance_ROOT_DICT_PDG();

  G__cpp_setup_typetable_ROOT_DICT_PDG();

  G__cpp_setup_memvar_ROOT_DICT_PDG();

  G__cpp_setup_memfunc_ROOT_DICT_PDG();
  G__cpp_setup_global_ROOT_DICT_PDG();
  G__cpp_setup_func_ROOT_DICT_PDG();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfunc_ROOT_DICT_PDG();
  return;
}
class G__cpp_setup_init_ROOT_DICT_PDG {
  public:
    G__cpp_setup_init_ROOT_DICT_PDG() { G__add_setup_func("_ROOT_DICT_PDG",(G__incsetup)(&G__cpp_setup_ROOT_DICT_PDG)); G__call_setup_funcs(); }
   ~G__cpp_setup_init_ROOT_DICT_PDG() { G__remove_setup_func("_ROOT_DICT_PDG"); }
};
G__cpp_setup_init_ROOT_DICT_PDG G__cpp_setup_initializer_ROOT_DICT_PDG;

