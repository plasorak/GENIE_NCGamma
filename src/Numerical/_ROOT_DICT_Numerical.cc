//
// File generated by rootcint at Thu Jul 13 14:23:27 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME _ROOT_DICT_Numerical
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "_ROOT_DICT_Numerical.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace genie {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void genie_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("genie", 0 /*version*/, "./Spline.h", 42,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &genie_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void genie_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOTDict {
   void geniecLcLBLI2DGrid_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_geniecLcLBLI2DGrid(void *p);
   static void deleteArray_geniecLcLBLI2DGrid(void *p);
   static void destruct_geniecLcLBLI2DGrid(void *p);
   static void streamer_geniecLcLBLI2DGrid(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::BLI2DGrid*)
   {
      ::genie::BLI2DGrid *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::genie::BLI2DGrid >(0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::BLI2DGrid", ::genie::BLI2DGrid::Class_Version(), "./BLI2D.h", 26,
                  typeid(::genie::BLI2DGrid), ::ROOT::DefineBehavior(ptr, ptr),
                  &::genie::BLI2DGrid::Dictionary, isa_proxy, 0,
                  sizeof(::genie::BLI2DGrid) );
      instance.SetDelete(&delete_geniecLcLBLI2DGrid);
      instance.SetDeleteArray(&deleteArray_geniecLcLBLI2DGrid);
      instance.SetDestructor(&destruct_geniecLcLBLI2DGrid);
      instance.SetStreamerFunc(&streamer_geniecLcLBLI2DGrid);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::BLI2DGrid*)
   {
      return GenerateInitInstanceLocal((::genie::BLI2DGrid*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::BLI2DGrid*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLBLI2DUnifGrid_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_geniecLcLBLI2DUnifGrid(void *p = 0);
   static void *newArray_geniecLcLBLI2DUnifGrid(Long_t size, void *p);
   static void delete_geniecLcLBLI2DUnifGrid(void *p);
   static void deleteArray_geniecLcLBLI2DUnifGrid(void *p);
   static void destruct_geniecLcLBLI2DUnifGrid(void *p);
   static void streamer_geniecLcLBLI2DUnifGrid(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::BLI2DUnifGrid*)
   {
      ::genie::BLI2DUnifGrid *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::genie::BLI2DUnifGrid >(0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::BLI2DUnifGrid", ::genie::BLI2DUnifGrid::Class_Version(), "./BLI2D.h", 76,
                  typeid(::genie::BLI2DUnifGrid), ::ROOT::DefineBehavior(ptr, ptr),
                  &::genie::BLI2DUnifGrid::Dictionary, isa_proxy, 0,
                  sizeof(::genie::BLI2DUnifGrid) );
      instance.SetNew(&new_geniecLcLBLI2DUnifGrid);
      instance.SetNewArray(&newArray_geniecLcLBLI2DUnifGrid);
      instance.SetDelete(&delete_geniecLcLBLI2DUnifGrid);
      instance.SetDeleteArray(&deleteArray_geniecLcLBLI2DUnifGrid);
      instance.SetDestructor(&destruct_geniecLcLBLI2DUnifGrid);
      instance.SetStreamerFunc(&streamer_geniecLcLBLI2DUnifGrid);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::BLI2DUnifGrid*)
   {
      return GenerateInitInstanceLocal((::genie::BLI2DUnifGrid*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::BLI2DUnifGrid*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLBLI2DNonUnifGrid_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_geniecLcLBLI2DNonUnifGrid(void *p = 0);
   static void *newArray_geniecLcLBLI2DNonUnifGrid(Long_t size, void *p);
   static void delete_geniecLcLBLI2DNonUnifGrid(void *p);
   static void deleteArray_geniecLcLBLI2DNonUnifGrid(void *p);
   static void destruct_geniecLcLBLI2DNonUnifGrid(void *p);
   static void streamer_geniecLcLBLI2DNonUnifGrid(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::BLI2DNonUnifGrid*)
   {
      ::genie::BLI2DNonUnifGrid *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::genie::BLI2DNonUnifGrid >(0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::BLI2DNonUnifGrid", ::genie::BLI2DNonUnifGrid::Class_Version(), "./BLI2D.h", 100,
                  typeid(::genie::BLI2DNonUnifGrid), ::ROOT::DefineBehavior(ptr, ptr),
                  &::genie::BLI2DNonUnifGrid::Dictionary, isa_proxy, 0,
                  sizeof(::genie::BLI2DNonUnifGrid) );
      instance.SetNew(&new_geniecLcLBLI2DNonUnifGrid);
      instance.SetNewArray(&newArray_geniecLcLBLI2DNonUnifGrid);
      instance.SetDelete(&delete_geniecLcLBLI2DNonUnifGrid);
      instance.SetDeleteArray(&deleteArray_geniecLcLBLI2DNonUnifGrid);
      instance.SetDestructor(&destruct_geniecLcLBLI2DNonUnifGrid);
      instance.SetStreamerFunc(&streamer_geniecLcLBLI2DNonUnifGrid);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::BLI2DNonUnifGrid*)
   {
      return GenerateInitInstanceLocal((::genie::BLI2DNonUnifGrid*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::BLI2DNonUnifGrid*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLRandomGen_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void geniecLcLRandomGen_Dictionary();

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::RandomGen*)
   {
      ::genie::RandomGen *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::genie::RandomGen),0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::RandomGen", "./RandomGen.h", 30,
                  typeid(::genie::RandomGen), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &geniecLcLRandomGen_Dictionary, isa_proxy, 0,
                  sizeof(::genie::RandomGen) );
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::RandomGen*)
   {
      return GenerateInitInstanceLocal((::genie::RandomGen*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::RandomGen*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void geniecLcLRandomGen_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::genie::RandomGen*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void geniecLcLSpline_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_geniecLcLSpline(void *p = 0);
   static void *newArray_geniecLcLSpline(Long_t size, void *p);
   static void delete_geniecLcLSpline(void *p);
   static void deleteArray_geniecLcLSpline(void *p);
   static void destruct_geniecLcLSpline(void *p);
   static void streamer_geniecLcLSpline(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::genie::Spline*)
   {
      ::genie::Spline *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::genie::Spline >(0);
      static ::ROOT::TGenericClassInfo 
         instance("genie::Spline", ::genie::Spline::Class_Version(), "./Spline.h", 44,
                  typeid(::genie::Spline), ::ROOT::DefineBehavior(ptr, ptr),
                  &::genie::Spline::Dictionary, isa_proxy, 0,
                  sizeof(::genie::Spline) );
      instance.SetNew(&new_geniecLcLSpline);
      instance.SetNewArray(&newArray_geniecLcLSpline);
      instance.SetDelete(&delete_geniecLcLSpline);
      instance.SetDeleteArray(&deleteArray_geniecLcLSpline);
      instance.SetDestructor(&destruct_geniecLcLSpline);
      instance.SetStreamerFunc(&streamer_geniecLcLSpline);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::genie::Spline*)
   {
      return GenerateInitInstanceLocal((::genie::Spline*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::genie::Spline*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

      namespace genie {
//______________________________________________________________________________
atomic_TClass_ptr BLI2DGrid::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *BLI2DGrid::Class_Name()
{
   return "genie::BLI2DGrid";
}

//______________________________________________________________________________
const char *BLI2DGrid::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genie::BLI2DGrid*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BLI2DGrid::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genie::BLI2DGrid*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BLI2DGrid::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genie::BLI2DGrid*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BLI2DGrid::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genie::BLI2DGrid*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace genie
      namespace genie {
//______________________________________________________________________________
atomic_TClass_ptr BLI2DUnifGrid::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *BLI2DUnifGrid::Class_Name()
{
   return "genie::BLI2DUnifGrid";
}

//______________________________________________________________________________
const char *BLI2DUnifGrid::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genie::BLI2DUnifGrid*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BLI2DUnifGrid::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genie::BLI2DUnifGrid*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BLI2DUnifGrid::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genie::BLI2DUnifGrid*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BLI2DUnifGrid::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genie::BLI2DUnifGrid*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace genie
      namespace genie {
//______________________________________________________________________________
atomic_TClass_ptr BLI2DNonUnifGrid::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *BLI2DNonUnifGrid::Class_Name()
{
   return "genie::BLI2DNonUnifGrid";
}

//______________________________________________________________________________
const char *BLI2DNonUnifGrid::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genie::BLI2DNonUnifGrid*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BLI2DNonUnifGrid::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genie::BLI2DNonUnifGrid*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BLI2DNonUnifGrid::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genie::BLI2DNonUnifGrid*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BLI2DNonUnifGrid::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genie::BLI2DNonUnifGrid*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace genie
      namespace genie {
//______________________________________________________________________________
atomic_TClass_ptr Spline::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Spline::Class_Name()
{
   return "genie::Spline";
}

//______________________________________________________________________________
const char *Spline::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genie::Spline*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Spline::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::genie::Spline*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Spline::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genie::Spline*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Spline::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::genie::Spline*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace genie
namespace ROOTDict {
} // end of namespace ROOTDict for class ::genie::RandomGen

      namespace genie {
//______________________________________________________________________________
void Spline::Streamer(TBuffer &R__b)
{
   // Stream an object of class genie::Spline.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::genie::Spline thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      { TString R__str; R__str.Streamer(R__b); fName = R__str.Data(); }
      R__b >> fNKnots;
      R__b >> fXMin;
      R__b >> fXMax;
      R__b >> fYMax;
      R__b >> fInterpolator;
      R__b >> fYCanBeNegative;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      { TString R__str = fName.c_str(); R__str.Streamer(R__b);}
      R__b << fNKnots;
      R__b << fXMin;
      R__b << fXMax;
      R__b << fYMax;
      R__b << fInterpolator;
      R__b << fYCanBeNegative;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace genie
//______________________________________________________________________________
      namespace genie {
void Spline::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class genie::Spline.
      TClass *R__cl = ::genie::Spline::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fName", (void*)&fName);
      R__insp.InspectMember("string", (void*)&fName, "fName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNKnots", &fNKnots);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXMin", &fXMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXMax", &fXMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYMax", &fYMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInterpolator", &fInterpolator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYCanBeNegative", &fYCanBeNegative);
      TObject::ShowMembers(R__insp);
}

} // namespace genie
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_geniecLcLSpline(void *p) {
      return  p ? new(p) ::genie::Spline : new ::genie::Spline;
   }
   static void *newArray_geniecLcLSpline(Long_t nElements, void *p) {
      return p ? new(p) ::genie::Spline[nElements] : new ::genie::Spline[nElements];
   }
   // Wrapper around operator delete
   static void delete_geniecLcLSpline(void *p) {
      delete ((::genie::Spline*)p);
   }
   static void deleteArray_geniecLcLSpline(void *p) {
      delete [] ((::genie::Spline*)p);
   }
   static void destruct_geniecLcLSpline(void *p) {
      typedef ::genie::Spline current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_geniecLcLSpline(TBuffer &buf, void *obj) {
      ((::genie::Spline*)obj)->::genie::Spline::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::genie::Spline

      namespace genie {
//______________________________________________________________________________
void BLI2DGrid::Streamer(TBuffer &R__b)
{
   // Stream an object of class genie::BLI2DGrid.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::genie::BLI2DGrid thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> fNX;
      R__b >> fNY;
      R__b >> fNZ;
      delete [] fX;
      fX = new double[fNX];
      R__b.ReadFastArray(fX,fNX);
      delete [] fY;
      fY = new double[fNY];
      R__b.ReadFastArray(fY,fNY);
      delete [] fZ;
      fZ = new double[fNZ];
      R__b.ReadFastArray(fZ,fNZ);
      R__b >> fDX;
      R__b >> fDY;
      R__b >> fXmin;
      R__b >> fXmax;
      R__b >> fYmin;
      R__b >> fYmax;
      R__b >> fZmin;
      R__b >> fZmax;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << fNX;
      R__b << fNY;
      R__b << fNZ;
      R__b.WriteFastArray(fX,fNX);
      R__b.WriteFastArray(fY,fNY);
      R__b.WriteFastArray(fZ,fNZ);
      R__b << fDX;
      R__b << fDY;
      R__b << fXmin;
      R__b << fXmax;
      R__b << fYmin;
      R__b << fYmax;
      R__b << fZmin;
      R__b << fZmax;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace genie
//______________________________________________________________________________
      namespace genie {
void BLI2DGrid::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class genie::BLI2DGrid.
      TClass *R__cl = ::genie::BLI2DGrid::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNX", &fNX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNY", &fNY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNZ", &fNZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fX", &fX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fY", &fY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fZ", &fZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDX", &fDX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDY", &fDY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXmin", &fXmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXmax", &fXmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYmin", &fYmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYmax", &fYmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZmin", &fZmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZmax", &fZmax);
      TObject::ShowMembers(R__insp);
}

} // namespace genie
namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_geniecLcLBLI2DGrid(void *p) {
      delete ((::genie::BLI2DGrid*)p);
   }
   static void deleteArray_geniecLcLBLI2DGrid(void *p) {
      delete [] ((::genie::BLI2DGrid*)p);
   }
   static void destruct_geniecLcLBLI2DGrid(void *p) {
      typedef ::genie::BLI2DGrid current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_geniecLcLBLI2DGrid(TBuffer &buf, void *obj) {
      ((::genie::BLI2DGrid*)obj)->::genie::BLI2DGrid::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::genie::BLI2DGrid

      namespace genie {
//______________________________________________________________________________
void BLI2DUnifGrid::Streamer(TBuffer &R__b)
{
   // Stream an object of class genie::BLI2DUnifGrid.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::genie::BLI2DUnifGrid thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef genie::BLI2DGrid baseClass0;
      baseClass0::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      //This works around a msvc bug and should be harmless on other platforms
      typedef genie::BLI2DGrid baseClass0;
      baseClass0::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace genie
//______________________________________________________________________________
      namespace genie {
void BLI2DUnifGrid::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class genie::BLI2DUnifGrid.
      TClass *R__cl = ::genie::BLI2DUnifGrid::IsA();
      if (R__cl || R__insp.IsA()) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef genie::BLI2DGrid baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace genie
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_geniecLcLBLI2DUnifGrid(void *p) {
      return  p ? new(p) ::genie::BLI2DUnifGrid : new ::genie::BLI2DUnifGrid;
   }
   static void *newArray_geniecLcLBLI2DUnifGrid(Long_t nElements, void *p) {
      return p ? new(p) ::genie::BLI2DUnifGrid[nElements] : new ::genie::BLI2DUnifGrid[nElements];
   }
   // Wrapper around operator delete
   static void delete_geniecLcLBLI2DUnifGrid(void *p) {
      delete ((::genie::BLI2DUnifGrid*)p);
   }
   static void deleteArray_geniecLcLBLI2DUnifGrid(void *p) {
      delete [] ((::genie::BLI2DUnifGrid*)p);
   }
   static void destruct_geniecLcLBLI2DUnifGrid(void *p) {
      typedef ::genie::BLI2DUnifGrid current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_geniecLcLBLI2DUnifGrid(TBuffer &buf, void *obj) {
      ((::genie::BLI2DUnifGrid*)obj)->::genie::BLI2DUnifGrid::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::genie::BLI2DUnifGrid

      namespace genie {
//______________________________________________________________________________
void BLI2DNonUnifGrid::Streamer(TBuffer &R__b)
{
   // Stream an object of class genie::BLI2DNonUnifGrid.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::genie::BLI2DNonUnifGrid thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef genie::BLI2DGrid baseClass0;
      baseClass0::Streamer(R__b);
      R__b >> fNFillX;
      R__b >> fNFillY;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      //This works around a msvc bug and should be harmless on other platforms
      typedef genie::BLI2DGrid baseClass0;
      baseClass0::Streamer(R__b);
      R__b << fNFillX;
      R__b << fNFillY;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace genie
//______________________________________________________________________________
      namespace genie {
void BLI2DNonUnifGrid::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class genie::BLI2DNonUnifGrid.
      TClass *R__cl = ::genie::BLI2DNonUnifGrid::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNFillX", &fNFillX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNFillY", &fNFillY);
      //This works around a msvc bug and should be harmless on other platforms
      typedef genie::BLI2DGrid baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace genie
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_geniecLcLBLI2DNonUnifGrid(void *p) {
      return  p ? new(p) ::genie::BLI2DNonUnifGrid : new ::genie::BLI2DNonUnifGrid;
   }
   static void *newArray_geniecLcLBLI2DNonUnifGrid(Long_t nElements, void *p) {
      return p ? new(p) ::genie::BLI2DNonUnifGrid[nElements] : new ::genie::BLI2DNonUnifGrid[nElements];
   }
   // Wrapper around operator delete
   static void delete_geniecLcLBLI2DNonUnifGrid(void *p) {
      delete ((::genie::BLI2DNonUnifGrid*)p);
   }
   static void deleteArray_geniecLcLBLI2DNonUnifGrid(void *p) {
      delete [] ((::genie::BLI2DNonUnifGrid*)p);
   }
   static void destruct_geniecLcLBLI2DNonUnifGrid(void *p) {
      typedef ::genie::BLI2DNonUnifGrid current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_geniecLcLBLI2DNonUnifGrid(TBuffer &buf, void *obj) {
      ((::genie::BLI2DNonUnifGrid*)obj)->::genie::BLI2DNonUnifGrid::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::genie::BLI2DNonUnifGrid

/********************************************************
* _ROOT_DICT_Numerical.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtable_ROOT_DICT_Numerical();

extern "C" void G__set_cpp_environment_ROOT_DICT_Numerical() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("BLI2D.h");
  G__add_compiledheader("GFunc.h");
  G__add_compiledheader("RandomGen.h");
  G__add_compiledheader("Spline.h");
  G__cpp_reset_tagtable_ROOT_DICT_Numerical();
}
#include <new>
extern "C" int G__cpp_dllrev_ROOT_DICT_Numerical() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* genie */
static int G___ROOT_DICT_Numerical_168_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ostream& obj = genie::operator<<(*(ostream*) libp->para[0].ref, *(genie::Spline*) libp->para[1].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::BLI2DGrid */
static int G___ROOT_DICT_Numerical_169_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((genie::BLI2DGrid*) G__getstructoffset())->AddPoint((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_169_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::BLI2DGrid*) G__getstructoffset())->Evaluate((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_169_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::BLI2DGrid*) G__getstructoffset())->XMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_169_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::BLI2DGrid*) G__getstructoffset())->XMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_169_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::BLI2DGrid*) G__getstructoffset())->YMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_169_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::BLI2DGrid*) G__getstructoffset())->YMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_169_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::BLI2DGrid*) G__getstructoffset())->ZMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_169_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::BLI2DGrid*) G__getstructoffset())->ZMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_169_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genie::BLI2DGrid::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_169_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genie::BLI2DGrid::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_169_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) genie::BLI2DGrid::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_169_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      genie::BLI2DGrid::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_169_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::BLI2DGrid*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_169_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genie::BLI2DGrid::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_169_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genie::BLI2DGrid::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_169_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genie::BLI2DGrid::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_169_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genie::BLI2DGrid::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::BLI2DGrid G__TgeniecLcLBLI2DGrid;
static int G___ROOT_DICT_Numerical_169_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::BLI2DGrid*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::BLI2DGrid*) (soff+(sizeof(genie::BLI2DGrid)*i)))->~G__TgeniecLcLBLI2DGrid();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::BLI2DGrid*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::BLI2DGrid*) (soff))->~G__TgeniecLcLBLI2DGrid();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Numerical_169_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::BLI2DGrid* dest = (genie::BLI2DGrid*) G__getstructoffset();
   *dest = *(genie::BLI2DGrid*) libp->para[0].ref;
   const genie::BLI2DGrid& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::BLI2DUnifGrid */
static int G___ROOT_DICT_Numerical_170_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::BLI2DUnifGrid* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::BLI2DUnifGrid[n];
     } else {
       p = new((void*) gvp) genie::BLI2DUnifGrid[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::BLI2DUnifGrid;
     } else {
       p = new((void*) gvp) genie::BLI2DUnifGrid;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_170_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::BLI2DUnifGrid* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::BLI2DUnifGrid(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5]));
   } else {
     p = new((void*) gvp) genie::BLI2DUnifGrid(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_170_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::BLI2DUnifGrid* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::BLI2DUnifGrid(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (double*) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) genie::BLI2DUnifGrid(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (double*) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_170_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genie::BLI2DUnifGrid::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_170_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genie::BLI2DUnifGrid::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_170_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) genie::BLI2DUnifGrid::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_170_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      genie::BLI2DUnifGrid::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_170_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::BLI2DUnifGrid*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_170_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genie::BLI2DUnifGrid::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_170_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genie::BLI2DUnifGrid::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_170_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genie::BLI2DUnifGrid::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_170_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genie::BLI2DUnifGrid::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_Numerical_170_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genie::BLI2DUnifGrid* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genie::BLI2DUnifGrid(*(genie::BLI2DUnifGrid*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::BLI2DUnifGrid G__TgeniecLcLBLI2DUnifGrid;
static int G___ROOT_DICT_Numerical_170_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::BLI2DUnifGrid*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::BLI2DUnifGrid*) (soff+(sizeof(genie::BLI2DUnifGrid)*i)))->~G__TgeniecLcLBLI2DUnifGrid();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::BLI2DUnifGrid*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::BLI2DUnifGrid*) (soff))->~G__TgeniecLcLBLI2DUnifGrid();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Numerical_170_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::BLI2DUnifGrid* dest = (genie::BLI2DUnifGrid*) G__getstructoffset();
   *dest = *(genie::BLI2DUnifGrid*) libp->para[0].ref;
   const genie::BLI2DUnifGrid& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::BLI2DNonUnifGrid */
static int G___ROOT_DICT_Numerical_171_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::BLI2DNonUnifGrid* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::BLI2DNonUnifGrid[n];
     } else {
       p = new((void*) gvp) genie::BLI2DNonUnifGrid[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::BLI2DNonUnifGrid;
     } else {
       p = new((void*) gvp) genie::BLI2DNonUnifGrid;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_171_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::BLI2DNonUnifGrid* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::BLI2DNonUnifGrid(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5]));
   } else {
     p = new((void*) gvp) genie::BLI2DNonUnifGrid(
(int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_171_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::BLI2DNonUnifGrid* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::BLI2DNonUnifGrid(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (double*) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) genie::BLI2DNonUnifGrid(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (double*) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_171_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genie::BLI2DNonUnifGrid::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_171_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genie::BLI2DNonUnifGrid::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_171_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) genie::BLI2DNonUnifGrid::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_171_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      genie::BLI2DNonUnifGrid::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_171_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::BLI2DNonUnifGrid*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_171_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genie::BLI2DNonUnifGrid::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_171_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genie::BLI2DNonUnifGrid::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_171_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genie::BLI2DNonUnifGrid::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_171_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genie::BLI2DNonUnifGrid::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G___ROOT_DICT_Numerical_171_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   genie::BLI2DNonUnifGrid* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new genie::BLI2DNonUnifGrid(*(genie::BLI2DNonUnifGrid*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::BLI2DNonUnifGrid G__TgeniecLcLBLI2DNonUnifGrid;
static int G___ROOT_DICT_Numerical_171_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::BLI2DNonUnifGrid*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::BLI2DNonUnifGrid*) (soff+(sizeof(genie::BLI2DNonUnifGrid)*i)))->~G__TgeniecLcLBLI2DNonUnifGrid();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::BLI2DNonUnifGrid*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::BLI2DNonUnifGrid*) (soff))->~G__TgeniecLcLBLI2DNonUnifGrid();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Numerical_171_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::BLI2DNonUnifGrid* dest = (genie::BLI2DNonUnifGrid*) G__getstructoffset();
   *dest = *(genie::BLI2DNonUnifGrid*) libp->para[0].ref;
   const genie::BLI2DNonUnifGrid& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::RandomGen */
static int G___ROOT_DICT_Numerical_198_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genie::RandomGen::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_198_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRandom3& obj = ((const genie::RandomGen*) G__getstructoffset())->RndKine();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_198_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRandom3& obj = ((const genie::RandomGen*) G__getstructoffset())->RndHadro();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_198_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRandom3& obj = ((const genie::RandomGen*) G__getstructoffset())->RndDec();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_198_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRandom3& obj = ((const genie::RandomGen*) G__getstructoffset())->RndFsi();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_198_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRandom3& obj = ((const genie::RandomGen*) G__getstructoffset())->RndLep();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_198_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRandom3& obj = ((const genie::RandomGen*) G__getstructoffset())->RndISel();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_198_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRandom3& obj = ((const genie::RandomGen*) G__getstructoffset())->RndGeom();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_198_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRandom3& obj = ((const genie::RandomGen*) G__getstructoffset())->RndFlux();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_198_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRandom3& obj = ((const genie::RandomGen*) G__getstructoffset())->RndEvg();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_198_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRandom3& obj = ((const genie::RandomGen*) G__getstructoffset())->RndNum();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_198_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TRandom3& obj = ((const genie::RandomGen*) G__getstructoffset())->RndGen();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_198_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((const genie::RandomGen*) G__getstructoffset())->GetSeed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_198_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::RandomGen*) G__getstructoffset())->SetSeed((long) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Numerical_198_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::RandomGen* dest = (genie::RandomGen*) G__getstructoffset();
   *dest = *(genie::RandomGen*) libp->para[0].ref;
   const genie::RandomGen& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* genie::Spline */
static int G___ROOT_DICT_Numerical_225_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::Spline* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::Spline[n];
     } else {
       p = new((void*) gvp) genie::Spline[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::Spline;
     } else {
       p = new((void*) gvp) genie::Spline;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::Spline* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::Spline(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (bool) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) genie::Spline(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), (bool) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::Spline(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
     } else {
       p = new((void*) gvp) genie::Spline(
*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::Spline(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) genie::Spline(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::Spline(*((string*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) genie::Spline(*((string*) G__int(libp->para[0])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::Spline* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::Spline(
(TNtupleD*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
     } else {
       p = new((void*) gvp) genie::Spline(
(TNtupleD*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::Spline((TNtupleD*) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) genie::Spline((TNtupleD*) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::Spline* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::Spline(
(TTree*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
     } else {
       p = new((void*) gvp) genie::Spline(
(TTree*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new genie::Spline((TTree*) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
     } else {
       p = new((void*) gvp) genie::Spline((TTree*) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::Spline* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::Spline((TSQLServer*) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) genie::Spline((TSQLServer*) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::Spline* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::Spline(
(int) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) genie::Spline(
(int) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::Spline* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::Spline(
(int) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) genie::Spline(
(int) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::Spline* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::Spline(*(genie::Spline*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) genie::Spline(*(genie::Spline*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::Spline* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new genie::Spline(*(TSpline3*) libp->para[0].ref, (int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) genie::Spline(*(TSpline3*) libp->para[0].ref, (int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((genie::Spline*) G__getstructoffset())->LoadFromXmlFile(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((genie::Spline*) G__getstructoffset())->LoadFromAsciiFile(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((genie::Spline*) G__getstructoffset())->LoadFromNtuple((TNtupleD*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2]))));
      break;
   case 2:
      G__letint(result7, 103, (long) ((genie::Spline*) G__getstructoffset())->LoadFromNtuple((TNtupleD*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((genie::Spline*) G__getstructoffset())->LoadFromTree((TTree*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2]))));
      break;
   case 2:
      G__letint(result7, 103, (long) ((genie::Spline*) G__getstructoffset())->LoadFromTree((TTree*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((genie::Spline*) G__getstructoffset())->LoadFromDBase((TSQLServer*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((genie::Spline*) G__getstructoffset())->LoadFromTSpline3(*(TSpline3*) libp->para[0].ref, (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const genie::Spline*) G__getstructoffset())->NKnots());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const genie::Spline*) G__getstructoffset())->GetKnot((int) G__int(libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::Spline*) G__getstructoffset())->GetKnotX((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::Spline*) G__getstructoffset())->GetKnotY((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::Spline*) G__getstructoffset())->XMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::Spline*) G__getstructoffset())->XMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::Spline*) G__getstructoffset())->YMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const genie::Spline*) G__getstructoffset())->Evaluate((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const genie::Spline*) G__getstructoffset())->IsWithinValidRange((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::Spline*) G__getstructoffset())->SetName(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const genie::Spline*) G__getstructoffset())->Name();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::Spline*) G__getstructoffset())->YCanBeNegative((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((const genie::Spline*) G__getstructoffset())->SaveAsXml(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), *((string*) G__int(libp->para[3])));
      G__setnull(result7);
      break;
   case 3:
      ((const genie::Spline*) G__getstructoffset())->SaveAsXml(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((const genie::Spline*) G__getstructoffset())->SaveAsXml(*(ofstream*) libp->para[0].ref, *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), *((string*) G__int(libp->para[3]))
, (bool) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((const genie::Spline*) G__getstructoffset())->SaveAsXml(*(ofstream*) libp->para[0].ref, *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), *((string*) G__int(libp->para[3])));
      G__setnull(result7);
      break;
   case 3:
      ((const genie::Spline*) G__getstructoffset())->SaveAsXml(*(ofstream*) libp->para[0].ref, *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((const genie::Spline*) G__getstructoffset())->SaveAsText(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((const genie::Spline*) G__getstructoffset())->SaveAsText(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((const genie::Spline*) G__getstructoffset())->SaveAsROOT(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((const genie::Spline*) G__getstructoffset())->SaveAsROOT(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((const genie::Spline*) G__getstructoffset())->SaveAsROOT(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 85, (long) ((const genie::Spline*) G__getstructoffset())->GetAsTGraph((int) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (bool) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) ((const genie::Spline*) G__getstructoffset())->GetAsTGraph((int) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (bool) G__int(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((const genie::Spline*) G__getstructoffset())->GetAsTGraph((int) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (bool) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((const genie::Spline*) G__getstructoffset())->GetAsTGraph((int) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((const genie::Spline*) G__getstructoffset())->GetAsTGraph((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const genie::Spline*) G__getstructoffset())->GetAsTGraph());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const genie::Spline*) G__getstructoffset())->GetAsTSpline());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((const genie::Spline*) G__getstructoffset())->FindClosestKnot((double) G__double(libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), (Option_t*) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((const genie::Spline*) G__getstructoffset())->FindClosestKnot((double) G__double(libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const genie::Spline*) G__getstructoffset())->ClosestKnotValueIsZero((double) G__double(libp->para[0]), (Option_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const genie::Spline*) G__getstructoffset())->ClosestKnotValueIsZero((double) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((genie::Spline*) G__getstructoffset())->Add(*(genie::Spline*) libp->para[0].ref, (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((genie::Spline*) G__getstructoffset())->Add(*(genie::Spline*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((genie::Spline*) G__getstructoffset())->Multiply(*(genie::Spline*) libp->para[0].ref, (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((genie::Spline*) G__getstructoffset())->Multiply(*(genie::Spline*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((genie::Spline*) G__getstructoffset())->Divide(*(genie::Spline*) libp->para[0].ref, (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((genie::Spline*) G__getstructoffset())->Divide(*(genie::Spline*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::Spline*) G__getstructoffset())->Add((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::Spline*) G__getstructoffset())->Multiply((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::Spline*) G__getstructoffset())->Divide((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const genie::Spline*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) genie::Spline::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genie::Spline::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) genie::Spline::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      genie::Spline::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((genie::Spline*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genie::Spline::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genie::Spline::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) genie::Spline::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G___ROOT_DICT_Numerical_225_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) genie::Spline::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef genie::Spline G__TgeniecLcLSpline;
static int G___ROOT_DICT_Numerical_225_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (genie::Spline*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((genie::Spline*) (soff+(sizeof(genie::Spline)*i)))->~G__TgeniecLcLSpline();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (genie::Spline*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((genie::Spline*) (soff))->~G__TgeniecLcLSpline();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G___ROOT_DICT_Numerical_225_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   genie::Spline* dest = (genie::Spline*) G__getstructoffset();
   *dest = *(genie::Spline*) libp->para[0].ref;
   const genie::Spline& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* genie */

/* genie::BLI2DGrid */

/* genie::BLI2DUnifGrid */

/* genie::BLI2DNonUnifGrid */

/* genie::RandomGen */

/* genie::Spline */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfunc_ROOT_DICT_Numerical {
 public:
  G__Sizep2memfunc_ROOT_DICT_Numerical(): p(&G__Sizep2memfunc_ROOT_DICT_Numerical::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfunc_ROOT_DICT_Numerical::*p)();
};

size_t G__get_sizep2memfunc_ROOT_DICT_Numerical()
{
  G__Sizep2memfunc_ROOT_DICT_Numerical a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritance_ROOT_DICT_Numerical() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DGrid))) {
     genie::BLI2DGrid *G__Lderived;
     G__Lderived=(genie::BLI2DGrid*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DGrid),G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid))) {
     genie::BLI2DUnifGrid *G__Lderived;
     G__Lderived=(genie::BLI2DUnifGrid*)0x1000;
     {
       genie::BLI2DGrid *G__Lpbase=(genie::BLI2DGrid*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid),G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DGrid),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid),G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid))) {
     genie::BLI2DNonUnifGrid *G__Lderived;
     G__Lderived=(genie::BLI2DNonUnifGrid*)0x1000;
     {
       genie::BLI2DGrid *G__Lpbase=(genie::BLI2DGrid*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid),G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DGrid),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid),G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline))) {
     genie::Spline *G__Lderived;
     G__Lderived=(genie::Spline*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline),G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetable_ROOT_DICT_Numerical() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* genie */
static void G__setup_memvargenie(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_genie));
   {
   }
   G__tag_memvar_reset();
}


   /* genie::BLI2DGrid */
static void G__setup_memvargeniecLcLBLI2DGrid(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DGrid));
   { genie::BLI2DGrid *p; p=(genie::BLI2DGrid*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fNX=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fNY=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fNZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,2,"fX=",0,"[fNX] ");
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,2,"fY=",0,"[fNY]  ");
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,2,"fZ=",0,"[fNZ] ");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fDX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fDY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fXmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fXmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fYmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fYmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fZmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fZmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genie::BLI2DUnifGrid */
static void G__setup_memvargeniecLcLBLI2DUnifGrid(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid));
   { genie::BLI2DUnifGrid *p; p=(genie::BLI2DUnifGrid*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genie::BLI2DNonUnifGrid */
static void G__setup_memvargeniecLcLBLI2DNonUnifGrid(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid));
   { genie::BLI2DNonUnifGrid *p; p=(genie::BLI2DNonUnifGrid*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNFillX=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNFillY=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* genie::RandomGen */
static void G__setup_memvargeniecLcLRandomGen(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLRandomGen));
   { genie::RandomGen *p; p=(genie::RandomGen*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLRandomGen),-1,-2,4,"fInstance=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TRandom3),-1,-1,4,"fRandom3=",0,"/< Mersenne Twistor");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"fCurrSeed=",0,"/< random number generator seed number");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fInitalized=",0,"/< done initializing singleton?");
   }
   G__tag_memvar_reset();
}


   /* genie::Spline */
static void G__setup_memvargeniecLcLSpline(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline));
   { genie::Spline *p; p=(genie::Spline*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_string),-1,-1,4,"fName=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fNKnots=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fXMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fXMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fYMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TSpline3),-1,-1,4,"fInterpolator=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fYCanBeNegative=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvar_ROOT_DICT_Numerical() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncgenie(void) {
   /* genie */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_genie));
   G__memfunc_setup("operator<<",996,G___ROOT_DICT_Numerical_168_0_1, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("ostream"), 1, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - stream u 'genie::Spline' - 11 - spl", (char*)NULL, (void*) G__func2void( (ostream& (*)(ostream&, const genie::Spline&))(&genie::operator<<) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLBLI2DGrid(void) {
   /* genie::BLI2DGrid */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DGrid));
   G__memfunc_setup("AddPoint",787,G___ROOT_DICT_Numerical_169_0_2, 103, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - x d - - 0 - y "
"d - - 0 - z", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Evaluate",823,G___ROOT_DICT_Numerical_169_0_3, 100, -1, -1, 0, 2, 1, 1, 8, 
"d - - 0 - x d - - 0 - y", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("XMin",380,G___ROOT_DICT_Numerical_169_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("XMax",382,G___ROOT_DICT_Numerical_169_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("YMin",381,G___ROOT_DICT_Numerical_169_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("YMax",383,G___ROOT_DICT_Numerical_169_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ZMin",382,G___ROOT_DICT_Numerical_169_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ZMax",384,G___ROOT_DICT_Numerical_169_0_9, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 6, 1, 2, 0, 
"i - - 0 - nx d - - 0 - xmin "
"d - - 0 - xmax i - - 0 - ny "
"d - - 0 - ymin d - - 0 - ymax", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("IdxZ",383,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 2, 1, 2, 8, 
"i - - 0 - ix i - - 0 - iy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G___ROOT_DICT_Numerical_169_0_12, 85, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&genie::BLI2DGrid::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G___ROOT_DICT_Numerical_169_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genie::BLI2DGrid::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G___ROOT_DICT_Numerical_169_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&genie::BLI2DGrid::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G___ROOT_DICT_Numerical_169_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&genie::BLI2DGrid::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G___ROOT_DICT_Numerical_169_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G___ROOT_DICT_Numerical_169_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genie::BLI2DGrid::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G___ROOT_DICT_Numerical_169_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genie::BLI2DGrid::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G___ROOT_DICT_Numerical_169_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genie::BLI2DGrid::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G___ROOT_DICT_Numerical_169_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genie::BLI2DGrid::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~BLI2DGrid", 849, G___ROOT_DICT_Numerical_169_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Numerical_169_0_25, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DGrid), -1, 1, 1, 1, 1, 0, "u 'genie::BLI2DGrid' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLBLI2DUnifGrid(void) {
   /* genie::BLI2DUnifGrid */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid));
   G__memfunc_setup("BLI2DUnifGrid",1125,G___ROOT_DICT_Numerical_170_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BLI2DUnifGrid",1125,G___ROOT_DICT_Numerical_170_0_2, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid), -1, 0, 6, 1, 1, 0, 
"i - - 0 - nx d - - 0 - xmin "
"d - - 0 - xmax i - - 0 - ny "
"d - - 0 - ymin d - - 0 - ymax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BLI2DUnifGrid",1125,G___ROOT_DICT_Numerical_170_0_3, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid), -1, 0, 5, 1, 1, 0, 
"i - - 0 - nx i - - 0 - ny "
"D - - 0 - x D - - 0 - y "
"D - - 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddPoint",787,(G__InterfaceMethod) NULL,103, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - x d - - 0 - y "
"d - - 0 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Evaluate",823,(G__InterfaceMethod) NULL,100, -1, -1, 0, 2, 1, 1, 8, 
"d - - 0 - x d - - 0 - y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 6, 1, 4, 0, 
"i - - 0 '0' nx d - - 0 '0' xmin "
"d - - 0 '0' xmax i - - 0 '0' ny "
"d - - 0 '0' ymin d - - 0 '0' ymax", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G___ROOT_DICT_Numerical_170_0_7, 85, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&genie::BLI2DUnifGrid::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G___ROOT_DICT_Numerical_170_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genie::BLI2DUnifGrid::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G___ROOT_DICT_Numerical_170_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&genie::BLI2DUnifGrid::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G___ROOT_DICT_Numerical_170_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&genie::BLI2DUnifGrid::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G___ROOT_DICT_Numerical_170_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G___ROOT_DICT_Numerical_170_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genie::BLI2DUnifGrid::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G___ROOT_DICT_Numerical_170_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genie::BLI2DUnifGrid::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G___ROOT_DICT_Numerical_170_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genie::BLI2DUnifGrid::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G___ROOT_DICT_Numerical_170_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genie::BLI2DUnifGrid::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("BLI2DUnifGrid", 1125, G___ROOT_DICT_Numerical_170_0_19, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid), -1, 0, 1, 1, 1, 0, "u 'genie::BLI2DUnifGrid' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BLI2DUnifGrid", 1251, G___ROOT_DICT_Numerical_170_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Numerical_170_0_21, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid), -1, 1, 1, 1, 1, 0, "u 'genie::BLI2DUnifGrid' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLBLI2DNonUnifGrid(void) {
   /* genie::BLI2DNonUnifGrid */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid));
   G__memfunc_setup("BLI2DNonUnifGrid",1424,G___ROOT_DICT_Numerical_171_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BLI2DNonUnifGrid",1424,G___ROOT_DICT_Numerical_171_0_2, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid), -1, 0, 6, 1, 1, 0, 
"i - - 0 - nx d - - 0 - xmin "
"d - - 0 - xmax i - - 0 - ny "
"d - - 0 - ymin d - - 0 - ymax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BLI2DNonUnifGrid",1424,G___ROOT_DICT_Numerical_171_0_3, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid), -1, 0, 5, 1, 1, 0, 
"i - - 0 - nx i - - 0 - ny "
"D - - 0 - x D - - 0 - y "
"D - - 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddPoint",787,(G__InterfaceMethod) NULL,103, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - x d - - 0 - y "
"d - - 0 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Evaluate",823,(G__InterfaceMethod) NULL,100, -1, -1, 0, 2, 1, 1, 8, 
"d - - 0 - x d - - 0 - y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 6, 1, 4, 0, 
"i - - 0 '0' nx d - - 0 '0' xmin "
"d - - 0 '0' xmax i - - 0 '0' ny "
"d - - 0 '0' ymin d - - 0 '0' ymax", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G___ROOT_DICT_Numerical_171_0_7, 85, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&genie::BLI2DNonUnifGrid::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G___ROOT_DICT_Numerical_171_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genie::BLI2DNonUnifGrid::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G___ROOT_DICT_Numerical_171_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&genie::BLI2DNonUnifGrid::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G___ROOT_DICT_Numerical_171_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&genie::BLI2DNonUnifGrid::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G___ROOT_DICT_Numerical_171_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G___ROOT_DICT_Numerical_171_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genie::BLI2DNonUnifGrid::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G___ROOT_DICT_Numerical_171_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genie::BLI2DNonUnifGrid::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G___ROOT_DICT_Numerical_171_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genie::BLI2DNonUnifGrid::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G___ROOT_DICT_Numerical_171_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genie::BLI2DNonUnifGrid::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("BLI2DNonUnifGrid", 1424, G___ROOT_DICT_Numerical_171_0_19, (int) ('i'), G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid), -1, 0, 1, 1, 1, 0, "u 'genie::BLI2DNonUnifGrid' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BLI2DNonUnifGrid", 1550, G___ROOT_DICT_Numerical_171_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Numerical_171_0_21, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid), -1, 1, 1, 1, 1, 0, "u 'genie::BLI2DNonUnifGrid' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLRandomGen(void) {
   /* genie::RandomGen */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLRandomGen));
   G__memfunc_setup("Instance",821,G___ROOT_DICT_Numerical_198_0_1, 85, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLRandomGen), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (genie::RandomGen* (*)())(&genie::RandomGen::Instance) ), 0);
   G__memfunc_setup("RndKine",683,G___ROOT_DICT_Numerical_198_0_2, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TRandom3), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RndHadro",786,G___ROOT_DICT_Numerical_198_0_3, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TRandom3), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RndDec",560,G___ROOT_DICT_Numerical_198_0_4, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TRandom3), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RndFsi",582,G___ROOT_DICT_Numerical_198_0_5, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TRandom3), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RndLep",581,G___ROOT_DICT_Numerical_198_0_6, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TRandom3), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RndISel",657,G___ROOT_DICT_Numerical_198_0_7, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TRandom3), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RndGeom",684,G___ROOT_DICT_Numerical_198_0_8, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TRandom3), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RndFlux",707,G___ROOT_DICT_Numerical_198_0_9, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TRandom3), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RndEvg",582,G___ROOT_DICT_Numerical_198_0_10, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TRandom3), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RndNum",596,G___ROOT_DICT_Numerical_198_0_11, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TRandom3), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RndGen",574,G___ROOT_DICT_Numerical_198_0_12, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TRandom3), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSeed",673,G___ROOT_DICT_Numerical_198_0_13, 108, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSeed",685,G___ROOT_DICT_Numerical_198_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "l - - 0 - seed", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RandomGen",891,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLRandomGen), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RandomGen",891,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLRandomGen), -1, 0, 1, 1, 4, 0, "u 'genie::RandomGen' - 11 - rgen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitRandomGenerators",2063,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "l - - 0 - seed", (char*)NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Numerical_198_0_18, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLRandomGen), -1, 1, 1, 1, 1, 0, "u 'genie::RandomGen' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgeniecLcLSpline(void) {
   /* genie::Spline */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline));
   G__memfunc_setup("Spline",619,G___ROOT_DICT_Numerical_225_0_1, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Spline",619,G___ROOT_DICT_Numerical_225_0_2, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline), -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - filename u 'string' - 0 '\"\"' xtag "
"u 'string' - 0 '\"\"' ytag g - - 0 'false' is_xml", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Spline",619,G___ROOT_DICT_Numerical_225_0_3, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline), -1, 0, 3, 1, 1, 0, 
"U 'TNtupleD' - 0 - ntuple u 'string' - 0 - xy "
"u 'string' - 0 '\"\"' cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Spline",619,G___ROOT_DICT_Numerical_225_0_4, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline), -1, 0, 3, 1, 1, 0, 
"U 'TTree' - 0 - tree u 'string' - 0 - xy "
"u 'string' - 0 '\"\"' cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Spline",619,G___ROOT_DICT_Numerical_225_0_5, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline), -1, 0, 2, 1, 1, 0, 
"U 'TSQLServer' - 0 - db u 'string' - 0 - query", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Spline",619,G___ROOT_DICT_Numerical_225_0_6, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline), -1, 0, 3, 1, 1, 0, 
"i - - 0 - nentries D - - 0 - x "
"D - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Spline",619,G___ROOT_DICT_Numerical_225_0_7, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline), -1, 0, 3, 1, 1, 0, 
"i - - 0 - nentries F - - 0 - x "
"F - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Spline",619,G___ROOT_DICT_Numerical_225_0_8, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline), -1, 0, 1, 1, 1, 0, "u 'genie::Spline' - 11 - spline", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Spline",619,G___ROOT_DICT_Numerical_225_0_9, 105, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline), -1, 0, 2, 1, 1, 0, 
"u 'TSpline3' - 11 - spline i - - 0 - nknots", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadFromXmlFile",1477,G___ROOT_DICT_Numerical_225_0_10, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - filename u 'string' - 0 - xtag "
"u 'string' - 0 - ytag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadFromAsciiFile",1661,G___ROOT_DICT_Numerical_225_0_11, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadFromNtuple",1420,G___ROOT_DICT_Numerical_225_0_12, 103, -1, -1, 0, 3, 1, 1, 0, 
"U 'TNtupleD' - 0 - nt u 'string' - 0 - xy "
"u 'string' - 0 '\"\"' cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadFromTree",1188,G___ROOT_DICT_Numerical_225_0_13, 103, -1, -1, 0, 3, 1, 1, 0, 
"U 'TTree' - 0 - tr u 'string' - 0 - xy "
"u 'string' - 0 '\"\"' cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadFromDBase",1235,G___ROOT_DICT_Numerical_225_0_14, 103, -1, -1, 0, 2, 1, 1, 0, 
"U 'TSQLServer' - 0 - db u 'string' - 0 - query", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadFromTSpline3",1542,G___ROOT_DICT_Numerical_225_0_15, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'TSpline3' - 11 - spline i - - 0 - nknots", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NKnots",605,G___ROOT_DICT_Numerical_225_0_16, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKnot",700,G___ROOT_DICT_Numerical_225_0_17, 121, -1, -1, 0, 3, 1, 1, 8, 
"i - - 0 - iknot d - - 1 - x "
"d - - 1 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKnotX",788,G___ROOT_DICT_Numerical_225_0_18, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - iknot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetKnotY",789,G___ROOT_DICT_Numerical_225_0_19, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - iknot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("XMin",380,G___ROOT_DICT_Numerical_225_0_20, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("XMax",382,G___ROOT_DICT_Numerical_225_0_21, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("YMax",383,G___ROOT_DICT_Numerical_225_0_22, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Evaluate",823,G___ROOT_DICT_Numerical_225_0_23, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsWithinValidRange",1804,G___ROOT_DICT_Numerical_225_0_24, 103, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetName",685,G___ROOT_DICT_Numerical_225_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Name",385,G___ROOT_DICT_Numerical_225_0_26, 117, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("YCanBeNegative",1349,G___ROOT_DICT_Numerical_225_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - tf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsXml",884,G___ROOT_DICT_Numerical_225_0_28, 121, -1, -1, 0, 4, 1, 1, 8, 
"u 'string' - 0 - filename u 'string' - 0 - xtag "
"u 'string' - 0 - ytag u 'string' - 0 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsXml",884,G___ROOT_DICT_Numerical_225_0_29, 121, -1, -1, 0, 5, 1, 1, 8, 
"u 'basic_ofstream<char,char_traits<char> >' 'ofstream' 1 - str u 'string' - 0 - xtag "
"u 'string' - 0 - ytag u 'string' - 0 '\"\"' name "
"g - - 0 'false' insert", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsText",1000,G___ROOT_DICT_Numerical_225_0_30, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'string' - 0 - filename u 'string' - 0 '\"%10.6f\\t%10.6f\"' format", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SaveAsROOT",903,G___ROOT_DICT_Numerical_225_0_31, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'string' - 0 - filename u 'string' - 0 '\"\"' name "
"g - - 0 'false' recreate", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAsTGraph",1050,G___ROOT_DICT_Numerical_225_0_32, 85, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TGraph), -1, 0, 5, 1, 1, 8, 
"i - - 0 '500' np g - - 0 'false' xscaling "
"g - - 0 'false' inlog d - - 0 '1.' fx "
"d - - 0 '1.' fy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAsTSpline",1171,G___ROOT_DICT_Numerical_225_0_33, 85, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TSpline3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindClosestKnot",1530,G___ROOT_DICT_Numerical_225_0_34, 121, -1, -1, 0, 4, 1, 1, 8, 
"d - - 0 - x d - - 1 - xknot "
"d - - 1 - yknot C - 'Option_t' 10 '\"-+\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClosestKnotValueIsZero",2258,G___ROOT_DICT_Numerical_225_0_35, 103, -1, -1, 0, 2, 1, 1, 8, 
"d - - 0 - x C - 'Option_t' 10 '\"-+\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G___ROOT_DICT_Numerical_225_0_36, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'genie::Spline' - 11 - spl d - - 0 '1' c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Multiply",864,G___ROOT_DICT_Numerical_225_0_37, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'genie::Spline' - 11 - spl d - - 0 '1' c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Divide",597,G___ROOT_DICT_Numerical_225_0_38, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'genie::Spline' - 11 - spl d - - 0 '1' c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G___ROOT_DICT_Numerical_225_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Multiply",864,G___ROOT_DICT_Numerical_225_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Divide",597,G___ROOT_DICT_Numerical_225_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G___ROOT_DICT_Numerical_225_0_42, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - stream", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitSpline",1023,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetSpline",1134,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildSpline",1115,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"i - - 0 - nentries D - - 0 - x "
"D - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G___ROOT_DICT_Numerical_225_0_46, 85, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&genie::Spline::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G___ROOT_DICT_Numerical_225_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genie::Spline::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G___ROOT_DICT_Numerical_225_0_48, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&genie::Spline::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G___ROOT_DICT_Numerical_225_0_49, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&genie::Spline::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G___ROOT_DICT_Numerical_225_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G___ROOT_DICT_Numerical_225_0_54, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genie::Spline::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G___ROOT_DICT_Numerical_225_0_55, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genie::Spline::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G___ROOT_DICT_Numerical_225_0_56, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&genie::Spline::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G___ROOT_DICT_Numerical_225_0_57, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&genie::Spline::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Spline", 745, G___ROOT_DICT_Numerical_225_0_58, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G___ROOT_DICT_Numerical_225_0_59, (int) ('u'), G__get_linked_tagnum(&G___ROOT_DICT_NumericalLN_geniecLcLSpline), -1, 1, 1, 1, 1, 0, "u 'genie::Spline' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfunc_ROOT_DICT_Numerical() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_global_ROOT_DICT_Numerical() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_func_ROOT_DICT_Numerical() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G___ROOT_DICT_NumericalLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ofstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_string = { "string" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_genie = { "genie" , 110 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_geniecLcLBLI2DGrid = { "genie::BLI2DGrid" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid = { "genie::BLI2DUnifGrid" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid = { "genie::BLI2DNonUnifGrid" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_TRandom3 = { "TRandom3" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_geniecLcLRandomGen = { "genie::RandomGen" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_TSpline3 = { "TSpline3" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_TNtupleD = { "TNtupleD" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_TSQLServer = { "TSQLServer" , 99 , -1 };
G__linked_taginfo G___ROOT_DICT_NumericalLN_geniecLcLSpline = { "genie::Spline" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtable_ROOT_DICT_Numerical() {
  G___ROOT_DICT_NumericalLN_TClass.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_TBuffer.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_TMemberInspector.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_TObject.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_string.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_genie.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_geniecLcLBLI2DGrid.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_TRandom3.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_geniecLcLRandomGen.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_TVectorTlEfloatgR.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_TVectorTlEdoublegR.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_TGraph.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_TSpline3.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_TNtupleD.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_TTree.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_TSQLServer.tagnum = -1 ;
  G___ROOT_DICT_NumericalLN_geniecLcLSpline.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtable_ROOT_DICT_Numerical() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_TClass);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_TBuffer);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_TObject);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_string);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_genie),0,-1,0,(char*)NULL,G__setup_memvargenie,G__setup_memfuncgenie);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DGrid),sizeof(genie::BLI2DGrid),-1,29955,(char*)NULL,G__setup_memvargeniecLcLBLI2DGrid,G__setup_memfuncgeniecLcLBLI2DGrid);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DUnifGrid),sizeof(genie::BLI2DUnifGrid),-1,61696,(char*)NULL,G__setup_memvargeniecLcLBLI2DUnifGrid,G__setup_memfuncgeniecLcLBLI2DUnifGrid);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_geniecLcLBLI2DNonUnifGrid),sizeof(genie::BLI2DNonUnifGrid),-1,61696,(char*)NULL,G__setup_memvargeniecLcLBLI2DNonUnifGrid,G__setup_memfuncgeniecLcLBLI2DNonUnifGrid);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_TRandom3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_geniecLcLRandomGen),sizeof(genie::RandomGen),-1,1792,(char*)NULL,G__setup_memvargeniecLcLRandomGen,G__setup_memfuncgeniecLcLRandomGen);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_TGraph);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_TSpline3);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_TNtupleD);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_TTree);
   G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_TSQLServer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G___ROOT_DICT_NumericalLN_geniecLcLSpline),sizeof(genie::Spline),-1,63232,(char*)NULL,G__setup_memvargeniecLcLSpline,G__setup_memfuncgeniecLcLSpline);
}
extern "C" void G__cpp_setup_ROOT_DICT_Numerical(void) {
  G__check_setup_version(30051515,"G__cpp_setup_ROOT_DICT_Numerical()");
  G__set_cpp_environment_ROOT_DICT_Numerical();
  G__cpp_setup_tagtable_ROOT_DICT_Numerical();

  G__cpp_setup_inheritance_ROOT_DICT_Numerical();

  G__cpp_setup_typetable_ROOT_DICT_Numerical();

  G__cpp_setup_memvar_ROOT_DICT_Numerical();

  G__cpp_setup_memfunc_ROOT_DICT_Numerical();
  G__cpp_setup_global_ROOT_DICT_Numerical();
  G__cpp_setup_func_ROOT_DICT_Numerical();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfunc_ROOT_DICT_Numerical();
  return;
}
class G__cpp_setup_init_ROOT_DICT_Numerical {
  public:
    G__cpp_setup_init_ROOT_DICT_Numerical() { G__add_setup_func("_ROOT_DICT_Numerical",(G__incsetup)(&G__cpp_setup_ROOT_DICT_Numerical)); G__call_setup_funcs(); }
   ~G__cpp_setup_init_ROOT_DICT_Numerical() { G__remove_setup_func("_ROOT_DICT_Numerical"); }
};
G__cpp_setup_init_ROOT_DICT_Numerical G__cpp_setup_initializer_ROOT_DICT_Numerical;

